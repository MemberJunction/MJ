name: Build and publish new package versions

on:
  push:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: "publish"
  cancel-in-progress: false

jobs:
  build-and-publish:
    name: Build and publish new versions of NPM packages
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{ github.base_ref || github.ref_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Validate change set
        run: npm run checkchange

      - name: Build packages
        run: npm run build
      
      - name: Set up git credentials
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git remote set-url origin "https://$REPO_PAT@github.com/MemberJunction/MJ"
        env:
          REPO_PAT: ${{ secrets.MJ_GH_BOT_GITHUB_TOKEN }}
      
      - name: Publish changes to npm main packages
        if: ${{ env.BRANCH == 'main' }}
        run: npm run release -- --branch origin/main --token "$NPM_TOKEN"
        env:
          NPM_TOKEN: ${{ secrets.CRAIG_BC_NPM_TOKEN }}
 
      - name: Publish changes to npm next packages
        if: ${{ env.BRANCH == 'next' }}
        run: npm run release -- --no-push --branch origin/next --prerelease-prefix beta --tag beta --token "$NPM_TOKEN"
        env:
          NPM_TOKEN: ${{ secrets.CRAIG_BC_NPM_TOKEN }}
 
  sync-next-versions:
    runs-on: ubuntu-latest
    if: ${{ (github.base_ref || github.ref_name) == 'main' }}
    needs: build-and-publish
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: 'next'

    - name: Configure Git
      run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

    - name: Sync latest version
      run: npx beachball sync

    - name: Commit and push
      run: |
        git add .
        git commit -m "Updating package versions [skip ci]"
        git push
 
  create-distribution:
    runs-on: ubuntu-latest
    if: ${{ (github.base_ref || github.ref_name) == 'main' }}
    needs: build-and-publish
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Get version string
      id: version
      run: |
        VERSION="v"$(jq -r .version packages/MJGlobal/package.json)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Create distribution artifact
      id: zip
      run: |
        node CreateMJDistribution.js
        ARTIFACT=$(cat CreateMJDistribution.log)
        echo "ARTIFACT=$ARTIFACT" >> $GITHUB_OUTPUT

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ steps.version.outputs.VERSION }}
        tag_name: ${{ steps.version.outputs.VERSION }}
        files: ${{ steps.zip.outputs.ARTIFACT }}
