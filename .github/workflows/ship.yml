name: Create PR to ship a release
on:
  workflow_dispatch:
  push:
    branches:
      - next

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine next expected version
        id: version_check
        run: |
          git fetch --all
          CURRENT_VERSION=$(jq -r .version packages/MJCore/package.json)
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          NEXT_MINOR_VERSION="${VERSION_PARTS[0]}.$(( ${VERSION_PARTS[1]} + 1 )).0"
          NEXT_PATCH_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$(( ${VERSION_PARTS[2]} + 1 ))"
          NEW_MIGRATION_FILES=$(git --no-pager diff --name-only origin/main next -- migrations/)
          if [ -n "$NEW_MIGRATION_FILES" ]; then
            echo "EXPECTED_NEXT_VERSION=$NEXT_MINOR_VERSION" >> $GITHUB_OUTPUT
          else
            echo "EXPECTED_NEXT_VERSION=$NEXT_PATCH_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Create PR for deployment
        run: gh pr create --base "$DESTINATION_BRANCH" --reviewer "$PR_REVIEWER" --title "v$EXPECTED_NEXT_VERSION" --body "" || gh pr edit --base "$DESTINATION_BRANCH" --title "$PR_TITLE" --body ""
        env:
          DESTINATION_BRANCH: prod
          EXPECTED_NEXT_VERSION: ${{ steps.version_check.outputs.EXPECTED_NEXT_VERSION }}
          GH_TOKEN: ${{ github.token }}
