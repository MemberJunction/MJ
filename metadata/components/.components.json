[
  {
    "fields": {
      "Name": "EntityBrowser",
      "Namespace": "Admin/Entities",
      "Description": "A comprehensive multi-panel dashboard component for browsing and exploring entities in a data system. Features a three-panel layout with collapsible filters, main entity list (grid/card view), and sliding details panel.",
      "Title": "Entity Browser",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/entity-browser.spec.json",
      "FunctionalRequirements": "## Entity Browser\n\n### Core Functionality\n- Display entities in a responsive grid or card layout based on user preference\n- Allow users to select view mode (grid vs card)\n- Click on an entity to slide in a details panel from the right\n- Show entity metadata including fields and relationships in the details panel\n- Provide a collapsible filter panel on the left side\n- Support sorting by multiple fields with visual indicators\n- Include a search bar for quick entity filtering\n- Provide an 'Open' button to trigger the OpenEntityRecord callback\n- Remember user's last selected entity and view preferences\n\n### UX Considerations\n- Smooth animations for panel transitions\n- Responsive design that works on different screen sizes\n- Loading states while fetching data\n- Empty states with helpful messages\n- Keyboard navigation support (arrow keys, tab, enter)\n- Visual feedback for hover and selection states\n- Maintain scroll position when switching between entities",
      "TechnicalDesign": "## Technical Design\n\n### Component Structure\n- **Root Component (EntityBrowser)**: Manages overall layout and state coordination\n- **EntityList (Child)**: Displays entities in grid/card view with sorting\n- **EntityDetails (Child)**: Sliding panel showing entity fields and relationships\n- **EntityFilter (Child)**: Collapsible filter panel with dynamic filters\n\n### State Management\n- Selected entity ID (persisted in savedUserSettings)\n- View mode (grid/card) (persisted)\n- Active filters (persisted)\n- Sort configuration (persisted)\n- Panel visibility states (details open, filters collapsed)\n- Search query\n- Loading states for async operations\n\n### Layout\n```\n+------------------+------------------------+------------------+\n|                  |                        |                  |\n|   Filter Panel   |    Entity Grid/Cards   |  Details Panel   |\n|   (Collapsible)  |    (Main Content)      |    (Sliding)     |\n|                  |                        |                  |\n|  [Schema Filter] |  +-----+  +-----+      |  Entity: Orders  |\n|  [Table Filter]  |  | Card |  | Card |     |                  |\n|  [Search Box]    |  +-----+  +-----+      |  Fields:         |\n|                  |                        |  - ID            |\n|  Sort By:        |  +-----+  +-----+      |  - CustomerID    |\n|  [Name ↓]        |  | Card |  | Card |     |  - OrderDate     |\n|                  |  +-----+  +-----+      |                  |\n|                  |                        |  Relationships:  |\n|                  |                        |  → Customers     |\n|                  |                        |  → OrderItems    |\n|                  |                        |                  |\n|                  |                        |  [Open Record]   |\n+------------------+------------------------+------------------+\n```\n\n### Data Flow\n1. Root component loads entities on mount\n2. Passes entity data to EntityList\n3. EntityList handles selection and passes selectedId up\n4. Root loads fields/relationships for selected entity\n5. Passes detailed data to EntityDetails\n6. Filter changes trigger data reload\n7. All user preferences saved via onSaveUserSettings\n\n### Interaction Patterns\n- Click entity card → Select and open details\n- Click filter → Apply and reload data\n- Click sort → Update sort and reload\n- Click 'Open' → Trigger OpenEntityRecord callback\n- Press Escape → Close details panel\n- Click outside → Close details panel"
    },
    "primaryKey": {
      "ID": "77571F8B-A4A2-4CD3-AC23-A59D6E989F5D"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.703Z",
      "checksum": "298f261f06b60bdda9d1a14286f4b0438c205324a792dca171d2da658c4cb10c"
    }
  },
  {
    "fields": {
      "Name": "EntityDetails",
      "Namespace": "Admin/Entities",
      "Description": "Sliding panel that displays detailed information about a selected entity including fields and relationships",
      "Title": "Entity Details Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/entity-details.spec.json",
      "FunctionalRequirements": "## Entity Details\n\n- Slide in from the right when an entity is selected\n- Display entity metadata at the top\n- Show fields in a formatted table\n- Display relationships with icons\n- Include 'Open Record' button\n- Support closing via X button or Escape key\n- Smooth slide animation\n- Scrollable content area",
      "TechnicalDesign": "## Design\n\n### Props\n- entity: Selected entity object\n- fields: Array of entity fields\n- relationships: Array of entity relationships\n- isOpen: Whether panel is visible\n- onClose: Callback to close panel\n- onOpenRecord: Callback to open entity record\n\n### Layout\n- Fixed position overlay\n- Slide animation using transform\n- Header with entity name and close button\n- Sections for metadata, fields, relationships\n- Sticky 'Open Record' button at bottom"
    },
    "primaryKey": {
      "ID": "894F252D-1ED3-4196-AB01-DCA71382D752"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.650Z",
      "checksum": "ac4abe9fcb7a17b49b48c476d0051ad5760759e56f9b8a8c87034c6ca203fdd8"
    }
  },
  {
    "fields": {
      "Name": "EntityList",
      "Namespace": "Admin/Entities",
      "Description": "Displays entities in a grid or card layout with sorting capabilities",
      "Title": "Entity List",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/entity-list.spec.json",
      "FunctionalRequirements": "## Entity List\n\n- Display entities in grid or card view based on viewMode prop\n- Support sorting by multiple fields\n- Handle entity selection and notify parent\n- Show loading state while data loads\n- Display record count badges\n- Highlight selected entity\n- Support keyboard navigation",
      "TechnicalDesign": "## Design\n\n### Props\n- entities: Array of entity objects\n- viewMode: 'grid' | 'card'\n- selectedEntityId: Currently selected entity\n- onSelectEntity: Callback when entity selected\n- sortBy: Current sort field\n- sortDirection: 'asc' | 'desc'\n- onSortChange: Callback for sort changes\n\n### Rendering\n- Grid mode: Compact table with columns\n- Card mode: Cards with entity info\n- Sort indicators in headers\n- Selection highlighting"
    },
    "primaryKey": {
      "ID": "85027C84-2321-4F18-9280-4959F4EC4668"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.675Z",
      "checksum": "0947520408bc2d6dc302862b6e6c80d95348072f9eb032d9c9a17f99f6f7224b"
    }
  },
  {
    "fields": {
      "Name": "EntityFilter",
      "Namespace": "Admin/Entities",
      "Description": "Collapsible filter panel for filtering entities by various criteria",
      "Title": "Entity Filter",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/entity-filter.spec.json",
      "FunctionalRequirements": "## Entity Filter\n\n- Collapsible panel on the left side\n- Filter by schema name (dropdown)\n- Filter by base table (dropdown)\n- Search box for text search\n- Clear all filters button\n- Show active filter count\n- Smooth collapse/expand animation\n- Remember collapsed state",
      "TechnicalDesign": "## Design\n\n### Props\n- filters: Current filter values\n- onFilterChange: Callback when filters change\n- schemas: Available schema options\n- tables: Available table options\n- isCollapsed: Whether panel is collapsed\n- onToggleCollapse: Callback to toggle collapse\n\n### Components\n- Collapse toggle button\n- Schema dropdown\n- Table dropdown\n- Search input\n- Clear filters button\n- Active filter badges"
    },
    "primaryKey": {
      "ID": "386543D8-C739-4C52-8FAC-E941C078AA8F"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.723Z",
      "checksum": "8aa4eb9ec4e79ea568e07278e57d380eb5eea99eaf6ec8fff3f8cebf64b16998"
    }
  },
  {
    "fields": {
      "Name": "AIModelBrowser",
      "Namespace": "AI",
      "Description": "A comprehensive AI model browser with filtering by developers and inference providers, prompt usage analytics with pie charts, and detailed model specifications",
      "Title": "AI Model Browser",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-model-browser.spec.json",
      "FunctionalRequirements": "## AI Model Browser\n\n### Core Functionality\n- Display AI models in grid or list view with comprehensive information\n- Filter models by Model Type, Status, Model Developer, and Inference Provider\n- View detailed model specifications including context window, token limits, and cost ranking\n- Display all vendors associated with a model (model developers and inference providers)\n- Show prompt run history and usage statistics for selected models\n- Visualize prompt usage with pie charts showing distribution across different prompts\n- Display performance metrics with bar charts showing average execution times\n- Show time series data for model usage over time\n- Support sorting by multiple fields with visual indicators\n- Include search functionality for quick model filtering\n- Provide 'Open' button to trigger OpenEntityRecord callback for detailed editing\n\n### Analytics Features\n- Pie chart visualization of prompt usage distribution\n- Performance bar charts showing average execution times per prompt\n- Time series chart showing model usage trends over last 7 days\n- Summary statistics including total runs, success rates, and token usage\n- Grouped vendor display by type (Model Developer vs Inference Provider)\n\n### UX Considerations\n- Collapsible filter panel with active filter count indicator\n- Sliding details panel for comprehensive model information\n- Inline analytics panel with tabbed views for different visualizations\n- Smooth animations for panel transitions and chart rendering\n- Responsive design adapting to different screen sizes\n- Loading states while fetching data\n- Empty states with helpful messages\n- Visual feedback for hover and selection states\n- Maintain user preferences for view mode and filter state",
      "TechnicalDesign": "## Architecture\n\n### Root Component (AIModelBrowser)\n- Manages overall state and data loading\n- Coordinates between filter, list, details, and analytics components\n- Handles user preferences and saved settings\n- Manages search and sort state\n\n### Child Components\n1. **AIModelList**: Displays models in grid or list view with vendor information\n2. **AIModelDetails**: Sliding panel showing comprehensive model information and vendors\n3. **AIModelFilter**: Collapsible filter panel for model type, status, and vendor filtering\n4. **AIModelAnalytics**: Inline analytics panel with charts and statistics\n\n### Data Flow\n- Root component loads all models and vendor associations\n- Filters are applied at the root level and filtered data passed to list\n- Selection in list triggers detail loading and analytics calculation\n- Analytics component processes prompt runs to generate visualizations\n\n### Chart Implementation\n- Pie charts using SVG for prompt usage distribution\n- Bar charts for performance metrics\n- Time series charts for usage trends\n- All charts are responsive and interactive"
    },
    "primaryKey": {
      "ID": "E7A334EA-53FD-40E4-A255-1DDA891D86B7"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.836Z",
      "checksum": "65265bed93f4c0d55e149b2a2ef70d91eb03106c9cf8d2e5d0808c80785cbf70"
    }
  },
  {
    "fields": {
      "Name": "AIModelList",
      "Namespace": "AI",
      "Description": "Displays AI models in grid or list view with vendor information and sorting",
      "Title": "AI Model List",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-model-list.spec.json",
      "FunctionalRequirements": "Display models with vendor counts, support grid and list views, handle sorting and selection",
      "TechnicalDesign": ""
    },
    "primaryKey": {
      "ID": "3E5B43DE-1F29-4268-8DBB-A5FA0CE56B70"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.741Z",
      "checksum": "b1bb4cfafa95f782da346475d3740888d369da9a14644829096fa666d66d3da4"
    }
  },
  {
    "fields": {
      "Name": "AIModelDetails",
      "Namespace": "AI",
      "Description": "Sliding details panel showing comprehensive model information, vendors, and usage statistics",
      "Title": "AI Model Details",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-model-details.spec.json",
      "FunctionalRequirements": "Show model specs, vendor associations grouped by type, usage statistics, and open record button",
      "TechnicalDesign": ""
    },
    "primaryKey": {
      "ID": "7B36D078-5B69-47EC-BDFB-D119524116F6"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.760Z",
      "checksum": "5b600692ed47acefe00ece8c7c6487801724b7312f6f94b5c8b554a37a4a178b"
    }
  },
  {
    "fields": {
      "Name": "AIModelFilter",
      "Namespace": "AI",
      "Description": "Collapsible filter panel for filtering models by type, status, developer, and provider",
      "Title": "AI Model Filter",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-model-filter.spec.json",
      "FunctionalRequirements": "Provide filters for model type, status, developer, and provider with active filter indicators",
      "TechnicalDesign": ""
    },
    "primaryKey": {
      "ID": "04395751-8D07-4906-BAE1-9D1789543E14"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.781Z",
      "checksum": "3f6f782742d72de4e5dbc1d296ab1164e9a3c709c46b8cb43fb476e9fd5faffa"
    }
  },
  {
    "fields": {
      "Name": "AIModelAnalytics",
      "Namespace": "AI",
      "Description": "Analytics panel with charts showing prompt usage distribution, performance metrics, and time series",
      "Title": "AI Model Analytics",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-model-analytics.spec.json",
      "FunctionalRequirements": "Display pie chart for prompt usage, bar chart for performance, time series for usage trends",
      "TechnicalDesign": ""
    },
    "primaryKey": {
      "ID": "509FF2B7-692D-490B-A282-D80FD370E5EB"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.802Z",
      "checksum": "7b8b192f0d482776468996aaa99615c1c7a4d2cbcbd7862590bdf22cfe90f00c"
    }
  },
  {
    "fields": {
      "Name": "AIPerformanceDashboard",
      "Namespace": "AI/Analytics/Performance",
      "Description": "Comprehensive dashboard for analyzing AI agent and prompt performance with time-series charts, cost analysis, and drill-down capabilities",
      "Title": "AI Performance Dashboard",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-performance-dashboard.spec.json",
      "FunctionalRequirements": "Display multi-line time series charts showing total runs, tokens, and costs over time. Support multiple time groupings: day, week, month, quarter. Dual Y-axis display (tokens on left, runs/costs on right). Click-to-drill-down on any chart point to see details for that period. Show distribution charts (pie/bar) for selected time period. Separate tabs for Agent Runs and Prompt Runs analysis",
      "TechnicalDesign": "Root component manages overall dashboard state and data loading. Handles time range selection and grouping. Coordinates drill-down state between components. Manages tab switching between Agent and Prompt views. Child components: AITimeSeriesChart for multi-line charts with dual Y-axes, AIDistributionChart for pie/bar charts showing breakdown, AIDetailTable for detailed table view, AIMetricsSummary for key metrics cards"
    },
    "primaryKey": {
      "ID": "313ED35B-462C-439F-8F56-91AD90CCB252"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:16.856Z",
      "checksum": "78e737df99d4d4d306f05658503ffb51e560734898a9287ef78c356defd75825"
    }
  },
  {
    "fields": {
      "Name": "AITimeSeriesChart",
      "Namespace": "AI/Analytics/Performance",
      "Description": "Multi-line time series chart with dual Y-axes showing AI runs, token usage, and costs over time",
      "Title": "AI Time Series Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-time-series-chart.spec.json",
      "FunctionalRequirements": "Display three data series: total runs, total tokens, total cost. Dual Y-axis configuration (left: tokens, right: runs and cost). Interactive tooltips showing all values on hover. Click on data points to trigger drill-down. Smooth line interpolation with data point markers. Legend with series toggle capability",
      "TechnicalDesign": "Uses SVG for chart rendering with custom scales. Dual Y-axis setup with synchronized tooltips. Custom tick formatters for large numbers. Responsive container with aspect ratio preservation"
    },
    "primaryKey": {
      "ID": "12796365-7678-410F-867D-3EF0598E0BEB"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.344Z",
      "checksum": "e403b363ad1b002c8cc6694f7149300d665517cc2837d6f7aa19c40a07056d5c"
    }
  },
  {
    "fields": {
      "Name": "AIDistributionChart",
      "Namespace": "AI/Analytics/Performance",
      "Description": "Pie and bar charts showing distribution of runs, tokens, and costs by agent or prompt for drill-down analysis",
      "Title": "AI Distribution Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-distribution-chart.spec.json",
      "FunctionalRequirements": "Display distribution breakdown for selected time period. Toggle between pie chart and bar chart views. Show top 10 items with 'Others' grouping. Display runs, tokens, and cost metrics. Interactive tooltips with detailed values. Color-coded segments with legend",
      "TechnicalDesign": "Aggregates data by agent/prompt. Calculates percentages. Sorts by total value. Groups small items into 'Others' category. Smooth transitions between chart types"
    },
    "primaryKey": {
      "ID": "1EBD8365-41EB-41E4-B71F-418628DB4EB5"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.393Z",
      "checksum": "5819258d295cebfb3044651f4446103c17fc97c1feeee32a550091650caf442c"
    }
  },
  {
    "fields": {
      "Name": "AIDetailTable",
      "Namespace": "AI/Analytics/Performance",
      "Description": "Detailed table view showing individual runs for drill-down analysis with sorting and filtering",
      "Title": "AI Detail Table",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-detail-table.spec.json",
      "FunctionalRequirements": "Display individual run records in a sortable table. Show key fields: timestamp, name, success status, tokens, cost, execution time. Color-coded success/failure indicators. Sortable columns with visual indicators. Paginated results for large datasets. Export to CSV functionality. Expandable rows for additional details",
      "TechnicalDesign": "Client-side sorting and pagination with 25 rows per page. Column sorting state management. Row expansion for details. CSV export functionality"
    },
    "primaryKey": {
      "ID": "D1420CCB-4502-47D5-B18C-4E268C18D659"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.417Z",
      "checksum": "0a58185c0345978f9d22d98e96913f32d4910e3dba1114f845a8b5bed5ff4daa"
    }
  },
  {
    "fields": {
      "Name": "AIMetricsSummary",
      "Namespace": "AI/Analytics/Performance",
      "Description": "Summary cards displaying key performance metrics for the selected time period",
      "Title": "AI Metrics Summary",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-metrics-summary.spec.json",
      "FunctionalRequirements": "Display key metrics in card format. Show total runs, tokens, and costs. Calculate averages per run. Display success rate percentage. Show trend indicators. Responsive card layout",
      "TechnicalDesign": "Responsive grid of metric cards. Each card shows metric name, value, and icon. Consistent styling with theme. Hover effects for additional information"
    },
    "primaryKey": {
      "ID": "57548CB2-944C-443D-8345-0F2E5CD673D1"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.437Z",
      "checksum": "63ad853c1b5fb5c56e31894278c6e72a4ea82008219c003e7e68d3e4f836f537"
    }
  },
  {
    "fields": {
      "Name": "AccountsByIndustry",
      "Namespace": "CRM/Analytics",
      "Description": "Interactive pie chart showing distribution of CRM accounts by industry with drill-down capability to view detailed account lists and individual account information",
      "Title": "Accounts by Industry",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/accounts-by-industry.spec.json",
      "FunctionalRequirements": "## Accounts by Industry Dashboard\n\n### Core Functionality\n- Display an interactive pie chart showing account distribution across industries\n- Calculate and show percentages for each industry segment\n- Support click-to-filter: clicking a pie slice filters the account list below\n- Display filtered account list with key information (name, revenue, status)\n- Enable row selection to view detailed account information in a slide-in panel\n- Provide sorting capabilities on all columns (client-side)\n- Implement pagination for large datasets (server-side via RunView)\n- Include an 'Open' button on account details to trigger OpenEntityRecord callback\n- Remember user's last selected industry and sort preferences\n\n### Visual Features\n- Smooth hover animations on pie slices with tooltips\n- Highlighted state for selected pie slice\n- Color-coded legend with industry names and counts\n- Responsive layout adapting to different screen sizes\n- Loading states during data fetching\n- Empty states with helpful messages\n- Smooth slide-in animation for detail panel\n\n### Interactive Elements\n- Click pie slice to select/deselect and filter accounts\n- Click legend items to toggle slice visibility\n- Sort columns by clicking headers\n- Select account rows to view details\n- Close detail panel via X button or clicking outside\n- Pagination controls for navigating large datasets",
      "TechnicalDesign": "## Technical Architecture\n\n### Component Structure\n- **Root Component (AccountsByIndustry)**: Manages overall state and data loading\n- **PieChart (inline)**: Chart.js-based interactive pie visualization\n- **AccountList (inline)**: Filtered, sortable table with pagination\n- **AccountDetails (inline)**: Sliding panel with comprehensive account info\n\n### State Management\n- Selected industry (persisted in savedUserSettings)\n- Sort configuration (field, direction) (persisted)\n- Current page number\n- Selected account ID\n- Detail panel visibility\n- Loading states for async operations\n\n### Data Flow\n1. Load all accounts via RunView on mount\n2. Group accounts by Industry field client-side\n3. Calculate percentages and prepare chart data\n4. Render pie chart with Chart.js\n5. Filter account list based on selected slice\n6. Load account details when row selected\n7. Persist user preferences via onSaveUserSettings\n\n### Layout Design\n```\n+-----------------------------------------------+\n|  📊 Accounts by Industry                     |\n|  ─────────────────────────                   |\n|                                               |\n|     [Interactive Pie Chart]    [Legend]      |\n|                                               |\n+-----------------------------------------------+\n|  Selected: Technology (12 accounts)          | ← Conditional\n|  ─────────────────────────────────           |\n|  Name ↕ | Revenue ↕ | Status | Type          |\n|  ─────────────────────────────────           |\n|  TechNova | $12.5M | Active | Customer   [>] |\n|  Quantum  | $75M   | Active | Customer   [>] |\n|  ─────────────────────────────────           |\n|  < 1 2 3 ... 5 >                             |\n+-----------------------------------------------+\n                          ← Slide-in Panel\n                    ┌─────────────────────┐\n                    │ Account Details  [X] │\n                    │ ──────────────       │\n                    │ Name: TechNova       │\n                    │ Revenue: $12.5M      │\n                    │ [Open Record ↗]      │\n                    └─────────────────────┘\n```\n\n### Performance Optimizations\n- Use React.memo for chart component\n- Implement useMemo for data grouping\n- Client-side filtering/sorting to reduce server calls\n- Debounced search if implemented\n- Virtual scrolling for very large lists (future)"
    },
    "primaryKey": {
      "ID": "24648BE5-0355-446F-86BC-AFF654FE77B7"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.476Z",
      "checksum": "fd066184c6eec4b5917faac876858801c2567f88ee1525ba6fe71410449a0c4c"
    }
  },
  {
    "fields": {
      "Name": "AccountsByIndustryChart",
      "Namespace": "CRM/Analytics",
      "Description": "Interactive pie chart component that visualizes account distribution by industry with click-to-filter functionality",
      "Title": "Accounts by Industry Chart",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/accounts-by-industry-chart.spec.json",
      "FunctionalRequirements": "## Pie Chart Component\n\n- Display interactive pie chart using Chart.js\n- Show industry names with counts in legend\n- Calculate and display percentages in tooltips\n- Support click-to-select functionality\n- Animate on hover with visual feedback\n- Configurable color schemes\n- Handle 'Others' grouping for small segments",
      "TechnicalDesign": "## Technical Design\n\n### Props\n- industryData: Grouped and calculated industry data\n- selectedIndustry: Currently selected slice\n- onSliceClick: Callback for slice selection\n- colorScheme: Color palette selection\n- maxIndustries: Maximum slices to show\n\n### Implementation\n- Uses Chart.js for rendering\n- Ref-based chart instance management\n- Cleanup on unmount to prevent memory leaks"
    },
    "primaryKey": {
      "ID": "013C0415-FAEB-4D15-88B7-669B353A5E0B"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.453Z",
      "checksum": "3e055d7fd049a680b467c5d30a1e68a7034c7328c86aff8215dc21eda5e2ab31"
    }
  },
  {
    "fields": {
      "Name": "AccountsByIndustryList",
      "Namespace": "CRM/Analytics",
      "Description": "Sortable, paginated table component displaying filtered account records with row selection capability",
      "Title": "Accounts by Industry List",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/accounts-by-industry-list.spec.json",
      "FunctionalRequirements": "## Account List Component\n\n- Display accounts in sortable table format\n- Support column sorting with visual indicators\n- Implement client-side pagination\n- Enable row hover effects\n- Handle row click for account selection\n- Format currency values appropriately\n- Show status badges with color coding\n- Display clear filter button",
      "TechnicalDesign": "## Technical Design\n\n### Props\n- accounts: Filtered account array\n- sortConfig: Current sort settings\n- onSort: Sort handler callback\n- onAccountClick: Row selection callback\n- currentPage: Current pagination page\n- pageSize: Items per page\n- onPageChange: Pagination callback\n\n### Features\n- Client-side sorting logic\n- Pagination calculation\n- Hover state management\n- Status badge styling"
    },
    "primaryKey": {
      "ID": "A9D9A794-7824-4865-BA6C-1C7A4FAA8427"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.496Z",
      "checksum": "42538a9d103651e0c5efc490c4fbc9b467ee8703ad7d8375017f4bb296c5f412"
    }
  },
  {
    "fields": {
      "Name": "AccountsByIndustryDetails",
      "Namespace": "CRM/Analytics",
      "Description": "Sliding detail panel that displays comprehensive account information with an open record action button",
      "Title": "Accounts by Industry Details",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/accounts-by-industry-details.spec.json",
      "FunctionalRequirements": "## Account Details Panel\n\n- Slide in from right with smooth animation\n- Display account name and industry prominently\n- Show key metrics (revenue, status, type)\n- Include contact information section\n- Display location details if available\n- Provide 'Open Record' action button\n- Support close via X button or overlay click\n- Format all data appropriately",
      "TechnicalDesign": "## Technical Design\n\n### Props\n- account: Selected account object\n- isOpen: Panel visibility state\n- onClose: Close handler callback\n- onOpenRecord: Open record callback\n\n### Layout\n- Fixed positioning overlay\n- Transform-based slide animation\n- Sections for different data types\n- Sticky header with close button\n- Scrollable content area"
    },
    "primaryKey": {
      "ID": "212F30E2-C117-49FA-9278-46B587FFC745"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.515Z",
      "checksum": "63dc02622bf721700ab2deee241b60918685bc192a1318b87e2f5066e0c1f7fa"
    }
  },
  {
    "fields": {
      "Name": "RecentDealsList",
      "Namespace": "CRM/Sales",
      "Description": "Displays a list of the most recent deals with stage indicators and key metrics",
      "Title": "Recent Deals List",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/recent-deals-list.spec.json",
      "FunctionalRequirements": "## Recent Deals Display\n\n### Core Features\n- Display 10-20 most recent deals\n- Show key deal information: name, account, amount, stage\n- Color-code rows by stage for quick visual scanning\n- Format currency values appropriately\n- Show days until close date\n\n### Interactivity\n- Clickable rows to view deal details\n- Hover effects for better UX\n- Optional refresh button to reload data\n\n### Visual Design\n- Clean table layout with good spacing\n- Stage badges with semantic colors\n- Highlight deals closing soon\n- Show probability as progress bar",
      "TechnicalDesign": "## Implementation\n\n### Data Loading\n- Use RunView to load recent deals\n- Sort by CreatedDate DESC or CloseDate ASC\n- Limit to configurable number of rows (default 15)\n\n### Stage Styling\n- Prospecting: Gray\n- Qualification: Blue\n- Proposal: Yellow\n- Negotiation: Orange\n- Closed Won: Green\n- Closed Lost: Red\n\n### Calculations\n- Days to close: CloseDate - today\n- Expected revenue: Amount * Probability / 100\n- Format amounts with currency symbol"
    },
    "primaryKey": {
      "ID": "24F6BC4C-E8C1-4757-8C95-3CC65FF9B0B7"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.534Z",
      "checksum": "7962527d72f554304dfe6c0594f0119a11e684c26555797559d89219ea97f92a"
    }
  },
  {
    "fields": {
      "Name": "DealsByStageBoard",
      "Namespace": "CRM/Sales",
      "Description": "Kanban-style board showing deals grouped by stage with drag-and-drop support",
      "Title": "Deals by Stage Board",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deals-by-stage-board.spec.json",
      "FunctionalRequirements": "## Kanban Board for Deal Pipeline\n\n### Core Features\n- Display deals grouped by stage in columns\n- Show deal cards with key information\n- Display total value per stage\n- Count of deals per stage\n- Visual indicators for deal priority\n\n### Card Information\n- Deal name\n- Account name\n- Amount formatted as currency\n- Days to close\n- Probability indicator\n\n### Visual Design\n- Column headers with stage colors\n- Card shadows and hover effects\n- Responsive column layout\n- Scrollable columns for many deals",
      "TechnicalDesign": "## Implementation\n\n### Data Loading\n- Single RunView call to load all deals\n- Client-side grouping by Stage\n- Calculate totals per stage\n\n### Layout\n- Flexbox for horizontal column layout\n- Fixed height columns with scroll\n- Responsive breakpoints for mobile\n\n### Stage Order\n1. Prospecting\n2. Qualification\n3. Proposal\n4. Negotiation\n5. Closed Won\n6. Closed Lost"
    },
    "primaryKey": {
      "ID": "EE5E1201-0177-495F-8D28-8F79011C829B"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:17.550Z",
      "checksum": "8ca2d1f9a8af96eff45584cfb3c0a7671facb516dbf5e9278999b69f6d83a775"
    }
  },
  {
    "fields": {
      "Name": "DealVelocityChart",
      "Namespace": "CRM/Analytics",
      "Description": "Interactive line chart showing deal velocity metrics over time with multiple view modes",
      "Title": "Deal Velocity Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-velocity-chart.spec.json",
      "FunctionalRequirements": "## Deal Velocity Analysis\n\n### Core Features\n- Track deal creation and closure rates over time\n- Show multiple metrics: count, value, velocity, conversion\n- Configurable time ranges (1 month to 2 years)\n- Dynamic bucketing (daily, weekly, monthly)\n- Summary statistics cards\n\n### Metric Types\n1. **Deal Count**: New, Won, Lost deals over time\n2. **Deal Value**: Pipeline and Won value trends\n3. **Velocity**: Average days to close and win rate\n4. **Conversion**: Cumulative conversion rate trend\n\n### Visual Design\n- Line charts with smooth curves\n- Color-coded metrics\n- Interactive tooltips\n- Responsive layout\n- Summary cards with key metrics",
      "TechnicalDesign": "## Implementation\n\n### Data Loading\n- Single RunView call with date range filter\n- Load deals created OR closed in range\n- Use __mj_CreatedAt for creation tracking\n\n### Time Bucketing\n- Daily buckets for 1 month\n- Weekly buckets for 3-6 months\n- Monthly buckets for 1-2 years\n\n### Metrics Calculation\n- Deal count by bucket\n- Sum values by bucket\n- Average cycle time (close - create)\n- Win rate percentage\n- Cumulative conversion rate\n\n### Chart.js Configuration\n- Line chart with tension for smooth curves\n- Multiple Y-axes for different scales\n- Custom tooltips with formatting\n- Responsive aspect ratio"
    },
    "primaryKey": {
      "ID": "7C4E2A8F-9B3D-4E2A-8F5C-1E7D3A9B4C6E"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.099Z",
      "checksum": "4154f9b12d6f002bca8d91b034df2154d91c4eca0edcfedb3318548cdddb4b56"
    }
  },
  {
    "fields": {
      "Name": "DealVelocitySummary",
      "Namespace": "CRM/Analytics",
      "Description": "Summary statistics cards showing key deal metrics including total deals, won deals, win rate, and values",
      "Title": "Deal Velocity Summary",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-velocity-summary.spec.json",
      "FunctionalRequirements": "## Deal Velocity Summary\n\n### Purpose\nDisplay key deal metrics in a grid of summary cards\n\n### Metrics Displayed\n- Total Deals count\n- Won Deals count\n- Win Rate percentage\n- Total Pipeline Value\n- Won Deal Value\n\n### Visual Design\n- Grid layout responsive to screen size\n- Color-coded cards with left border accent\n- Large metric values with labels\n- Currency formatting for values\n- Percentage formatting for rates",
      "TechnicalDesign": "## Implementation\n\n### Props\n- deals: Array of deal records\n- Standard props (utilities, styles, components, callbacks, savedUserSettings, onSaveUserSettings)\n\n### Calculations\n- Filter deals by stage for counts\n- Calculate win rate from closed deals\n- Sum amounts for value metrics\n\n### Layout\n- CSS Grid with auto-fit columns\n- Minimum 150px column width\n- Cards with padding and border accent\n- Responsive font sizes"
    },
    "primaryKey": {
      "ID": "563130CE-4016-4640-94AD-9161A94B122F"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.123Z",
      "checksum": "cb7ed3929221a9439f13bc5984e94881ec97ccd3f6b47aba03715ef9fb272207"
    }
  },
  {
    "fields": {
      "Name": "DealVelocityPeriodDetails",
      "Namespace": "CRM/Analytics",
      "Description": "Modal component displaying a sortable table of deals for a selected time period with drill-down capability",
      "Title": "Deal Velocity Period Details",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-velocity-period-details.spec.json",
      "FunctionalRequirements": "## Deal Velocity Period Details\n\n### Purpose\nShow detailed list of deals for a selected time period from the chart\n\n### Features\n- Full-screen modal overlay\n- Sortable table with deal information\n- Click to select individual deal\n- Stage badges with colors\n- Currency formatting\n- Date formatting\n\n### Table Columns\n- Deal Name (sortable)\n- Stage (visual badge)\n- Amount (sortable, currency)\n- Close Date (sortable)\n- Created Date (sortable)\n\n### Interactions\n- Click column headers to sort\n- Click row to view deal details\n- Click outside or X to close",
      "TechnicalDesign": "## Implementation\n\n### Props\n- periodData: Selected period information\n- deals: Array of deals in period\n- onClose: Callback to close modal\n- onDealSelect: Callback for deal selection\n- Standard props\n\n### State Management\n- sortBy: Current sort field\n- sortDirection: ASC or DESC\n\n### Sorting Logic\n- Date fields parsed for comparison\n- Numeric amount comparison\n- String comparison for names\n\n### Visual Design\n- Fixed position overlay\n- White modal with rounded corners\n- Alternating row colors\n- Hover effects on rows\n- Stage color coding"
    },
    "primaryKey": {
      "ID": "F80A3DFF-5B28-4718-B470-898F66341E69"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.147Z",
      "checksum": "8026c88b57dbd87d8d1cb336d5ec2b5acbffeeb6e43a2218f1d1a1cda02449c6"
    }
  },
  {
    "fields": {
      "Name": "DealVelocityDealDetail",
      "Namespace": "CRM/Analytics",
      "Description": "Modal component showing detailed information about a specific deal with an option to open the full record",
      "Title": "Deal Velocity Deal Detail",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-velocity-deal-detail.spec.json",
      "FunctionalRequirements": "## Deal Velocity Deal Detail\n\n### Purpose\nDisplay detailed information about a selected deal\n\n### Information Shown\n- Deal Name (header)\n- Amount with currency formatting\n- Current Stage\n- Close Date\n- Probability percentage\n- Deal Source (if available)\n- Next Step (if available)\n\n### Actions\n- Open record button (icon only)\n- Close modal (X button or click outside)\n\n### Visual Design\n- Compact modal overlay\n- Grid layout for fields\n- Prominent amount display\n- Icon-only open button",
      "TechnicalDesign": "## Implementation\n\n### Props\n- deal: Deal entity object\n- onClose: Callback to close modal\n- Standard props with callbacks\n\n### Layout\n- Fixed position overlay\n- Centered modal (500px max width)\n- Grid layout for field pairs\n- Sticky action button at bottom\n\n### Callbacks\n- Uses callbacks.OpenEntityRecord\n- Passes entity name and ID\n- Closes modal after opening"
    },
    "primaryKey": {
      "ID": "678ABE45-531A-45A7-981D-A8B3C9D4C376"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.168Z",
      "checksum": "babc3fda8154fa2c7f729556acb0e2f107478367b3f2973d2acd74da6fc3ee8e"
    }
  },
  {
    "fields": {
      "Name": "USAccountHeatmap",
      "Namespace": "CRM/Geography",
      "Description": "Interactive choropleth map showing account distribution across US states with drill-down capability",
      "Title": "US Account Distribution Map",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/us-account-heatmap.spec.json",
      "FunctionalRequirements": "## US Account Heatmap\n\n### Core Features\n- Choropleth map visualization of US states\n- Color intensity based on account concentration\n- Two view modes: by count or by revenue\n- Interactive hover tooltips with state metrics\n- Click states to see detailed account list\n- Summary statistics cards\n\n### Map Visualization\n- D3.js powered interactive map\n- Blue gradient color scheme\n- State abbreviations on map\n- Dynamic legend showing value range\n- Gray states indicate no accounts\n\n### State Drill-Down\n- Modal with account list for selected state\n- Shows account name, city, industry, revenue\n- Direct links to open account records\n- Sortable table columns",
      "TechnicalDesign": "## Implementation\n\n### Data Loading\n- Single RunView to load all accounts\n- Client-side aggregation by state\n- Calculate counts and revenue totals\n\n### Map Rendering\n- D3.js with TopoJSON for US geography\n- AlbersUSA projection\n- Sequential color scale\n- SVG-based rendering\n\n### Interactivity\n- Hover events for tooltips\n- Click events for drill-down\n- Dynamic tooltip positioning\n- State highlighting on hover\n\n### Performance\n- Efficient D3 rendering\n- Client-side data processing\n- Lazy TopoJSON loading\n- Proper cleanup on re-render"
    },
    "primaryKey": {
      "ID": "AB3DF794-99C3-4A3E-8C84-EF3E5175A568"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.189Z",
      "checksum": "023814f2bc60ac519c5af7a28c4eeec444a236b58e0828535df436474f7278d6"
    }
  },
  {
    "fields": {
      "Name": "SalesPipelineDashboard",
      "Namespace": "CRM/Dashboards",
      "Description": "Comprehensive dashboard showing pipeline health, velocity metrics, and team performance with interactive charts",
      "Title": "Sales Pipeline Dashboard",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-pipeline-dashboard.spec.json",
      "FunctionalRequirements": "- Display key pipeline metrics in cards\n- Show pipeline stages in kanban view\n- Provide date filtering with presets and custom ranges\n- Visualize pipeline data with interactive charts\n- Show team performance leaderboard\n- Display recent activity feed\n- Enable drill-down into any metric or stage\n- Support card and list views for deals\n- Allow opening deals in external application",
      "TechnicalDesign": "Main dashboard component that orchestrates multiple sub-components. Manages global state for deals and activities data. Implements date filtering logic. Renders ApexCharts for visualizations. Uses composition pattern with sub-components for modularity."
    },
    "primaryKey": {
      "ID": "91A09357-0580-45C1-BB54-24B688D3CAD1"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.213Z",
      "checksum": "9d71278f5fcc71250ac1ed4288799820704d0199132b85b1028c74b4f59858e7"
    }
  },
  {
    "fields": {
      "Name": "DealVelocityMetrics",
      "Namespace": "CRM/Analytics",
      "Description": "Analyze and visualize the speed of deals through the sales pipeline with detailed stage-by-stage metrics",
      "Title": "Deal Velocity Metrics",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-velocity-metrics.spec.json",
      "FunctionalRequirements": "## Deal Velocity Metrics\n\n### Purpose\nAnalyze and visualize the speed of deals through the sales pipeline with detailed stage-by-stage metrics.\n\n### Core Features\n- **Stage Duration Analysis**: Time spent in each stage\n- **Bottleneck Detection**: Identify slow-moving stages\n- **Trend Analysis**: Historical velocity changes\n- **Rep Comparison**: Compare velocity across team\n- **Cohort Analysis**: Group deals by characteristics\n- **Interactive Heatmap**: Using ECharts for visualization\n- **Slide-out Details**: Deep dive into specific metrics\n- **Export Capabilities**: Download metrics as CSV\n\n### Visualizations\n- Heatmap showing stage durations\n- Line charts for trend analysis\n- Box plots for distribution\n- Comparison matrices",
      "TechnicalDesign": "## Implementation\n\n### Components\n- Main: DealVelocityMetrics\n- Sub-components:\n  - VelocityHeatmap: Stage duration visualization\n  - TrendChart: Historical trends\n  - RepComparison: Team performance\n  - MetricsExport: CSV export functionality\n\n### Data Processing\n- Calculate stage durations\n- Identify outliers and bottlenecks\n- Generate cohort groupings\n- Statistical analysis"
    },
    "primaryKey": {
      "ID": "39C8E50F-976E-45D1-A439-CD8ABD5377CC"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.236Z",
      "checksum": "6a690713e694440bae47c3ea2d9264843fa61f4fe2b8bc548573b61fd556d732"
    }
  },
  {
    "fields": {
      "Name": "DealVelocityTrendChart",
      "Namespace": "CRM/Analytics",
      "Description": "Displays historical trends of deal velocity across stages over time",
      "Title": "Deal Velocity Trend Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-velocity-trend-chart.spec.json",
      "FunctionalRequirements": "## Trend Chart Sub-component\n\n### Purpose\nDisplays historical trends of deal velocity across stages over time.\n\n### Core Features\n- Line chart showing velocity trends\n- Multiple stage series\n- Smooth line rendering\n- Interactive tooltips with rounded values\n- Clickable data points\n- Customizable time range\n- Focus on series functionality",
      "TechnicalDesign": "## Implementation\n\n### Chart Library\n- Uses ECharts for rendering\n- Line chart with smooth curves\n- Manages chart lifecycle\n- Proper disposal on unmount\n\n### Data Processing\n- Receives pre-calculated trend data\n- Formats tooltips with rounded values\n- Handles click events for drill-down"
    },
    "primaryKey": {
      "ID": "A5EC4AE9-59E8-41F9-BBD2-59CE14869B4C"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.252Z",
      "checksum": "a4bef3c7e9ac97a7ca1703089f23e1e1c59d907969f9b1881a8bdb91f1690b8e"
    }
  },
  {
    "fields": {
      "Name": "DealVelocityDistributionChart",
      "Namespace": "CRM/Analytics",
      "Description": "Displays statistical distribution of deal velocities using box plots",
      "Title": "Deal Velocity Distribution Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-velocity-distribution-chart.spec.json",
      "FunctionalRequirements": "## Distribution Chart Sub-component\n\n### Purpose\nDisplays statistical distribution of deal velocities using box plots.\n\n### Core Features\n- Box plot visualization for each stage\n- Shows quartiles, median, min/max values\n- Interactive tooltips with statistics\n- Clickable elements for drill-down\n- Statistical calculations using simple-statistics\n- Visual emphasis on hover",
      "TechnicalDesign": "## Implementation\n\n### Chart Library\n- Uses ECharts box plot series\n- Calculates quartiles and outliers\n- Manages chart lifecycle\n\n### Statistical Processing\n- Uses simple-statistics library\n- Calculates min, Q1, median, Q3, max\n- Handles edge cases with insufficient data"
    },
    "primaryKey": {
      "ID": "7F0E3D4A-E194-4EE7-9820-65AB83083A99"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.271Z",
      "checksum": "402e3d412d40128772525a465e80c1cf6d12bb0df3b093cd7a6b6940ed449394"
    }
  },
  {
    "fields": {
      "Name": "ProductRevenueMatrix",
      "Namespace": "CRM/Analytics",
      "Description": "Visualize product performance across customers and time periods in an interactive matrix format with treemap and sparklines",
      "Title": "Product Revenue Matrix",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/product-revenue-matrix.spec.json",
      "FunctionalRequirements": "## Product Revenue Matrix\n\n### Purpose\nVisualize product performance across customers and time periods in an interactive matrix format.\n\n### Core Features\n- **Product/Customer Matrix**: Cross-reference sales data\n- **Time Period Analysis**: Monthly, quarterly, yearly views\n- **Growth Indicators**: Show trends with sparklines\n- **Profitability Metrics**: Margin analysis per product\n- **Interactive Treemap**: Using Highcharts visualization\n- **Product Categories**: Group products hierarchically\n- **Slide-out Details**: Product performance deep-dive\n- **Filtering & Sorting**: Multiple sort options\n\n### Visualizations\n- Treemap for product hierarchy\n- Matrix grid with color coding\n- Sparklines for trends\n- Bubble chart for volume/value analysis",
      "TechnicalDesign": "## Implementation\n\n### Components\n- Main: ProductRevenueMatrix\n- Sub-components:\n  - RevenueTreemap: Hierarchical product visualization\n  - ProductMatrix: Grid view of products\n  - TrendSparkline: Mini trend charts\n  - ProductDetails: Detailed analysis panel\n\n### Data Processing\n- Aggregate sales by product and period\n- Calculate margins and profitability\n- Generate trend data\n- Build hierarchical structures"
    },
    "primaryKey": {
      "ID": "11036C9C-3AC6-4026-B3CC-74A8C28D831B"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.289Z",
      "checksum": "f71a9a5808c6d96a1fca3ab0ba9bce7a2da516a655e1339fdbe50987f000d19f"
    }
  },
  {
    "fields": {
      "Name": "InvoiceStatusDashboard",
      "Namespace": "CRM/Finance",
      "Description": "Track invoice statuses, payment timelines, and accounts receivable aging with actionable insights and collection metrics",
      "Title": "Invoice Status Dashboard",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/invoice-status-dashboard.spec.json",
      "FunctionalRequirements": "## Invoice Status Dashboard\n\n### Purpose\nTrack invoice statuses, payment timelines, and accounts receivable aging with actionable insights.\n\n### Core Features\n- **Status Overview**: Pie chart of invoice statuses\n- **Aging Analysis**: Outstanding invoice aging buckets\n- **Payment Timeline**: Calendar view of due dates\n- **Customer Balance**: Top debtors and credit risks\n- **Collection Metrics**: DSO and collection efficiency\n- **Interactive Charts**: Using Plotly for rich visuals\n- **Slide-out Actions**: Quick actions for overdue invoices\n- **Card/List Views**: Multiple display options\n\n### Visualizations\n- Donut chart for status distribution\n- Waterfall chart for cash flow\n- Heatmap calendar for due dates\n- Bar charts for aging analysis",
      "TechnicalDesign": "## Implementation\n\n### Components\n- Main: InvoiceStatusDashboard\n- Sub-components:\n  - StatusOverview: Pie chart summary\n  - AgingChart: Aging buckets visualization\n  - PaymentCalendar: Due date heatmap\n  - CustomerBalances: Top debtor list\n  - ActionPanel: Quick actions slide-out\n\n### Calculations\n- Days Sales Outstanding (DSO)\n- Aging buckets (0-30, 31-60, 61-90, 90+)\n- Collection rate trends\n- Average payment time"
    },
    "primaryKey": {
      "ID": "7FCF004A-87E5-47FA-AF21-C7FCC1F4D319"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.728Z",
      "checksum": "ad7f6fe823820398bb8b2f83aba9b0989e0581468b057484105f94f234c33716"
    }
  },
  {
    "fields": {
      "Name": "Customer360View",
      "Namespace": "CRM/Customer",
      "Description": "Comprehensive customer profile showing all interactions, transactions, and insights in a unified tabbed interface",
      "Title": "Customer 360 View",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/customer-360-view.spec.json",
      "FunctionalRequirements": "- Display comprehensive customer profile with key metrics\n- Show interaction timeline chronologically\n- Display contacts and deals associated with account\n- Calculate and show engagement score\n- Provide tabbed interface for different views\n- Enable drill-down into related entities\n- Show customer insights and recommendations",
      "TechnicalDesign": "Main orchestrator component that loads customer data and manages sub-components. Uses parallel data loading for performance. Calculates engagement score based on activities and deals. Implements tab-based navigation with state persistence."
    },
    "primaryKey": {
      "ID": "5788F55E-11FE-4732-B98E-CF9A66EA145A"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.762Z",
      "checksum": "240ba4b55d216fe24dcc636188b41c39b64c8d8aa1f7c1f502974d905fd2f5f2"
    }
  },
  {
    "fields": {
      "Name": "FinancialAnalyticsDashboard",
      "Namespace": "CRM/Finance",
      "Description": "Comprehensive financial overview with revenue trends, forecasting, and profitability analysis with export capabilities",
      "Title": "Financial Analytics Dashboard",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/financial-analytics-dashboard.spec.json",
      "FunctionalRequirements": "## Financial Analytics Dashboard\n\n### Purpose\nComprehensive financial overview with revenue trends, forecasting, and profitability analysis.\n\n### Core Features\n- **Revenue Trends**: Historical and projected revenue\n- **Cash Flow Analysis**: Income vs expenses tracking\n- **Profitability Metrics**: Margin analysis by product/customer\n- **Forecast Modeling**: AI-powered predictions\n- **Budget vs Actual**: Variance analysis\n- **Interactive Gauges**: Using Recharts for KPIs\n- **Slide-out Reports**: Detailed financial reports\n- **Export Options**: PDF and Excel export\n\n### Visualizations\n- Area charts for revenue trends\n- Gauge charts for KPIs\n- Waterfall charts for P&L\n- Scatter plots for correlation analysis",
      "TechnicalDesign": "## Implementation\n\n### Components\n- Main: FinancialAnalyticsDashboard\n- Sub-components:\n  - RevenueTrend: Time series analysis\n  - CashFlowChart: Income/expense flow\n  - ProfitabilityMatrix: Margin analysis\n  - ForecastModel: Predictive analytics\n  - KPIGauges: Performance indicators\n\n### Features\n- Real-time calculations\n- Statistical forecasting\n- Responsive charts\n- Export functionality"
    },
    "primaryKey": {
      "ID": "D06D4A6B-F272-445D-8839-E5D1A4253381"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.786Z",
      "checksum": "8c9f17257dd888a37e9db4abdee0f88f3620ca362dbf20626b537ed569a1c163"
    }
  },
  {
    "fields": {
      "Name": "WinLossAnalysis",
      "Namespace": "CRM/Analytics",
      "Description": "Analyze patterns in won and lost deals to identify success factors and improvement areas with AI-powered insights",
      "Title": "Win/Loss Analysis",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/win-loss-analysis.spec.json",
      "FunctionalRequirements": "## Win/Loss Analysis\n\n### Purpose\nAnalyze patterns in won and lost deals to identify success factors and improvement areas.\n\n### Core Features\n- **Win/Loss Ratios**: By rep, product, industry\n- **Reason Analysis**: Common win/loss reasons\n- **Competitive Analysis**: Win rates vs competitors\n- **Time-based Trends**: Historical win rate changes\n- **Factor Correlation**: Key success indicators\n- **Interactive Sankey**: Using AG Grid for flow visualization\n- **Slide-out Insights**: AI-generated recommendations\n- **Comparative Views**: Side-by-side analysis\n\n### Visualizations\n- Sankey diagram for deal flow\n- Heatmap for factor correlation\n- Grouped bar charts for comparisons\n- Word cloud for reasons",
      "TechnicalDesign": "## Implementation\n\n### Components\n- Main: WinLossAnalysis\n- Sub-components:\n  - WinRateMatrix: Multi-dimensional analysis\n  - ReasonCloud: Visual reason distribution\n  - CompetitiveChart: Competitor comparison\n  - FactorAnalysis: Success correlation\n  - InsightsPanel: AI recommendations\n\n### Analysis Methods\n- Statistical correlation\n- Pattern recognition\n- Trend analysis\n- Comparative metrics"
    },
    "primaryKey": {
      "ID": "69A0DF56-869F-4D88-8EA3-BCBAB2AC96C3"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.808Z",
      "checksum": "307e832d89bee66c973efa8581164113b3a78acf15534ba603d395a05ed7c4bd"
    }
  },
  {
    "fields": {
      "Name": "FunnelChart",
      "Namespace": "CRM/Analytics",
      "Description": "Sub-component of SalesFunnelVisualization that renders the funnel visualization",
      "Title": "Funnel Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/funnel-chart.spec.json",
      "FunctionalRequirements": "## Funnel Chart Component\n\n### Purpose\nRenders the interactive funnel visualization showing deal progression through pipeline stages.\n\n### Features\n- Display funnel segments for each stage\n- Show counts or values based on view mode\n- Calculate and display conversion rates\n- Animate segments on render\n- Handle click events for stage selection\n- Color-coded stages with gradients\n- Lost deals indicator\n\n### Visual Design\n- Decreasing width for funnel effect\n- Stage name and value labels\n- Conversion rate percentages\n- Hover effects with scale transform\n- CSS animations for smooth entry",
      "TechnicalDesign": "## Implementation\n\n### Props\n- funnelData: Array of stage data with counts, values, and conversion rates\n- closedLost: Data for lost deals\n- viewMode: 'count' or 'value' display mode\n- onStageClick: Callback for stage selection\n\n### Rendering\n- CSS-based funnel visualization\n- Inline styles for dynamic widths\n- Animation delays for staggered effect"
    },
    "primaryKey": {
      "ID": "1ED87375-C64F-490B-A2F4-9AD267E9429B"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.826Z",
      "checksum": "b6bfc03b9e900fa9dc7c4b6d355f61cb196dedb0b3f98ac0243b3ff3cf95d88c"
    }
  },
  {
    "fields": {
      "Name": "StageDetailsPanel",
      "Namespace": "CRM/Analytics",
      "Description": "Slide-out panel showing details for a selected pipeline stage",
      "Title": "Stage Details Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/stage-details-panel.spec.json",
      "FunctionalRequirements": "## Stage Details Panel\n\n### Purpose\nSlide-out panel displaying deals for a selected pipeline stage with filtering and sorting.\n\n### Features\n- Slide in/out animation from right\n- Stage header with name and metrics\n- Toggle between card and list views\n- Sort deals by amount, date, or probability\n- Filter deals by name\n- Display deal cards or list items\n- Close button and animation\n\n### Interactions\n- Click to open deal record\n- Sort and filter controls\n- View mode toggle\n- Smooth transitions",
      "TechnicalDesign": "## Implementation\n\n### Props\n- selectedStage: Stage data object with deals\n- isPanelOpen: Boolean for visibility\n- displayMode: 'cards' or 'list'\n- onClose: Callback to close panel\n- onDisplayModeChange: Callback for view mode\n- onOpenDeal: Callback to open deal record\n\n### State\n- sortBy: Current sort field\n- filterText: Search filter\n\n### Layout\n- Fixed position overlay\n- Transform-based animation\n- Scrollable content area"
    },
    "primaryKey": {
      "ID": "5DD52B0E-BBBA-41C7-8D1E-CDCEA4A64BAC"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.842Z",
      "checksum": "fb555907e66735fc92867b3e8391d709aebf1f3ded368195aeb0a11df17ee047"
    }
  },
  {
    "fields": {
      "Name": "DealCard",
      "Namespace": "CRM/Analytics",
      "Description": "Card view component for individual deals",
      "Title": "Deal Card",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-card.spec.json",
      "FunctionalRequirements": "## Deal Card Component\n\n### Purpose\nDisplay individual deal information in a card format with interactive elements.\n\n### Features\n- Deal name and amount display\n- Currency formatting\n- Date formatting\n- Probability indicator with color coding\n- Hover effects\n- Click to open deal record\n\n### Visual Design\n- Card with border and padding\n- Hover scale effect\n- Probability badge with semantic colors\n- Clean typography",
      "TechnicalDesign": "## Implementation\n\n### Props\n- deal: Deal entity object\n- onOpenDeal: Callback to open deal record\n\n### Styling\n- Background color based on state\n- Border and shadow effects\n- Probability color coding:\n  - >= 70%: Green\n  - >= 40%: Yellow\n  - < 40%: Red"
    },
    "primaryKey": {
      "ID": "4E58FCE0-E5DA-4930-8E84-987355D5F429"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.859Z",
      "checksum": "7e7b26f018c4e3c294da3a612cb777f808576aadea2708fc7ef0efa38d6feed5"
    }
  },
  {
    "fields": {
      "Name": "DealList",
      "Namespace": "CRM/Analytics",
      "Description": "List view component for deals with tabular display",
      "Title": "Deal List",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deal-list.spec.json",
      "FunctionalRequirements": "- Display deals in a clean table format\n- Show deal name, account, stage, and amount\n- Include open icon button for external navigation\n- Show hover effects on rows\n- Color-code stage badges\n- Support row click for selection",
      "TechnicalDesign": "Renders deals in table format with hover states. Formats currency values. Includes Font Awesome icon for opening deals externally. Stage badges use dynamic colors from stageColors prop."
    },
    "primaryKey": {
      "ID": "3A79D7B7-5DCF-43A2-9233-41F44B710109"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.877Z",
      "checksum": "a8adfa43969ee6b4a3840083ddb73c63fcc0a236a7da8a25af64b1583494da5d"
    }
  },
  {
    "fields": {
      "Name": "PipelineKanban",
      "Namespace": "CRM/Dashboards",
      "Description": "Kanban board visualization of sales pipeline stages",
      "Title": "Pipeline Kanban",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/pipeline-kanban.spec.json",
      "FunctionalRequirements": "- Display all pipeline stages in a horizontal grid\n- Show deal count and total value for each stage\n- Use stage-specific colors for visual distinction\n- Make each stage card clickable for drill-down\n- Show hover effects on stage cards",
      "TechnicalDesign": "Renders a responsive grid of stage cards. Filters deals by stage and calculates metrics. Uses color-coded borders and hover animations. Formats currency values using helper function."
    },
    "primaryKey": {
      "ID": "BDAF0B52-4947-42C9-BB7E-500850A5D546"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.893Z",
      "checksum": "138e56ae1e949f11e83d90fc78b2b8ad7db01f1f678755a0c6ee5d03ea63ac2a"
    }
  },
  {
    "fields": {
      "Name": "TeamLeaderboard",
      "Namespace": "CRM/Dashboards",
      "Description": "Leaderboard showing top sales representatives performance",
      "Title": "Team Leaderboard",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/team-leaderboard.spec.json",
      "FunctionalRequirements": "## Team Leaderboard\n\n### Purpose\nDisplay top performing sales representatives with key metrics.\n\n### Features\n- Ranked list of sales reps\n- Key metrics: deals closed, revenue, win rate\n- Visual ranking indicators\n- Click to view rep details\n- Top 3 highlighting",
      "TechnicalDesign": "## Implementation\n\n### Props\n- repData: Array of rep performance objects\n- onRepClick: Callback for rep selection\n\n### Display\n- Ranked table with medals for top 3\n- Formatted metrics\n- Hover effects"
    },
    "primaryKey": {
      "ID": "AF678208-F9A6-49F6-B07F-ECB656E3AF4D"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:18.907Z",
      "checksum": "a1be365c6eb47abe7585cf79239211211e1e46445d809755f819d8822bf342f8"
    }
  },
  {
    "fields": {
      "Name": "ActivityFeed",
      "Namespace": "CRM/Dashboards",
      "Description": "Real-time feed of sales activities and updates",
      "Title": "Activity Feed",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/activity-feed.spec.json",
      "FunctionalRequirements": "## Activity Feed\n\n### Purpose\nDisplay recent sales activities in a timeline format.\n\n### Features\n- Chronological activity list\n- Activity type icons\n- Timestamps and descriptions\n- User avatars or initials\n- Click to view activity details",
      "TechnicalDesign": "## Implementation\n\n### Props\n- activities: Array of activity objects\n- onActivityClick: Callback for activity selection\n\n### Display\n- Timeline layout\n- Activity cards with metadata\n- Time formatting"
    },
    "primaryKey": {
      "ID": "85657926-0D16-4456-BAE1-65D0074883AE"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.173Z",
      "checksum": "80e32462c90db201f77fd7e2fec50cefc1c565220c73bfeff347e013edff78f6"
    }
  },
  {
    "fields": {
      "Name": "RepDetailsPanel",
      "Namespace": "CRM/Dashboards",
      "Description": "Slide-out panel showing detailed sales rep performance metrics",
      "Title": "Rep Details Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/rep-details-panel.spec.json",
      "FunctionalRequirements": "## Rep Details Panel\n\n### Purpose\nSlide-out panel showing detailed sales rep performance metrics.\n\n### Features\n- Rep name and title header\n- Performance metrics cards\n- Deal pipeline breakdown\n- Recent activities list\n- Performance chart\n- Close button",
      "TechnicalDesign": "## Implementation\n\n### Props\n- rep: Selected rep object\n- isOpen: Panel visibility\n- onClose: Close callback\n\n### Layout\n- Fixed position slide-out\n- Header with rep info\n- Metrics grid\n- Scrollable content"
    },
    "primaryKey": {
      "ID": "BA6116B3-38DE-4B29-969B-813303205237"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.191Z",
      "checksum": "16460edc97a4e07d6ca7cf41102e15664efb0215ba42d859e09259702bfc6e34"
    }
  },
  {
    "fields": {
      "Name": "VelocityHeatmap",
      "Namespace": "CRM/Analytics",
      "Description": "Heatmap visualization of deal velocity across stages",
      "Title": "Velocity Heatmap",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/velocity-heatmap.spec.json",
      "FunctionalRequirements": "## Velocity Heatmap\n\n### Purpose\nVisualize deal velocity across stages using a heatmap.\n\n### Features\n- Grid-based heatmap\n- Color intensity for velocity\n- Stage labels\n- Time period labels\n- Hover tooltips\n- Legend",
      "TechnicalDesign": "## Implementation\n\n### Props\n- velocityData: 2D array of velocity values\n- stages: Array of stage names\n- periods: Array of time periods\n\n### Visualization\n- Grid cells with color gradients\n- ECharts heatmap chart"
    },
    "primaryKey": {
      "ID": "2DE87833-422D-4998-AE62-0A542AFDDECD"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.211Z",
      "checksum": "4bba82847537c577ed5ee7f45bca0c8151378f8fcc2385b4f297ff74a588e9f8"
    }
  },
  {
    "fields": {
      "Name": "TrendChart",
      "Namespace": "CRM/Analytics",
      "Description": "Time series chart showing velocity trends",
      "Title": "Trend Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/trend-chart.spec.json",
      "FunctionalRequirements": "## Trend Chart\n\n### Purpose\nDisplay velocity trends over time.\n\n### Features\n- Line chart with multiple series\n- Time axis\n- Velocity metrics\n- Smooth curves\n- Interactive tooltips\n- Legend",
      "TechnicalDesign": "## Implementation\n\n### Props\n- trendData: Array of time series data\n- metrics: Array of metric names\n\n### Chart\n- ECharts line chart\n- Multiple series\n- Responsive sizing"
    },
    "primaryKey": {
      "ID": "9B23D940-5CBB-46E7-AEAF-43E508DC5AB9"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.229Z",
      "checksum": "27ea32c818d04926889b03a33d5cbf8c9796cbf6637ded893e19907c1462b731"
    }
  },
  {
    "fields": {
      "Name": "DistributionChart",
      "Namespace": "CRM/Analytics",
      "Description": "Distribution chart showing deal velocity spread",
      "Title": "Distribution Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/distribution-chart.spec.json",
      "FunctionalRequirements": "## Distribution Chart\n\n### Purpose\nShow distribution of deal velocity values.\n\n### Features\n- Histogram or box plot\n- Statistical indicators\n- Outlier detection\n- Hover details",
      "TechnicalDesign": "## Implementation\n\n### Props\n- distributionData: Array of velocity values\n- bins: Number of histogram bins\n\n### Visualization\n- ECharts histogram"
    },
    "primaryKey": {
      "ID": "ACC670C6-8F9D-4CF6-97BF-E199F08A8F46"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.248Z",
      "checksum": "f3d323c7c22c17a83465048544ce01e814de3fcaef1929b51a360cf0642b6651"
    }
  },
  {
    "fields": {
      "Name": "MetricsPanel",
      "Namespace": "CRM/Analytics",
      "Description": "Panel showing key velocity metrics and statistics",
      "Title": "Metrics Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/metrics-panel.spec.json",
      "FunctionalRequirements": "## Metrics Panel\n\n### Purpose\nDisplay key velocity metrics and statistics.\n\n### Features\n- Metric cards grid\n- Average velocity\n- Conversion rates\n- Stage bottlenecks\n- Trend indicators",
      "TechnicalDesign": "## Implementation\n\n### Props\n- metrics: Object with calculated metrics\n\n### Layout\n- Grid of metric cards\n- Icons and labels\n- Formatted values"
    },
    "primaryKey": {
      "ID": "7BB956EB-66CB-48A0-AEA3-AF0418552DAB"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.265Z",
      "checksum": "342bb30776f0ba5c31467333034affe591709609b812596af6ae5563677914d9"
    }
  },
  {
    "fields": {
      "Name": "RevenueTreemap",
      "Namespace": "CRM/Analytics",
      "Description": "Treemap visualization of revenue by product hierarchy",
      "Title": "Revenue Treemap",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/revenue-treemap.spec.json",
      "FunctionalRequirements": "## Revenue Treemap\n\n### Purpose\nVisualize revenue by product hierarchy using a treemap.\n\n### Features\n- Hierarchical treemap\n- Size by revenue\n- Color by growth\n- Hover details\n- Click to drill down",
      "TechnicalDesign": "## Implementation\n\n### Props\n- revenueData: Hierarchical revenue data\n- onProductClick: Drill-down callback\n\n### Visualization\n- Highcharts treemap"
    },
    "primaryKey": {
      "ID": "0875BF12-5D94-4AE1-BDF0-DA12FF010B0B"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.282Z",
      "checksum": "838d836164ec78fbaf5ca4af88bc979c665d127d4ecad27658620a16ad03ed3b"
    }
  },
  {
    "fields": {
      "Name": "ProductMatrix",
      "Namespace": "CRM/Analytics",
      "Description": "Matrix grid showing products vs customers with revenue values",
      "Title": "Product Matrix",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/product-matrix.spec.json",
      "FunctionalRequirements": "## Product Matrix\n\n### Purpose\nDisplay products vs customers revenue matrix.\n\n### Features\n- Grid matrix layout\n- Products as rows\n- Customers as columns\n- Revenue values in cells\n- Heat coloring\n- Totals row/column",
      "TechnicalDesign": "## Implementation\n\n### Props\n- matrixData: 2D revenue array\n- products: Product names\n- customers: Customer names\n\n### Display\n- Table with fixed headers\n- Scrollable content\n- Color coding"
    },
    "primaryKey": {
      "ID": "F790E008-8D7B-463F-8782-DB2F54940632"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.299Z",
      "checksum": "1d402e9d73ba2a63ce618ccfdb016f70476f8f0295a59d8f5df72fc395c3de40"
    }
  },
  {
    "fields": {
      "Name": "ProductDetailsPanel",
      "Namespace": "CRM/Analytics",
      "Description": "Slide-out panel with detailed product performance metrics",
      "Title": "Product Details Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/product-details-panel.spec.json",
      "FunctionalRequirements": "## Product Details Panel\n\n### Purpose\nSlide-out panel with detailed product performance metrics.\n\n### Features\n- Product info header\n- Revenue metrics\n- Customer breakdown\n- Trend chart\n- Top customers list",
      "TechnicalDesign": "## Implementation\n\n### Props\n- product: Selected product data\n- isOpen: Panel visibility\n- onClose: Close callback"
    },
    "primaryKey": {
      "ID": "2411CDC8-E8C7-43AE-8A88-47BB36610CF7"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.316Z",
      "checksum": "6f92108540ce617d5af3d3c0fb55bcba6f785dbe6a465895fc36e5d59526c824"
    }
  },
  {
    "fields": {
      "Name": "StatusOverview",
      "Namespace": "CRM/Finance",
      "Description": "Overview cards showing invoice status summary",
      "Title": "Status Overview",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/status-overview.spec.json",
      "FunctionalRequirements": "## Status Overview\n\n### Purpose\nDisplay invoice status summary cards.\n\n### Features\n- Status counts\n- Total amounts\n- Color coding\n- Percentage breakdown",
      "TechnicalDesign": "## Implementation\n\n### Props\n- statusData: Object with status counts and amounts\n\n### Display\n- Grid of status cards\n- Semantic colors"
    },
    "primaryKey": {
      "ID": "0E82885F-8585-47D7-BEA6-45FF0A24A87C"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.331Z",
      "checksum": "cb3de8cebcbf8afda657bcaa72386dd085c99c791cb14832ed5a1bb246bd9121"
    }
  },
  {
    "fields": {
      "Name": "AgingChart",
      "Namespace": "CRM/Finance",
      "Description": "Chart showing accounts receivable aging buckets",
      "Title": "Aging Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/aging-chart.spec.json",
      "FunctionalRequirements": "## Aging Chart\n\n### Purpose\nVisualize accounts receivable aging buckets.\n\n### Features\n- Bar chart by age buckets\n- 0-30, 31-60, 61-90, 90+ days\n- Amount totals\n- Color coding by severity",
      "TechnicalDesign": "## Implementation\n\n### Props\n- agingData: Array of bucket data\n\n### Chart\n- Plotly bar chart\n- Color gradients"
    },
    "primaryKey": {
      "ID": "35DEDFC4-3AFE-44E2-8B7A-A33C744C727B"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.560Z",
      "checksum": "8d42ceb64923826e96deabd91cf0d780c77561122b4d3b8b2aa090f780732667"
    }
  },
  {
    "fields": {
      "Name": "CustomerBalances",
      "Namespace": "CRM/Finance",
      "Description": "Table showing customer outstanding balances",
      "Title": "Customer Balances",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/customer-balances.spec.json",
      "FunctionalRequirements": "## Customer Balances\n\n### Purpose\nDisplay customer outstanding balances table.\n\n### Features\n- Sortable table\n- Customer name, balance, age\n- Click for details\n- Pagination",
      "TechnicalDesign": "## Implementation\n\n### Props\n- balances: Array of customer balances\n- onCustomerClick: Selection callback"
    },
    "primaryKey": {
      "ID": "006F919E-BFE6-4A4D-9B05-000FA1EA4B5E"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.580Z",
      "checksum": "75ea48524b2fa5d3c23c40a0e23ab51cb27c29cc164f073dee0ea3147f54cbe9"
    }
  },
  {
    "fields": {
      "Name": "ActionPanel",
      "Namespace": "CRM/Finance",
      "Description": "Panel with collection actions and follow-up tasks",
      "Title": "Action Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/action-panel.spec.json",
      "FunctionalRequirements": "## Action Panel\n\n### Purpose\nPanel with collection actions and tasks.\n\n### Features\n- Action buttons\n- Task list\n- Priority indicators\n- Quick actions",
      "TechnicalDesign": "## Implementation\n\n### Props\n- actions: Array of available actions\n- tasks: Array of tasks"
    },
    "primaryKey": {
      "ID": "CB69FAE3-E6FE-4A68-95DF-D695440191F2"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.601Z",
      "checksum": "f98e8b13609cd67f47adaaba6089fa52fd123766c07b12a7b08d6966f64cd69e"
    }
  },
  {
    "fields": {
      "Name": "CustomerHeader",
      "Namespace": "CRM/Customer",
      "Description": "Header section with customer summary information",
      "Title": "Customer Header",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/customer-header.spec.json",
      "FunctionalRequirements": "## Customer Header\n\n### Purpose\nDisplay customer summary information at the top.\n\n### Features\n- Customer name and logo\n- Key metrics\n- Contact info\n- Status badges",
      "TechnicalDesign": "## Implementation\n\n### Props\n- customer: Customer entity\n- metrics: Key metrics object"
    },
    "primaryKey": {
      "ID": "94A07EAB-6AA6-4E71-8AE5-744EAE855FB0"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.620Z",
      "checksum": "f60255646044f279586ab0a4b83d4b331c26ba475a2661ec7fb6092519d6d28f"
    }
  },
  {
    "fields": {
      "Name": "TabNavigation",
      "Namespace": "CRM/Customer",
      "Description": "Tab navigation component for switching between customer views",
      "Title": "Tab Navigation",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/tab-navigation.spec.json",
      "FunctionalRequirements": "## Tab Navigation\n\n### Purpose\nProvides tab-based navigation for switching between different views.\n\n### Features\n- Multiple tab support\n- Active tab indication\n- Tab change callbacks\n- Responsive layout",
      "TechnicalDesign": "## Implementation\n\n### Props\n- tabs: Array of tab configurations\n- activeTab: Currently active tab\n- onTabChange: Tab selection callback"
    },
    "primaryKey": {
      "ID": "A4FD56DF-352D-4EA9-9619-F0318D932449"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.637Z",
      "checksum": "f742e759048c6cefdb378e26ee3eb81391d1cdb3c7b177d23911b285dcc654e6"
    }
  },
  {
    "fields": {
      "Name": "OverviewTab",
      "Namespace": "CRM/Customer",
      "Description": "Overview tab showing customer summary and key metrics",
      "Title": "Overview Tab",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/overview-tab.spec.json",
      "FunctionalRequirements": "## Overview Tab\n\n### Purpose\nDisplays summary information and key metrics in the overview tab.\n\n### Features\n- Summary cards\n- Key metrics display\n- Recent activity\n- Quick actions",
      "TechnicalDesign": "## Implementation\n\n### Props\n- data: Overview data object\n- metrics: Key metrics to display\n- onAction: Action handler"
    },
    "primaryKey": {
      "ID": "6D3868E3-E374-42F5-88E3-315183ED141D"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.654Z",
      "checksum": "410cb7cc929e587c53f2a422597a51f53b3bd3c3739814769b35b4ed728dbb65"
    }
  },
  {
    "fields": {
      "Name": "TimelineTab",
      "Namespace": "CRM/Customer",
      "Description": "Timeline tab showing customer interaction history",
      "Title": "Timeline Tab",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/timeline-tab.spec.json",
      "FunctionalRequirements": "## Timeline Tab\n\n### Purpose\nDisplays chronological timeline of events and activities.\n\n### Features\n- Chronological event display\n- Event filtering\n- Date range selection\n- Event type icons",
      "TechnicalDesign": "## Implementation\n\n### Props\n- events: Array of timeline events\n- dateRange: Date filter range\n- filters: Event type filters"
    },
    "primaryKey": {
      "ID": "36FF4254-CA53-48F8-8B5A-D56124A9890A"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.669Z",
      "checksum": "09ad17de26bcd24b07c931d1bc89fac68ced0245028707c14af54fcb99a7f937"
    }
  },
  {
    "fields": {
      "Name": "ContactsTab",
      "Namespace": "CRM/Customer",
      "Description": "Contacts tab showing related contacts and roles",
      "Title": "Contacts Tab",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/contacts-tab.spec.json",
      "FunctionalRequirements": "## Contacts Tab\n\n### Purpose\nDisplays and manages contact information in a tabular format.\n\n### Features\n- Contact list display\n- Search and filter\n- Sort by columns\n- Contact details view",
      "TechnicalDesign": "## Implementation\n\n### Props\n- contacts: Array of contact records\n- onContactSelect: Contact selection handler\n- filters: Active filters"
    },
    "primaryKey": {
      "ID": "9F9D8195-FFAB-4373-A081-4DB11AD4B313"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.686Z",
      "checksum": "5cc17089852734e80770bcdf620c9e9a1482148f4538d69a904f4a86593e99a9"
    }
  },
  {
    "fields": {
      "Name": "DealsTab",
      "Namespace": "CRM/Customer",
      "Description": "Deals tab showing customer opportunities and pipeline",
      "Title": "Deals Tab",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/deals-tab.spec.json",
      "FunctionalRequirements": "## Deals Tab\n\n### Purpose\nDisplays and manages deal/opportunity information.\n\n### Features\n- Deal pipeline view\n- Deal value and stage\n- Progress tracking\n- Quick actions",
      "TechnicalDesign": "## Implementation\n\n### Props\n- deals: Array of deal records\n- onDealSelect: Deal selection handler\n- viewMode: Display mode (list/cards)"
    },
    "primaryKey": {
      "ID": "F07042F2-82E7-4B5F-B308-CE32A0B55D65"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.702Z",
      "checksum": "38de447a50fbaddec182d2cef9793af6b6e77aaf0d4778b89ff8eac4a649b1ee"
    }
  },
  {
    "fields": {
      "Name": "InsightsTab",
      "Namespace": "CRM/Customer",
      "Description": "Insights tab with AI-powered recommendations and analytics",
      "Title": "Insights Tab",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/insights-tab.spec.json",
      "FunctionalRequirements": "## Insights Tab\n\n### Purpose\nProvides analytical insights and recommendations.\n\n### Features\n- AI-generated insights\n- Trend analysis\n- Recommendations\n- Performance metrics",
      "TechnicalDesign": "## Implementation\n\n### Props\n- insights: Array of insight items\n- metrics: Performance metrics\n- onInsightAction: Action handler for insights"
    },
    "primaryKey": {
      "ID": "FF789802-937E-432F-8640-566B9765C7D3"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.715Z",
      "checksum": "7936dc8e6939be9181eb41d3c3f95685423a66fa52d5c8a8f8c463d5ac52afd6"
    }
  },
  {
    "fields": {
      "Name": "KPIGauges",
      "Namespace": "CRM/Finance",
      "Description": "Gauge charts showing key performance indicators",
      "Title": "KPI Gauges",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/kpi-gauges.spec.json",
      "FunctionalRequirements": "## KPI Gauges\n\n### Purpose\nDisplay key financial metrics as gauge charts.\n\n### Features\n- Multiple gauge displays\n- Target vs actual\n- Color coding by performance\n- Percentage indicators",
      "TechnicalDesign": "## Implementation\n\n### Props\n- kpis: Array of KPI data\n\n### Display\n- ApexCharts radial gauges\n- Dynamic colors"
    },
    "primaryKey": {
      "ID": "5B3FEB25-06D4-4D3E-A291-60B2DD7A1A80"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.945Z",
      "checksum": "836da340b3a434e4c9b0df8de1c2923904680a172d99246c646b88db52f73650"
    }
  },
  {
    "fields": {
      "Name": "RevenueTrendChart",
      "Namespace": "CRM/Finance",
      "Description": "Line chart showing revenue trends over time",
      "Title": "Revenue Trend Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/revenue-trend-chart.spec.json",
      "FunctionalRequirements": "## Revenue Trend Chart\n\n### Purpose\nVisualize revenue trends over time.\n\n### Features\n- Multi-line chart\n- Invoice vs deal revenue\n- Time period selection\n- Trend indicators",
      "TechnicalDesign": "## Implementation\n\n### Props\n- trendData: Array of time-series data\n- period: Selected time period"
    },
    "primaryKey": {
      "ID": "27FED2FD-0548-4A40-A7A3-4B8AF2F52BCA"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.965Z",
      "checksum": "fab97699142f1d1aec785ca80af180c23a71210ccf8637fd6482d41cf1e733f4"
    }
  },
  {
    "fields": {
      "Name": "CashFlowChart",
      "Namespace": "CRM/Finance",
      "Description": "Waterfall chart showing cash flow components",
      "Title": "Cash Flow Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/cash-flow-chart.spec.json",
      "FunctionalRequirements": "## Cash Flow Chart\n\n### Purpose\nVisualize cash flow patterns.\n\n### Features\n- Waterfall chart\n- Inflows vs outflows\n- Running balance\n- Category breakdown",
      "TechnicalDesign": "## Implementation\n\n### Props\n- cashFlowData: Array of cash flow entries\n\n### Chart\n- ApexCharts waterfall\n- Color coding"
    },
    "primaryKey": {
      "ID": "5C052DDB-87E7-4ED3-B7E7-76EA41EFD979"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:19.983Z",
      "checksum": "f7dbbed12af63df4b73b3643052eccb8d462f3b613b4562200964c29c15fe8dc"
    }
  },
  {
    "fields": {
      "Name": "ForecastModel",
      "Namespace": "CRM/Finance",
      "Description": "Predictive model chart with revenue forecasting",
      "Title": "Forecast Model",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/forecast-model.spec.json",
      "FunctionalRequirements": "## Forecast Model\n\n### Purpose\nDisplay financial forecasting and projections.\n\n### Features\n- Predictive models\n- Scenario analysis\n- Confidence intervals\n- Adjustment controls",
      "TechnicalDesign": "## Implementation\n\n### Props\n- forecastData: Forecast projections\n- scenarios: Different scenarios\n- onScenarioChange: Scenario selection"
    },
    "primaryKey": {
      "ID": "EA2F92F8-7AE9-4DCF-BBB0-9FB8FBE9CB9A"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.001Z",
      "checksum": "a6758c84e87f4fc109cf07928ed73fcb1a0b828893623cf1a17440ba96915d61"
    }
  },
  {
    "fields": {
      "Name": "DetailsPanel",
      "Namespace": "CRM/Finance",
      "Description": "Slide-out panel with detailed financial breakdowns",
      "Title": "Details Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/details-panel.spec.json",
      "FunctionalRequirements": "## Details Panel\n\n### Purpose\nSlide-out panel for displaying detailed information.\n\n### Features\n- Slide-in/out animation\n- Tabbed content\n- Close button\n- Responsive layout",
      "TechnicalDesign": "## Implementation\n\n### Props\n- data: Detail data object\n- isOpen: Panel open state\n- onClose: Close handler"
    },
    "primaryKey": {
      "ID": "2A325BAF-B1B7-4494-B73C-0C158B58B3B6"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.018Z",
      "checksum": "e81f8e0c75e312cc186540fd513d0d974d324dbb76593a523f8161a3148fa80a"
    }
  },
  {
    "fields": {
      "Name": "OverviewCards",
      "Namespace": "CRM/Analytics",
      "Description": "Overview cards showing win/loss summary metrics",
      "Title": "Overview Cards",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/overview-cards.spec.json",
      "FunctionalRequirements": "## Overview Cards\n\n### Purpose\nDisplays summary information in card format.\n\n### Features\n- Multiple metric cards\n- Color-coded indicators\n- Trend arrows\n- Click actions",
      "TechnicalDesign": "## Implementation\n\n### Props\n- cards: Array of card configurations\n- onCardClick: Card click handler"
    },
    "primaryKey": {
      "ID": "2D19BF47-4E7A-4AA1-B2B9-60501E059A52"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.036Z",
      "checksum": "e0d8fa254d8fa65a9c2c632b5cbb8105002982cce98505fdaaf3c37fb7cbeff0"
    }
  },
  {
    "fields": {
      "Name": "WinRateByOwner",
      "Namespace": "CRM/Analytics",
      "Description": "Chart showing win rates by deal owner",
      "Title": "Win Rate By Owner",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/win-rate-by-owner.spec.json",
      "FunctionalRequirements": "## Win Rate By Owner\n\n### Purpose\nVisualize win rates by deal owner/sales rep.\n\n### Features\n- Bar chart visualization\n- Owner performance comparison\n- Win/loss ratios\n- Sortable by metrics",
      "TechnicalDesign": "## Implementation\n\n### Props\n- ownerData: Array of owner performance metrics\n- sortBy: Sort field\n- onOwnerClick: Owner selection handler"
    },
    "primaryKey": {
      "ID": "3B4C4BAF-DECE-4CBB-B8C0-7D1855B74248"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.053Z",
      "checksum": "c9e617180864e37f7d9de78ef3393e8996b55dde8f7ca2f815242f9c991dc402"
    }
  },
  {
    "fields": {
      "Name": "LossReasons",
      "Namespace": "CRM/Analytics",
      "Description": "Chart analyzing common reasons for lost deals",
      "Title": "Loss Reasons",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/loss-reasons.spec.json",
      "FunctionalRequirements": "## Loss Reasons\n\n### Purpose\nAnalyze and display reasons for lost deals.\n\n### Features\n- Categorized loss reasons\n- Frequency analysis\n- Pie/bar chart options\n- Drill-down capability",
      "TechnicalDesign": "## Implementation\n\n### Props\n- lossData: Array of loss reason categories\n- chartType: Chart display type\n- onReasonClick: Reason selection handler"
    },
    "primaryKey": {
      "ID": "DB21D074-FF07-45FE-A4E4-A49FF3E834B6"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.069Z",
      "checksum": "116d5ff891ca768300c913080410576b12a17a9f8c62992efc0803771ccafd4a"
    }
  },
  {
    "fields": {
      "Name": "FactorAnalysis",
      "Namespace": "CRM/Analytics",
      "Description": "Analysis of factors contributing to wins and losses",
      "Title": "Factor Analysis",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/factor-analysis.spec.json",
      "FunctionalRequirements": "## Factor Analysis\n\n### Purpose\nAnalyze factors contributing to wins and losses.\n\n### Features\n- Multi-factor comparison\n- Correlation analysis\n- Heat map visualization\n- Statistical insights",
      "TechnicalDesign": "## Implementation\n\n### Props\n- factors: Array of factor data\n- correlations: Correlation matrix\n- onFactorSelect: Factor selection handler"
    },
    "primaryKey": {
      "ID": "BA8D5132-64E5-412B-A1B1-F5BC1D64F938"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.086Z",
      "checksum": "a20d5b5f20a5c68bdc04911f86e621195607b288f4c5b9f0e768c899d3b4e060"
    }
  },
  {
    "fields": {
      "Name": "CompetitiveAnalysis",
      "Namespace": "CRM/Analytics",
      "Description": "Competitive win/loss analysis by competitor",
      "Title": "Competitive Analysis",
      "Type": "Table",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/competitive-analysis.spec.json",
      "FunctionalRequirements": "## Competitive Analysis\n\n### Purpose\nAnalyze competitive win/loss performance.\n\n### Features\n- Competitor comparison\n- Win rates by competitor\n- Strengths/weaknesses\n- Market positioning",
      "TechnicalDesign": "## Implementation\n\n### Props\n- competitorData: Array of competitor metrics\n- selectedCompetitor: Currently selected"
    },
    "primaryKey": {
      "ID": "FDB1174B-38C3-42DB-BF4C-EAA441C3C60A"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.102Z",
      "checksum": "6b6e5f6c1416515d4f8a260f09dadeec3bfc2192013027e21e3435538e0db3f6"
    }
  },
  {
    "fields": {
      "Name": "InsightsPanel",
      "Namespace": "CRM/Analytics",
      "Description": "AI-powered insights panel with recommendations",
      "Title": "Insights Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/insights-panel.spec.json",
      "FunctionalRequirements": "## Insights Panel\n\n### Purpose\nDisplay actionable insights and recommendations.\n\n### Features\n- AI-generated recommendations\n- Priority ranking\n- Action items\n- Success metrics",
      "TechnicalDesign": "## Implementation\n\n### Props\n- insights: Array of insight items\n- priority: Priority filter\n- onActionClick: Action handler"
    },
    "primaryKey": {
      "ID": "9790872E-55C5-4ED9-9F4A-55078EC02359"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.434Z",
      "checksum": "a5ef3206270568fa3c4457983bb1eaa6f924ddd529c1f8f2e74ded89dffa88b8"
    }
  },
  {
    "fields": {
      "Name": "PipelineMetricsCards",
      "Namespace": "CRM/Dashboard",
      "Description": "Displays key pipeline metrics in a grid of interactive cards",
      "Title": "Pipeline Metrics Cards",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-pipeline-dashboard-pipeline-metrics-cards.spec.json",
      "FunctionalRequirements": "- Display 5 key metrics: Pipeline Value, Active Deals, Win Rate, Avg Deal Size, Avg Cycle Time\n- Make Pipeline Value, Active Deals, and Win Rate cards clickable\n- Format currency values appropriately (K/M notation)\n- Show hover effects on clickable cards\n- Pass filtered deals to callback on click",
      "TechnicalDesign": "Component renders a responsive grid of metric cards. Uses formatCurrency helper for value formatting. Implements hover states with transform and shadow effects. Filters deals based on metric type before passing to callback."
    },
    "primaryKey": {
      "ID": "58241649-8AA4-493D-AFC1-1E33B1B68847"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.466Z",
      "checksum": "3e3ee1ba8ee0813c9a90ddfe07b1ce6c471c3611bf987773b85e5c71da9d528b"
    }
  },
  {
    "fields": {
      "Name": "PipelineKanban",
      "Namespace": "CRM/Dashboard",
      "Description": "Visual representation of deals across pipeline stages in a kanban board layout",
      "Title": "Pipeline Kanban",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-pipeline-dashboard-pipeline-kanban.spec.json",
      "FunctionalRequirements": "- Display all pipeline stages in a horizontal grid\n- Show deal count and total value for each stage\n- Use stage-specific colors for visual distinction\n- Make each stage card clickable for drill-down\n- Show hover effects on stage cards",
      "TechnicalDesign": "Renders a responsive grid of stage cards. Filters deals by stage and calculates metrics. Uses color-coded borders and hover animations. Formats currency values using helper function."
    },
    "primaryKey": {
      "ID": "04D4E691-B894-453A-A026-F30DE4A8E252"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.487Z",
      "checksum": "906e20f3c6ab6b5262aac6fc58113af04f9e94d09fa1c691b1c9adddb3518eda"
    }
  },
  {
    "fields": {
      "Name": "DealCards",
      "Namespace": "CRM/Dashboard",
      "Description": "Displays deals in an interactive card layout with open action",
      "Title": "Deal Cards",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-pipeline-dashboard-deal-cards.spec.json",
      "FunctionalRequirements": "- Display deal cards in a responsive grid\n- Show deal name, amount, account, close date, probability, and stage\n- Format currency values appropriately\n- Include open icon button for external navigation\n- Show hover effects on cards\n- Color-code stage badges",
      "TechnicalDesign": "Renders deal information in card format with hover states. Uses formatCurrency for amounts. Includes Font Awesome icon for opening deals externally. Stage badges use dynamic colors from stageColors prop."
    },
    "primaryKey": {
      "ID": "7DF575B5-271A-44D2-B580-20E15C5561D1"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.506Z",
      "checksum": "82aa721b71d66d0989d4210d5c6493641d5f23f3b5888c3ae84792f768ddd61c"
    }
  },
  {
    "fields": {
      "Name": "DealList",
      "Namespace": "CRM/Dashboard",
      "Description": "Displays deals in a sortable table format with open action",
      "Title": "Deal List",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-pipeline-dashboard-deal-list.spec.json",
      "FunctionalRequirements": "- Display deals in a clean table format\n- Show deal name, account, stage, and amount\n- Include open icon button for external navigation\n- Show hover effects on rows\n- Color-code stage badges\n- Support row click for selection",
      "TechnicalDesign": "Renders deals in table format with hover states. Formats currency values. Includes Font Awesome icon for opening deals externally. Stage badges use dynamic colors from stageColors prop."
    },
    "primaryKey": {
      "ID": "7FDE3B05-BE26-4E6C-881D-A352690DCC31"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.525Z",
      "checksum": "27d692185a8933bb70148776eac9bc2b9376f64496aec358135e850b9fd77b35"
    }
  },
  {
    "fields": {
      "Name": "DrillDownPanel",
      "Namespace": "CRM/Dashboard",
      "Description": "Slide-out panel for drilling down into deal details with filtering and sorting",
      "Title": "Drill Down Panel",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-pipeline-dashboard-drill-down-panel.spec.json",
      "FunctionalRequirements": "- Slide in from right side at top: 75px\n- Display title and deal count/value summary\n- Allow filtering deals by text search\n- Support sorting by Amount, CloseDate, Probability\n- Toggle between card and list views\n- Include close button in header\n- Use appropriate background color based on drill-down type",
      "TechnicalDesign": "Fixed position panel with CSS transitions. Contains local state for filter text, sort order, and display mode. Reuses DealCards and DealList components for display. Header color determined by drillDownData type/metadata."
    },
    "primaryKey": {
      "ID": "42690037-7F0B-49F4-9617-182D7567BB64"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.543Z",
      "checksum": "8f0daff616fb1153f9da35ef18dc707908000b1198416ae51117b712bd30e03f"
    }
  },
  {
    "fields": {
      "Name": "Customer360TabNavigation",
      "Namespace": "CRM/Customer",
      "Description": "Tab navigation for Customer 360 View",
      "Title": "Customer 360 Tab Navigation",
      "Type": "Navigation",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/customer-360-view-tab-navigation.spec.json",
      "FunctionalRequirements": "- Display tabs for Overview, Timeline, Contacts, Deals, and Insights\n- Highlight active tab with color and underline\n- Support click to switch tabs\n- Show hover effects on tabs",
      "TechnicalDesign": "Renders horizontal tab navigation with active state styling. Uses flexbox layout with hover and active states."
    },
    "primaryKey": {
      "ID": "97C1EC81-9C33-4706-9A5A-5EF9C06F4687"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.561Z",
      "checksum": "c1224f4e833a2f9c75aba21017310a09ddb6a11a53efa2685a6f4a86c4edcf5e"
    }
  },
  {
    "fields": {
      "Name": "Customer360Overview",
      "Namespace": "CRM/Customer",
      "Description": "Overview tab showing customer summary and key metrics",
      "Title": "Customer 360 Overview",
      "Type": "Report",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/customer-360-view-overview.spec.json",
      "FunctionalRequirements": "- Display customer key information\n- Show engagement score with color coding\n- Display total revenue and active deals\n- Show number of contacts\n- Calculate and display customer lifetime value\n- Use color-coded metrics based on values",
      "TechnicalDesign": "Renders metric cards in a grid layout. Calculates lifetime value from deals. Color codes engagement score (green/yellow/red). Uses formatCurrency helper for monetary values."
    },
    "primaryKey": {
      "ID": "D8B66E3D-AA5E-4C28-90CB-343F8A223AF3"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.578Z",
      "checksum": "fc4259d9f6719831af31790a2b736357a245bda6656db41844821025cb699342"
    }
  },
  {
    "fields": {
      "Name": "Customer360Timeline",
      "Namespace": "CRM/Customer",
      "Description": "Timeline view of customer activities and interactions",
      "Title": "Customer 360 Timeline",
      "Type": "Report",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/customer-360-view-timeline.spec.json",
      "FunctionalRequirements": "- Display activities in chronological order\n- Show activity type with appropriate icons\n- Format dates in readable format\n- Use different colors for activity types\n- Support click interaction on activities\n- Show activity subject and type",
      "TechnicalDesign": "Renders vertical timeline with activity items. Uses type-based icons and colors. Formats dates using toLocaleDateString. Implements hover effects for interactive items."
    },
    "primaryKey": {
      "ID": "8E9F75DF-F187-45E7-A15B-424946217C1F"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.596Z",
      "checksum": "2dfe66f361f7e2525ebd5276c6961c3e6bba75e2d29ed84b590b7e94dd5b5001"
    }
  },
  {
    "fields": {
      "Name": "SalesFunnelVisualization",
      "Namespace": "CRM/Analytics",
      "Description": "Interactive sales funnel visualization with conversion metrics and drill-down capabilities",
      "Title": "Sales Funnel Visualization",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-funnel-visualization.spec.json",
      "FunctionalRequirements": "## Sales Funnel Visualization\n\n### Purpose\nVisualize the sales pipeline as an interactive funnel showing conversion rates and deal values at each stage.\n\n### Core Features\n- **Interactive Funnel Chart**: Visual representation of deal flow through stages\n- **Dual View Modes**: \n  - Count view: Number of deals at each stage\n  - Value view: Total deal value at each stage\n- **Conversion Metrics**: Show conversion rates between stages\n- **Time Period Filtering**: Filter by date ranges (month, quarter, year)\n- **Slide-out Details Panel**: Click stage to see deals list\n- **Card/List View Toggle**: For deals display\n- **Sorting & Filtering**: Sort by value, date, probability\n\n### Visual Design\n- Animated funnel segments using Framer Motion\n- Color-coded stages with gradients\n- Percentage labels and value annotations\n- Smooth transitions between views\n- Side panel slides in from right",
      "TechnicalDesign": "## Implementation Details\n\n### Component Architecture\n- Main component: SalesFunnelVisualization\n- Sub-components:\n  - FunnelChart: Renders the funnel visualization\n  - StageDetailsPanel: Slide-out panel for stage details\n  - DealCard: Card view for individual deals\n  - FilterBar: Time period and view mode controls\n\n### Animation Strategy\n- Framer Motion for smooth transitions\n- Stagger animations for funnel segments\n- Spring physics for panel slide\n- Opacity transitions for view changes\n\n### State Management\n- deals: Array of all deals\n- selectedStage: Currently selected stage\n- viewMode: 'count' or 'value'\n- displayMode: 'cards' or 'list'\n- timeFilter: Selected time period\n- sortBy: Current sort field\n- filterBy: Active filters"
    },
    "primaryKey": {
      "ID": "50E31AC5-B851-4927-821D-CFFCC13EA9A0"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.613Z",
      "checksum": "440681135dd4e2906562c9f80fa6062f7a8e231f72201e0553e0c6cfec92cd3b"
    }
  },
  {
    "fields": {
      "Name": "SalesFunnelChart",
      "Namespace": "CRM/Analytics",
      "Description": "Funnel chart visualization sub-component for displaying sales pipeline stages",
      "Title": "Sales Funnel Chart",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-funnel-chart.spec.json",
      "FunctionalRequirements": "## Funnel Chart Sub-Component\n\n### Purpose\nRender the visual funnel chart with interactive stages.\n\n### Core Features\n- **Funnel Visualization**: Trapezoid shapes for each stage\n- **Dynamic Sizing**: Width based on conversion rates\n- **Clickable Stages**: Trigger drill-down panels\n- **Metrics Display**: Count and value per stage\n- **Conversion Rates**: Show between stages\n- **Closed Lost Indicator**: Separate indicator for lost deals",
      "TechnicalDesign": "## Implementation\n\n### Visual Rendering\n- SVG-based funnel segments\n- Dynamic path calculations\n- Gradient fills for depth\n- Hover animations\n\n### Interaction\n- Click handlers on each segment\n- Tooltip on hover\n- Smooth transitions"
    },
    "primaryKey": {
      "ID": "ECAEA5F2-8E3B-4C25-B896-3132AFE8F477"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.910Z",
      "checksum": "ffa14766de1c4117cbf858f408f3168bb20b9005efe8609752c385f8dd745ee6"
    }
  },
  {
    "fields": {
      "Name": "SalesFunnelStagePanel",
      "Namespace": "CRM/Analytics",
      "Description": "Slide-out panel showing detailed information for a selected sales funnel stage",
      "Title": "Sales Funnel Stage Panel",
      "Type": "Widget",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-funnel-stage-panel.spec.json",
      "FunctionalRequirements": "## Stage Details Panel Sub-Component\n\n### Purpose\nSlide-out panel showing detailed information for a selected stage.\n\n### Core Features\n- **Stage Overview**: Count, value, conversion metrics\n- **Deal List**: Filtered deals for the stage\n- **Search & Filter**: Local search within stage\n- **Sort Options**: Multiple sort criteria\n- **View Modes**: Card or list display",
      "TechnicalDesign": "## Implementation\n\n### Panel Behavior\n- Fixed positioning with slide animation\n- Local state for search and sort\n- Uses DealCard and DealList sub-components"
    },
    "primaryKey": {
      "ID": "0F73187F-CD63-4E93-8B36-9BC245FC0F44"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.961Z",
      "checksum": "a112512745480a10c8af7f4009cd6295b097df1c3c977c39d769371e658cd9f1"
    }
  },
  {
    "fields": {
      "Name": "SalesFunnelDealCard",
      "Namespace": "CRM/Analytics",
      "Description": "Card component for displaying individual deal information in the sales funnel",
      "Title": "Sales Funnel Deal Card",
      "Type": "Widget",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-funnel-deal-card.spec.json",
      "FunctionalRequirements": "## Deal Card Sub-Component\n\n### Purpose\nDisplay individual deal information in a card format.\n\n### Core Features\n- **Deal Summary**: Name, amount, stage\n- **Account Information**: Associated account details\n- **Probability Indicator**: Visual probability gauge\n- **Date Display**: Close date formatting\n- **Click Actions**: Open in Explorer",
      "TechnicalDesign": "## Implementation\n\n### Card Layout\n- Structured card with sections\n- Color-coded by stage\n- Hover effects\n- Click handlers"
    },
    "primaryKey": {
      "ID": "AC13E1FE-4D3E-4CBA-8E18-A9CC77A8C730"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:20.985Z",
      "checksum": "4419c7cab35089d65aa350a6bfa63b4919ea04cd73dc9dbc146b9462b686adb8"
    }
  },
  {
    "fields": {
      "Name": "SalesFunnelDealList",
      "Namespace": "CRM/Analytics",
      "Description": "Table component for displaying deals in a compact list format",
      "Title": "Sales Funnel Deal List",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/sales-funnel-deal-list.spec.json",
      "FunctionalRequirements": "## Deal List Sub-Component\n\n### Purpose\nDisplay deals in a compact table format.\n\n### Core Features\n- **Tabular Display**: Compact list view\n- **Key Metrics**: Amount, probability, dates\n- **Interactive Rows**: Click to open deals\n- **Responsive Design**: Fits container width",
      "TechnicalDesign": "## Implementation\n\n### Table Structure\n- Responsive table layout\n- Hover effects on rows\n- Optimized for scanning"
    },
    "primaryKey": {
      "ID": "888FA965-DC8E-4E2C-8E0D-4D99F7AC7F44"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:21.005Z",
      "checksum": "2374fbfdcd739e6d45316b60bd5ff12eb16d42f9f29b86874821ae3ac40c24d3"
    }
  },
  {
    "fields": {
      "Name": "AIPromptsCluster",
      "Namespace": "AI/Analytics",
      "Description": "Interactive clustering visualization of AI prompts using semantic embeddings to discover patterns and relationships",
      "Title": "AI Prompts Cluster Visualization",
      "Type": "Dashboard",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-prompts-cluster.spec.json",
      "FunctionalRequirements": "Load all AI prompts, generate embeddings from TemplateText, perform clustering analysis, visualize clusters in interactive graph, show prompt details on selection, provide filtering and search capabilities",
      "TechnicalDesign": "Main orchestrator that loads AI prompts data, manages embeddings generation and caching, coordinates sub-components for visualization and interaction, uses D3.js for graph rendering and SimpleVectorService for clustering"
    },
    "primaryKey": {
      "ID": "913FC220-BE2B-4EE6-AFF5-8DD9B4C6C7E4"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:21.051Z",
      "checksum": "5d59bd7e0054de7325c166f197755dd16a1607fe5395beed7f19f04c7ff7ec20"
    }
  },
  {
    "fields": {
      "Name": "AIPromptsClusterGraph",
      "Namespace": "AI/Analytics",
      "Description": "D3.js force-directed graph visualization showing prompt clusters based on semantic similarity",
      "Title": "AI Prompts Cluster Graph",
      "Type": "Chart",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-prompts-cluster-graph.spec.json",
      "FunctionalRequirements": "Render interactive force-directed graph with prompts as nodes, display clusters with different colors, show similarity connections between prompts, support zoom/pan navigation, highlight on hover, animate transitions",
      "TechnicalDesign": "Uses D3.js force simulation for node positioning, implements clustering visualization with color coding, draws edges based on similarity threshold, handles mouse interactions for selection and tooltips"
    },
    "primaryKey": {
      "ID": "33E6440F-7E2E-42C0-88F2-470E93CC951E"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:21.026Z",
      "checksum": "98efb3b6e97c4c9a51f42cba8d102179136059d93bb05bf9cca8e571d5a95dc3"
    }
  },
  {
    "fields": {
      "Name": "AIPromptsClusterControls",
      "Namespace": "AI/Analytics",
      "Description": "Control panel for filtering, searching, and adjusting clustering parameters",
      "Title": "AI Prompts Cluster Controls",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-prompts-cluster-controls.spec.json",
      "FunctionalRequirements": "Provide search input for finding prompts, filter by category/type/status, adjust clustering parameters, control similarity threshold, toggle view options, export cluster assignments",
      "TechnicalDesign": "React component with controlled inputs for various filters and parameters, emits change events to parent component for re-clustering or re-filtering"
    },
    "primaryKey": {
      "ID": "5A7544EC-42D7-46F2-898A-D7A39601EC50"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:21.070Z",
      "checksum": "6c288d5d7944193f6e0f346a081cd496dfcfb0117bf6ab427fd33654d4628c94"
    }
  },
  {
    "fields": {
      "Name": "AIPromptsClusterDetails",
      "Namespace": "AI/Analytics",
      "Description": "Detail panel showing selected prompt information and similar prompts",
      "Title": "AI Prompts Cluster Details",
      "Type": "Other",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-prompts-cluster-details.spec.json",
      "FunctionalRequirements": "Display selected prompt details including name, description, template text, show similar prompts based on vector similarity, display cluster membership info, provide navigation to prompt editor",
      "TechnicalDesign": "React component that displays prompt entity details, calculates and shows top similar prompts using vector service, formats template text with syntax highlighting"
    },
    "primaryKey": {
      "ID": "7E51E1BF-E118-4EA3-8B71-E2098F5CF11E"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:21.089Z",
      "checksum": "e5880be67edf42d078d134aa04a4ddb88678d907d10b3d804ee8a928352ae5b4"
    }
  },
  {
    "fields": {
      "Name": "AIInsightsPanel",
      "Namespace": "Generic/UI/AI",
      "Description": "A reusable AI insights panel component with markdown rendering, copy/export functionality, and collapsible UI",
      "Title": "AI Insights Panel",
      "Type": "Widget",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/ai-insights-panel.spec.json",
      "FunctionalRequirements": "Display AI-generated insights with markdown formatting support, provide collapsible interface with double-click and button toggle, support copy to clipboard with visual feedback, enable export to markdown file with timestamp, show loading and error states appropriately, allow refresh/regeneration of insights, support customizable title icon and colors, provide extensibility through custom buttons, maintain responsive design across devices, persist collapsed state during session",
      "TechnicalDesign": "The component uses React hooks for state management and provides a flexible reusable panel for displaying AI insights. It conditionally loads the marked library for markdown rendering with a fallback to plain text. The panel features a header with title/icon and a button bar with collapse copy export refresh and optional close/custom buttons. Content area supports scrolling with configurable max height. All interactions provide visual feedback through hover states and transitions. The component integrates with the standard MJ component props while accepting additional configuration props for customization."
    },
    "primaryKey": {
      "ID": "89F60F0B-31C3-4676-B6DD-F3D2258C416A"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:21.107Z",
      "checksum": "37f623d1049022b892482c4c68b1439d4b96344471e387dca9debed498126932"
    }
  },
  {
    "fields": {
      "Name": "DataExportPanel",
      "Namespace": "Generic/UI/Export",
      "Description": "Reusable component for exporting data to CSV, Excel (XLSX), and PDF formats with optional UI",
      "Title": "Data Export Panel",
      "Type": "Widget",
      "Version": "1.0.0",
      "VersionSequence": 1,
      "Status": "Published",
      "Specification": "@file:spec/data-export-panel.spec.json",
      "FunctionalRequirements": "Support CSV, Excel (XLSX), and PDF export formats; Provide both UI and headless modes for flexibility; Allow column selection and customization; Support both data arrays and HTML element capture; Handle large datasets efficiently with progress indication; Provide format-specific options (PDF orientation, Excel sheet names); Include preview capability before export; Support various button styles and positions; Fire events for export lifecycle; Format dates and numbers consistently",
      "TechnicalDesign": "Uses SheetJS (XLSX) for Excel/CSV generation; Uses jsPDF with html2canvas for PDF creation; Implements ref-based API for headless mode access; Manages export state with React hooks; Provides dropdown UI with format selection; Handles data transformation and formatting; Supports chunked processing for large datasets; Implements progress indication for long exports; Uses dayjs for date formatting; Provides customizable styling options"
    },
    "primaryKey": {
      "ID": "D08BCD9D-B26F-4C96-87E7-436DE63F18FF"
    },
    "sync": {
      "lastModified": "2025-08-27T15:26:21.125Z",
      "checksum": "49389eacdb26568370b631e9ac42d8ab18797c91adcfd9e1f723b4b8d9aa6a3f"
    }
  }
]