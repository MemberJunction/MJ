{
  "name": "AIInsightsPanel",
  "location": "embedded",
  "code": "@file:../code/ai-insights-panel.js",
  "description": "A reusable AI insights panel component with markdown rendering, copy/export functionality, and collapsible UI",
  "category": "UI Components",
  "type": "panel",
  "properties": [
    {
      "name": "insights",
      "type": "string",
      "description": "The AI-generated insights content (supports markdown)",
      "required": true
    },
    {
      "name": "loading",
      "type": "boolean",
      "description": "Whether the insights are currently being generated",
      "required": true
    },
    {
      "name": "error",
      "type": "string",
      "description": "Error message to display if insights generation failed",
      "required": true
    },
    {
      "name": "onGenerate",
      "type": "function",
      "description": "Callback function to generate/refresh insights",
      "required": true
    },
    {
      "name": "title",
      "type": "string",
      "description": "Title text for the panel header",
      "default": "AI Insights"
    },
    {
      "name": "icon",
      "type": "string",
      "description": "Font Awesome icon class for the title",
      "default": "fa-wand-magic-sparkles"
    },
    {
      "name": "iconColor",
      "type": "string",
      "description": "Color for the title icon",
      "default": "#8B5CF6"
    },
    {
      "name": "maxHeight",
      "type": "string",
      "description": "Maximum height for the content area with scroll",
      "default": "400px"
    },
    {
      "name": "showRefresh",
      "type": "boolean",
      "description": "Whether to show the refresh button",
      "default": true
    },
    {
      "name": "showExport",
      "type": "boolean",
      "description": "Whether to show the export to markdown button",
      "default": true
    },
    {
      "name": "showCopy",
      "type": "boolean",
      "description": "Whether to show the copy to clipboard button",
      "default": true
    },
    {
      "name": "position",
      "type": "string",
      "description": "Position of the panel ('top' or 'bottom') affects margin",
      "default": "top"
    },
    {
      "name": "defaultCollapsed",
      "type": "boolean",
      "description": "Whether the panel starts in collapsed state",
      "default": false
    },
    {
      "name": "onClose",
      "type": "function",
      "description": "Optional callback when close button is clicked"
    },
    {
      "name": "customButtons",
      "type": "array",
      "description": "Array of custom button configurations to add to the button bar",
      "default": []
    }
  ],
  "events": [
    {
      "name": "onToggleCollapse",
      "description": "Fired when the panel is collapsed or expanded",
      "parameters": [
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "The new collapsed state"
        }
      ]
    },
    {
      "name": "onCopy",
      "description": "Fired when content is copied to clipboard",
      "parameters": []
    },
    {
      "name": "onExport",
      "description": "Fired when content is exported as markdown",
      "parameters": []
    }
  ],
  "libraries": [
    {
      "name": "marked",
      "version": "11.1.1",
      "globalVariable": "marked" 
    }
  ],
  "usageExample": "// Basic usage\n<AIInsightsPanel\n  insights={aiInsights}\n  loading={loadingInsights}\n  error={insightsError}\n  onGenerate={generateInsights}\n  title=\"Sales Analysis Insights\"\n  iconColor=\"#10B981\"\n/>\n\n// With custom buttons\n<AIInsightsPanel\n  insights={aiInsights}\n  loading={loadingInsights}\n  error={insightsError}\n  onGenerate={generateInsights}\n  onClose={() => setShowInsights(false)}\n  customButtons={[\n    {\n      icon: 'fa-solid fa-share',\n      title: 'Share',\n      onClick: handleShare\n    }\n  ]}\n/>",
  "functionalRequirements": "• Display AI-generated insights with markdown formatting support\n• Provide collapsible interface with double-click and button toggle\n• Support copy to clipboard with visual feedback\n• Enable export to markdown file with timestamp\n• Show loading and error states appropriately\n• Allow refresh/regeneration of insights\n• Support customizable title, icon, and colors\n• Provide extensibility through custom buttons\n• Maintain responsive design across devices\n• Persist collapsed state during session",
  "technicalDesign": "The component uses React hooks for state management and provides a flexible, reusable panel for displaying AI insights. It conditionally loads the marked library for markdown rendering with a fallback to plain text. The panel features a header with title/icon and a button bar with collapse, copy, export, refresh, and optional close/custom buttons. Content area supports scrolling with configurable max height. All interactions provide visual feedback through hover states and transitions. The component integrates with the standard MJ component props (utilities, styles, callbacks) while accepting additional configuration props for customization."
}