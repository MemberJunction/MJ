{
  "name": "DataExportPanel",
  "namespace": "Generic/UI/Export",
  "location": "embedded",
  "code": "@file:../code/data-export-panel.js",
  "description": "Reusable component for exporting data to CSV, Excel (XLSX), and PDF formats with optional UI",
  "category": "Utility",
  "type": "panel",
  "properties": [
    {
      "name": "mode",
      "type": "string",
      "description": "Display mode: 'ui' for visible interface, 'headless' for programmatic-only usage",
      "default": "ui"
    },
    {
      "name": "data",
      "type": "array",
      "description": "Array of objects to export (for table data)"
    },
    {
      "name": "columns",
      "type": "array",
      "description": "Column configuration: [{key: 'field', label: 'Display Name', width: 100}]"
    },
    {
      "name": "filename",
      "type": "string",
      "description": "Base filename for exports (without extension)",
      "default": "export"
    },
    {
      "name": "formats",
      "type": "array",
      "description": "Available export formats: ['csv', 'excel', 'pdf']",
      "default": ["csv", "excel", "pdf"]
    },
    {
      "name": "position",
      "type": "string",
      "description": "UI position: 'top', 'bottom', 'inline', 'floating'",
      "default": "inline"
    },
    {
      "name": "buttonStyle",
      "type": "string",
      "description": "Button style: 'button', 'icon', 'dropdown', 'menu'",
      "default": "dropdown"
    },
    {
      "name": "buttonText",
      "type": "string",
      "description": "Custom button text",
      "default": "Export"
    },
    {
      "name": "icon",
      "type": "string",
      "description": "Font Awesome icon class for the export button",
      "default": "fa-download"
    },
    {
      "name": "showPreview",
      "type": "boolean",
      "description": "Show preview before export (UI mode only)",
      "default": false
    },
    {
      "name": "allowColumnSelection",
      "type": "boolean",
      "description": "Allow users to select which columns to export",
      "default": true
    },
    {
      "name": "includeHeaders",
      "type": "boolean",
      "description": "Include column headers in export",
      "default": true
    },
    {
      "name": "dateFormat",
      "type": "string",
      "description": "Date format for date values",
      "default": "YYYY-MM-DD"
    },
    {
      "name": "numberFormat",
      "type": "object",
      "description": "Number formatting options: {decimals: 2, thousandsSeparator: ',', decimalSeparator: '.'}"
    },
    {
      "name": "pdfOptions",
      "type": "object",
      "description": "PDF-specific options: {orientation: 'portrait'|'landscape', pageSize: 'a4'|'letter', margins: {top: 40, bottom: 40, left: 40, right: 40}, title: 'Custom Title', includeDataTable: boolean, multiPage: boolean, includeAIInsights: boolean}"
    },
    {
      "name": "excelOptions",
      "type": "object",
      "description": "Excel-specific options: {sheetName: 'Data', includeFilters: true, autoWidth: true}"
    },
    {
      "name": "getHtmlElement",
      "type": "function",
      "description": "Function that returns the HTML element to capture for PDF export (alternative to data array)"
    },
    {
      "name": "getAiInsightsElement",
      "type": "function",
      "description": "Function that returns the AI insights element to include in PDF export (optional)"
    },
    {
      "name": "aiInsightsText",
      "type": "string",
      "description": "Raw markdown text of AI insights to render as text in PDF (preferred over element capture)"
    },
    {
      "name": "onExportStart",
      "type": "function",
      "description": "Callback fired when export begins"
    },
    {
      "name": "onExportComplete",
      "type": "function",
      "description": "Callback fired when export completes successfully"
    },
    {
      "name": "onExportError",
      "type": "function",
      "description": "Callback fired if export fails"
    },
    {
      "name": "customStyles",
      "type": "object",
      "description": "Custom styles for the export panel UI"
    },
    {
      "name": "visible",
      "type": "boolean",
      "description": "Control visibility of the UI (for UI mode)",
      "default": true
    }
  ],
  "events": [
    {
      "name": "exportStarted",
      "description": "Fired when export process begins",
      "parameters": [
        {
          "name": "format",
          "type": "string",
          "description": "Export format being used"
        }
      ]
    },
    {
      "name": "exportCompleted",
      "description": "Fired when export completes successfully",
      "parameters": [
        {
          "name": "format",
          "type": "string",
          "description": "Export format used"
        },
        {
          "name": "filename",
          "type": "string",
          "description": "Filename of exported file"
        }
      ]
    },
    {
      "name": "exportFailed",
      "description": "Fired if export fails",
      "parameters": [
        {
          "name": "error",
          "type": "object",
          "description": "Error details"
        }
      ]
    }
  ],
  "libraries": [
    {
      "name": "xlsx",
      "version": "0.18.5",
      "globalVariable": "XLSX"
    },
    {
      "name": "jspdf",
      "version": "2.5.1",
      "globalVariable": "jspdf"
    },
    {
      "name": "html2canvas",
      "version": "1.4.1",
      "globalVariable": "html2canvas"
    },
    {
      "name": "dayjs",
      "version": "1.11.10",
      "globalVariable": "dayjs"
    }
  ],
  "usageExample": "// UI Mode with dropdown\n<DataExportPanel\n  data={tableData}\n  columns={columns}\n  getHtmlElement={() => dashboardRef.current}\n  getAiInsightsElement={() => aiInsightsRef.current}\n  filename=\"sales-report\"\n  formats={['csv', 'excel', 'pdf']}\n  buttonStyle=\"dropdown\"\n/>\n\n// Headless mode for programmatic export\nconst exportPanel = <DataExportPanel\n  mode=\"headless\"\n  data={data}\n  columns={columns}\n/>;\n// Then call: exportPanel.exportToCSV() or exportPanel.exportToPDF()",
  "functionalRequirements": "• Support CSV, Excel (XLSX), and PDF export formats\n• Provide both UI and headless modes for flexibility\n• Allow column selection and customization\n• Support both data arrays and HTML element capture\n• Handle large datasets efficiently with progress indication\n• Provide format-specific options (PDF orientation, Excel sheet names)\n• Include preview capability before export\n• Support various button styles and positions\n• Fire events for export lifecycle\n• Format dates and numbers consistently",
  "technicalDesign": "• Uses SheetJS (XLSX) for Excel/CSV generation\n• Uses jsPDF with html2canvas for PDF creation\n• Implements ref-based API for headless mode access\n• Manages export state with React hooks\n• Provides dropdown UI with format selection\n• Handles data transformation and formatting\n• Supports chunked processing for large datasets\n• Implements progress indication for long exports\n• Uses dayjs for date formatting\n• Provides customizable styling options"
}