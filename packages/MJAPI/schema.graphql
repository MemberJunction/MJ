# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AIAction_ {
  AIModelActionsArray: [AIModelAction_!]!
  CreatedAt: Timestamp!
  DefaultModel: String
  DefaultModelID: Int
  DefaultPrompt: String
  Description: String
  EntityAIActionsArray: [EntityAIAction_!]!
  ID: Int!
  IsActive: Boolean!
  Name: String!
  UpdatedAt: Timestamp!
}

type AIModelAction_ {
  AIAction: String!
  AIActionID: Int!
  AIModel: String!
  AIModelID: Int!
  CreatedAt: Timestamp!
  ID: Int!
  IsActive: Boolean!
  UpdatedAt: Timestamp!
}

type AIModelType_ {
  AIModelsArray: [AIModel_!]!
  Description: String
  ID: Int!
  Name: String!
}

type AIModel_ {
  AIActionsArray: [AIAction_!]!
  AIModelActionsArray: [AIModelAction_!]!
  AIModelTypeID: Int!
  CreatedAt: Timestamp!
  Description: String
  DriverClass: String
  DriverImportPath: String
  EntityAIActionsArray: [EntityAIAction_!]!
  ID: Int!
  IsActive: Boolean!
  Name: String!
  UpdatedAt: Timestamp!
  Vendor: String
}

type ApplicationEntity_ {
  Application: String!
  ApplicationName: String
  CreatedAt: Timestamp!
  DefaultForNewUser: Boolean!
  Entity: String!
  EntityBaseTable: String!
  EntityBaseTableCodeName: String
  EntityClassName: String
  EntityCodeName: String
  EntityID: Int!
  ID: Int!
  Sequence: Int!
  UpdatedAt: Timestamp!
}

type Application_ {
  ApplicationEntitiesArray: [ApplicationEntity_!]!
  CreatedAt: Timestamp!
  Description: String
  ID: Int!
  Name: String!
  UpdatedAt: Timestamp!
  UserApplicationsArray: [UserApplication_!]!
}

type AskSkipResultType {
  AIMessageConversationDetailId: Int!
  ConversationId: Int!
  Result: String!
  Status: String!
  Success: Boolean!
  UserMessageConversationDetailId: Int!
}

type AuditLogType_ {
  AuditLogTypesArray: [AuditLogType_!]!
  AuditLogsArray: [AuditLog_!]!
  AuthorizationName: String
  CreatedAt: Timestamp!
  Description: String
  ID: Int!
  Name: String!
  Parent: String
  ParentID: Int
  UpdatedAt: Timestamp!
}

type AuditLog_ {
  AuditLogTypeName: String
  AuthorizationName: String
  CreatedAt: Timestamp!
  Description: String
  Details: String
  Entity: String
  EntityID: Int
  ID: Int!
  RecordID: String
  Status: String!
  UpdatedAt: Timestamp!
  User: String!
  UserID: Int!
}

type AuthorizationRole_ {
  AuthorizationName: String
  CreatedAt: Timestamp!
  ID: Int!
  RoleName: String
  Type: String!
  UpdatedAt: Timestamp!
}

type Authorization_ {
  AuditLogTypesArray: [AuditLogType_!]!
  AuditLogsArray: [AuditLog_!]!
  AuthorizationRolesArray: [AuthorizationRole_!]!
  AuthorizationsArray: [Authorization_!]!
  CreatedAt: Timestamp!
  Description: String
  ID: Int!
  IsActive: Boolean!
  Name: String!
  ParentID: Int
  UpdatedAt: Timestamp!
  UseAuditLog: Boolean!
}

type Color {
  ID: Int!
  createdZ: String!
  name: String!
}

type ColorNotification {
  date: Timestamp!
  message: String
}

type CompanyIntegrationRecordMap_ {
  CompanyIntegrationID: Int!
  CreatedAt: Timestamp!
  Entity: String!
  EntityID: Int!
  EntityRecordID: String!
  ExternalSystemRecordID: String!
  ID: Int!
  UpdatedAt: Timestamp!
}

type CompanyIntegrationRunAPILog_ {
  CompanyIntegrationRunID: Int!
  ExecutedAt: Timestamp!
  ID: Int!
  IsSuccess: Boolean!
  Parameters: String
  RequestMethod: String
  URL: String
}

"""Record-level details for the audit trail for each integration run"""
type CompanyIntegrationRunDetail_ {
  Action: String!
  CompanyIntegrationRunID: Int!
  Entity: String!
  EntityID: Int!
  ErrorLogsArray: [ErrorLog_!]!
  ExecutedAt: Timestamp!
  ID: Int!
  IsSuccess: Boolean!
  RecordID: String!
  RunEndedAt: Timestamp
  RunStartedAt: Timestamp
}

"""Audit Trail for each run of a given company integration"""
type CompanyIntegrationRun_ {
  Comments: String
  CompanyIntegrationID: Int!
  CompanyIntegrationRunAPILogsArray: [CompanyIntegrationRunAPILog_!]!
  CompanyIntegrationRunDetailsArray: [CompanyIntegrationRunDetail_!]!
  EndedAt: Timestamp
  ErrorLogsArray: [ErrorLog_!]!
  ID: Int!
  RunByUser: String!
  RunByUserID: Int!
  StartedAt: Timestamp
  TotalRecords: Int!
}

type CompanyIntegration_ {
  APIKey: String
  AccessToken: String
  ClientID: String
  ClientSecret: String
  Company: String!
  CompanyID: Int!
  CompanyIntegrationRecordMapsArray: [CompanyIntegrationRecordMap_!]!
  CompanyIntegrationRunsArray: [CompanyIntegrationRun_!]!
  CompanyName: String!
  CreatedAt: Timestamp!
  CustomAttribute1: String
  DriverClassName: String
  DriverImportPath: String
  EmployeeCompanyIntegrationsArray: [EmployeeCompanyIntegration_!]!
  ExternalSystemID: String
  ID: Int!
  Integration: String!
  IntegrationID: Int!
  IntegrationName: String!
  IsActive: Boolean
  IsExternalSystemReadOnly: Boolean!
  LastRunEndedAt: Timestamp
  LastRunID: Int
  LastRunStartedAt: Timestamp
  ListsArray: [List_!]!
  RefreshToken: String
  TokenExpirationDate: Timestamp
  UpdatedAt: Timestamp!
}

"""
List of Companies/Organizations within the top-level business, used for subsidiaries
"""
type Company_ {
  CompanyIntegrationsArray: [CompanyIntegration_!]!
  CreatedAt: Timestamp!
  Description: String!
  Domain: String
  EmployeesArray: [Employee_!]!
  ID: Int!
  LogoURL: String
  Name: String!
  UpdatedAt: Timestamp!
  Website: String
  WorkflowsArray: [Workflow_!]!
}

type ConversationDetail_ {
  Conversation: String
  ConversationID: Int!
  CreatedAt: Timestamp!
  Error: String
  ExternalID: String
  ID: Int!
  Message: String!
  ReportsArray: [Report_!]!
  Role: String!
  UpdatedAt: Timestamp!
}

type Conversation_ {
  ConversationDetailsArray: [ConversationDetail_!]!
  CreatedAt: Timestamp!
  ExternalID: String
  ID: Int!
  Name: String
  ReportsArray: [Report_!]!
  UpdatedAt: Timestamp!
  User: String!
  UserID: Int!
}

input CreateApplicationEntityInput {
  ApplicationName: String
  DefaultForNewUser: Boolean!
  EntityID: Int!
  ID: Int!
  Sequence: Int!
}

input CreateAuditLogInput {
  AuditLogTypeName: String
  AuthorizationName: String
  Description: String
  Details: String
  EntityID: Int
  RecordID: String
  Status: String!
  UserID: Int!
}

input CreateCompanyInput {
  Description: String!
  Domain: String
  LogoURL: String
  Name: String!
  Website: String
}

input CreateCompanyIntegrationRecordMapInput {
  CompanyIntegrationID: Int!
  EntityID: Int!
  EntityRecordID: String!
  ExternalSystemRecordID: String!
}

input CreateConversationDetailInput {
  ConversationID: Int!
  Error: String
  ExternalID: String
  Message: String!
  Role: String!
}

input CreateConversationInput {
  ExternalID: String
  Name: String
  UserID: Int!
}

input CreateDashboardInput {
  Description: String
  Name: String!
  UIConfigDetails: String!
  UserID: Int
}

input CreateEmployeeInput {
  Active: Boolean!
  CompanyID: Int!
  Email: String!
  FirstName: String!
  LastName: String!
  Phone: String
  SupervisorID: Int
  Title: String
}

input CreateEntityFieldInput {
  AllowUpdateAPI: Boolean!
  AllowUpdateInView: Boolean!
  Category: String
  DefaultColumnWidth: Int
  DefaultInView: Boolean!
  Description: String
  DisplayName: String
  ExtendedType: String
  FullTextSearchEnabled: Boolean!
  GeneratedFormSection: String!
  IncludeInGeneratedForm: Boolean!
  IncludeInUserSearchAPI: Boolean!
  IncludeRelatedEntityNameFieldInBaseView: Boolean!
  IsNameField: Boolean!
  IsPrimaryKey: Boolean!
  IsUnique: Boolean!
  RelatedEntityFieldName: String
  RelatedEntityID: Int
  RelatedEntityNameFieldMap: String
  UserSearchParamFormatAPI: String
  ValueListType: String!
  ViewCellTemplate: String
}

input CreateEntityInput {
  AllowAllRowsAPI: Boolean!
  AllowCreateAPI: Boolean!
  AllowDeleteAPI: Boolean!
  AllowUpdateAPI: Boolean!
  AllowUserSearchAPI: Boolean!
  AuditRecordAccess: Boolean!
  AuditViewRuns: Boolean!
  BaseView: String!
  BaseViewGenerated: Boolean!
  CascadeDeletes: Boolean!
  CustomResolverAPI: Boolean!
  Description: String
  EntityObjectSubclassImport: String
  EntityObjectSubclassName: String
  FullTextCatalog: String
  FullTextCatalogGenerated: Boolean!
  FullTextIndex: String
  FullTextIndexGenerated: Boolean!
  FullTextSearchEnabled: Boolean!
  FullTextSearchFunction: String
  FullTextSearchFunctionGenerated: Boolean!
  ID: Int!
  IncludeInAPI: Boolean!
  Name: String!
  NameSuffix: String
  ParentID: Int
  TrackRecordChanges: Boolean!
  UserFormGenerated: Boolean!
  UserViewMaxRows: Int
  VirtualEntity: Boolean!
  spCreate: String
  spCreateGenerated: Boolean!
  spDelete: String
  spDeleteGenerated: Boolean!
  spUpdate: String
  spUpdateGenerated: Boolean!
}

input CreateEntityPermissionInput {
  CanCreate: Boolean!
  CanDelete: Boolean!
  CanRead: Boolean!
  CanUpdate: Boolean!
  CreateRLSFilterID: Int
  DeleteRLSFilterID: Int
  EntityID: Int!
  ID: Int!
  ReadRLSFilterID: Int
  RoleName: String
  UpdateRLSFilterID: Int
}

input CreateEntityRelationshipInput {
  BundleInAPI: Boolean!
  DisplayInForm: Boolean!
  DisplayName: String
  EntityID: Int!
  EntityKeyField: String
  IncludeInParentAllQuery: Boolean!
  JoinEntityInverseJoinField: String
  JoinEntityJoinField: String
  JoinView: String
  RelatedEntityID: Int!
  RelatedEntityJoinField: String!
  Type: String!
}

input CreateListDetailInput {
  ID: Int!
  ListID: Int!
  RecordID: String!
  Sequence: Int!
}

input CreateListInput {
  CompanyIntegrationID: Int
  Description: String
  EntityID: Int
  ExternalSystemRecordID: String
  ID: Int!
  Name: String!
  UserID: Int!
}

input CreateQueueInput {
  Description: String
  IsActive: Boolean!
  LastHeartbeat: Timestamp!
  Name: String!
  ProcessCwd: String
  ProcessHostName: String
  ProcessIPAddress: String
  ProcessMacAddress: String
  ProcessOSName: String
  ProcessOSVersion: String
  ProcessPID: Int
  ProcessPlatform: String
  ProcessUserID: String
  ProcessUserName: String
  ProcessVersion: String
  QueueTypeID: Int!
}

input CreateQueueTaskInput {
  Comments: String
  Data: String
  EndedAt: Timestamp
  ErrorMessage: String
  Options: String
  Output: String
  QueueID: Int!
  StartedAt: Timestamp
  Status: String!
}

input CreateRecordChangeInput {
  ChangedAt: Timestamp!
  ChangesDescription: String!
  ChangesJSON: String!
  Comments: String
  EntityID: Int!
  FullRecordJSON: String!
  RecordID: String!
  Status: String!
  UserID: Int!
}

input CreateRecordMergeDeletionLogInput {
  DeletedRecordID: String!
  ProcessingLog: String
  RecordMergeLogID: Int!
  Status: String!
}

input CreateRecordMergeLogInput {
  ApprovalStatus: String!
  ApprovedByUserID: Int
  Comments: String
  EntityID: Int!
  InitiatedByUserID: Int!
  ProcessingEndedAt: Timestamp
  ProcessingLog: String
  ProcessingStartedAt: Timestamp!
  ProcessingStatus: String!
  SurvivingRecordID: String!
}

input CreateReportInput {
  ConversationDetailID: Int
  ConversationID: Int
  Description: String
  Name: String!
  OutputDeliveryTypeID: Int
  OutputEventID: Int
  OutputFormatTypeID: Int
  OutputFrequency: String
  OutputTargetEmail: String
  OutputTriggerTypeID: Int
  OutputWorkflowID: Int
  ReportConfiguration: String
  ReportSQL: String
  SharingScope: String!
  UserID: Int!
}

input CreateReportSnapshotInput {
  ReportID: Int!
  ResultSet: String!
  UserID: Int
}

input CreateResourceFolderInput {
  Description: String
  Name: String!
  ParentID: Int
  ResourceTypeName: String!
  UserID: Int!
}

input CreateSchemaInfoInput {
  Comments: String
  EntityIDMax: Int!
  EntityIDMin: Int!
  SchemaName: String!
}

input CreateUserApplicationEntityInput {
  EntityID: Int!
  ID: Int!
  Sequence: Int!
  UserApplicationID: Int!
}

input CreateUserFavoriteInput {
  EntityID: Int!
  RecordID: String!
  UserID: Int!
}

input CreateUserInput {
  Email: String!
  EmployeeID: Int
  FirstName: String
  IsActive: Boolean!
  LastName: String
  LinkedEntityID: Int
  LinkedEntityRecordID: Int
  LinkedRecordType: String!
  Name: String!
  Title: String
  Type: String!
}

input CreateUserNotificationInput {
  Message: String
  ReadAt: Timestamp
  ResourceConfiguration: String
  ResourceRecordID: Int
  ResourceTypeID: Int
  Title: String
  Unread: Boolean!
  UserID: Int!
}

input CreateUserRoleInput {
  RoleName: String!
  UserID: Int!
}

input CreateUserViewInput {
  CustomFilterState: Boolean!
  CustomWhereClause: Boolean!
  Description: String
  EntityID: Int!
  FilterState: String
  GridState: String
  IsDefault: Boolean!
  IsShared: Boolean!
  Name: String!
  SmartFilterEnabled: Boolean!
  SmartFilterExplanation: String
  SmartFilterPrompt: String
  SmartFilterWhereClause: String
  SortState: String
  UserID: Int!
  WhereClause: String
}

input CreateUserViewRunDetailInput {
  ID: Int!
  RecordID: String!
  UserViewRunID: Int!
}

input CreateUserViewRunInput {
  ID: Int!
  RunAt: Timestamp!
  RunByUserID: Int!
  UserViewID: Int!
}

input CreateWorkspaceInput {
  Description: String
  Name: String!
  UserID: Int!
}

input CreateWorkspaceItemInput {
  Configuration: String
  Description: String
  Name: String!
  ResourceRecordID: String
  ResourceTypeID: Int!
  Sequence: Int!
  WorkSpaceID: Int!
}

type Dashboard_ {
  Description: String
  ID: Int!
  Name: String!
  UIConfigDetails: String!
  User: String
  UserID: Int
}

input DatasetItemFilterTypeGQL {
  Filter: String!
  ItemCode: String!
}

type DatasetItem_ {
  Code: String!
  CreatedAt: Timestamp!
  DatasetName: String
  DateFieldToCheck: String!
  Description: String
  Entity: String!
  EntityID: Int!
  ID: Int!
  Sequence: Int!
  UpdatedAt: Timestamp!
  WhereClause: String
}

type DatasetResultType {
  DatasetID: Int!
  DatasetName: String!
  LatestUpdateDate: Timestamp!
  Results: String!
  Status: String!
  Success: Boolean!
}

type DatasetStatusResultType {
  DatasetID: Int!
  DatasetName: String!
  EntityUpdateDates: String!
  LatestUpdateDate: Timestamp!
  Status: String!
  Success: Boolean!
}

type Dataset_ {
  CreatedAt: Timestamp!
  DatasetItemsArray: [DatasetItem_!]!
  Description: String
  ID: Int!
  Name: String!
  UpdatedAt: Timestamp!
}

type EmployeeCompanyIntegration_ {
  CompanyIntegrationID: Int!
  CreatedAt: Timestamp!
  EmployeeID: Int!
  ExternalSystemRecordID: String!
  ID: Int!
  IsActive: Boolean!
  UpdatedAt: Timestamp!
}

type EmployeeRole_ {
  CreatedAt: Timestamp!
  EmployeeID: Int!
  ID: Int!
  Role: String!
  RoleID: Int!
  UpdatedAt: Timestamp!
}

type EmployeeSkill_ {
  CreatedAt: Timestamp!
  EmployeeID: Int!
  ID: Int!
  Skill: String!
  SkillID: Int!
  UpdatedAt: Timestamp!
}

"""Employees"""
type Employee_ {
  Active: Boolean!
  BCMID: String!
  CompanyID: Int!
  CreatedAt: Timestamp!

  """5"""
  Email: String!
  EmployeeCompanyIntegrationsArray: [EmployeeCompanyIntegration_!]!
  EmployeeRolesArray: [EmployeeRole_!]!
  EmployeeSkillsArray: [EmployeeSkill_!]!
  EmployeesArray: [Employee_!]!
  FirstLast: String
  FirstName: String!
  ID: Int!
  LastName: String!
  Phone: String
  Supervisor: String
  SupervisorEmail: String
  SupervisorFirstName: String
  SupervisorID: Int
  SupervisorLastName: String
  Title: String
  UpdatedAt: Timestamp!
}

type EntityAIAction_ {
  AIAction: String!
  AIActionID: Int!
  AIModel: String
  AIModelID: Int
  Comments: String
  Entity: String!
  EntityID: Int!
  ID: Int!
  Name: String!
  OutputEntity: String
  OutputEntityID: Int
  OutputField: String
  OutputType: String!
  Prompt: String
  SkipIfOutputFieldNotEmpty: Boolean!
  TriggerEvent: String!
  UserMessage: String!
}

type EntityDependencyResult {
  EntityName: String!
  FieldName: String!
  RelatedEntityName: String!
}

type EntityFieldValue_ {
  Code: String
  CreatedAt: Timestamp!
  Description: String
  Entity: String!
  EntityFieldName: String!
  EntityID: Int!
  ID: Int!
  Sequence: Int!
  UpdatedAt: Timestamp!
  Value: String!
}

type EntityField_ {
  AllowUpdateAPI: Boolean!
  AllowUpdateInView: Boolean!
  AllowsNull: Boolean!
  AutoIncrement: Boolean!
  BaseTable: String!
  BaseView: String!
  Category: String
  CreatedAt: Timestamp!
  DefaultColumnWidth: Int
  DefaultInView: Boolean!
  DefaultValue: String
  Description: String
  DisplayName: String
  Entity: String!
  EntityClassName: String
  EntityCodeName: String
  EntityFieldValuesArray: [EntityFieldValue_!]!
  EntityID: Int!
  ExtendedType: String
  FullTextSearchEnabled: Boolean!
  GeneratedFormSection: String!
  ID: Int!
  IncludeInGeneratedForm: Boolean!
  IncludeInUserSearchAPI: Boolean!
  IncludeRelatedEntityNameFieldInBaseView: Boolean!
  IsNameField: Boolean!
  IsPrimaryKey: Boolean!
  IsUnique: Boolean!
  IsVirtual: Boolean!
  Length: Int
  Name: String!
  Precision: Int
  RelatedEntity: String
  RelatedEntityBaseTable: String
  RelatedEntityBaseView: String
  RelatedEntityClassName: String
  RelatedEntityCodeName: String
  RelatedEntityFieldName: String
  RelatedEntityID: Int
  RelatedEntityNameFieldMap: String
  RelatedEntitySchemaName: String
  Scale: Int
  SchemaName: String!
  Sequence: Int!
  Type: String!
  UpdatedAt: Timestamp!
  UserSearchParamFormatAPI: String
  ValueListType: String!
  ViewCellTemplate: String
}

type EntityPermission_ {
  CanCreate: Boolean!
  CanDelete: Boolean!
  CanRead: Boolean!
  CanUpdate: Boolean!
  CreateRLSFilter: String
  CreateRLSFilterID: Int
  CreatedAt: Timestamp!
  DeleteRLSFilter: String
  DeleteRLSFilterID: Int
  Entity: String!
  EntityID: Int!
  ID: Int!
  ReadRLSFilter: String
  ReadRLSFilterID: Int
  RoleName: String
  RoleSQLName: String!
  UpdateRLSFilter: String
  UpdateRLSFilterID: Int
  UpdatedAt: Timestamp!
}

input EntityRecordNameInput {
  EntityName: String!
  PrimaryKeyValues: [PrimaryKeyValueInputType!]!
}

type EntityRecordNameResult {
  EntityName: String!
  PrimaryKeyValues: [PrimaryKeyValueOutputType!]!
  RecordName: String
  Status: String!
  Success: Boolean!
}

type EntityRelationship_ {
  BundleInAPI: Boolean!
  CreatedAt: Timestamp!
  DisplayInForm: Boolean!
  DisplayName: String
  DisplayUserViewGUID: String
  DisplayUserViewID: Int
  DisplayUserViewName: String
  Entity: String!
  EntityBaseTable: String!
  EntityBaseView: String!
  EntityID: Int!
  EntityKeyField: String
  ID: Int!
  IncludeInParentAllQuery: Boolean!
  JoinEntityInverseJoinField: String
  JoinEntityJoinField: String
  JoinView: String
  RelatedEntity: String!
  RelatedEntityBaseTable: String!
  RelatedEntityBaseTableCodeName: String
  RelatedEntityBaseView: String!
  RelatedEntityClassName: String
  RelatedEntityCodeName: String
  RelatedEntityID: Int!
  RelatedEntityJoinField: String!
  Type: String!
  UpdatedAt: Timestamp!
}

"""
Metadata about all of the entities in the system. This information is managed by CodeGen, don't modify the parts that come from SQL Server
"""
type Entity_ {
  AllowAllRowsAPI: Boolean!
  AllowCreateAPI: Boolean!
  AllowDeleteAPI: Boolean!

  """
  If set to 1, allows updates to occur via API. Role based permissions are required in addition to turning this bit on.
  """
  AllowUpdateAPI: Boolean!

  """
  If set to 1, allows an end user to add their own search string when running a user view or searching without saving a view
  """
  AllowUserSearchAPI: Boolean!
  ApplicationEntitiesArray: [ApplicationEntity_!]!
  AuditLogsArray: [AuditLog_!]!
  AuditRecordAccess: Boolean!
  AuditViewRuns: Boolean!
  BaseTable: String!
  BaseTableCodeName: String
  BaseView: String!
  BaseViewGenerated: Boolean!
  CascadeDeletes: Boolean!
  ClassName: String
  CodeName: String
  CompanyIntegrationRecordMapsArray: [CompanyIntegrationRecordMap_!]!
  CompanyIntegrationRunDetailsArray: [CompanyIntegrationRunDetail_!]!
  CreatedAt: Timestamp!
  CustomResolverAPI: Boolean!
  DatasetItemsArray: [DatasetItem_!]!
  Description: String
  EntitiesArray: [Entity_!]!
  EntityAIActionsArray: [EntityAIAction_!]!
  EntityFieldsArray: [EntityField_!]!

  """
  Normally, CodeGen will sub-class BaseEntity to create a strongly-typed sub-class for each entity. If you provide a value here and in EntityObjectSubclassName, CodeGen will sub-class the provided class instead of BaseEntity. Also make sure to provide a value for EntityObjectSubclassName with the name of the class itself. This field should have the name of the module  to import that contains an exported class of the name you provide in EntityObjectSubclassName.
  """
  EntityObjectSubclassImport: String

  """
  Normally, CodeGen will sub-class BaseEntity to create a strongly-typed sub-class for each entity. If you provide a value here and in EntityObjectSubclassImport, CodeGen will sub-class the provided class instead of BaseEntity. Also make sure to provide a value for EntityObjectSubclassImport with the name of the module to import that contains an exported class of the name you provide in EntityObjectSubclassName.
  """
  EntityObjectSubclassName: String
  EntityPermissionsArray: [EntityPermission_!]!
  EntityRelationshipsArray: [EntityRelationship_!]!
  FullTextCatalog: String
  FullTextCatalogGenerated: Boolean!
  FullTextIndex: String
  FullTextIndexGenerated: Boolean!
  FullTextSearchEnabled: Boolean!
  FullTextSearchFunction: String
  FullTextSearchFunctionGenerated: Boolean!
  ID: Int!

  """Master switch to control if the field is included in the API or not"""
  IncludeInAPI: Boolean!
  IntegrationURLFormatsArray: [IntegrationURLFormat_!]!
  ListsArray: [List_!]!
  Name: String!
  NameSuffix: String
  ParentBaseTable: String
  ParentBaseView: String
  ParentEntity: String

  """Reserved for future use"""
  ParentID: Int
  RecordChangesArray: [RecordChange_!]!
  RecordMergeLogsArray: [RecordMergeLog_!]!
  ResourceTypesArray: [ResourceType_!]!

  """Database Schema Name"""
  SchemaName: String!
  TaggedItemsArray: [TaggedItem_!]!
  TrackRecordChanges: Boolean!
  UpdatedAt: Timestamp!
  UserApplicationEntitiesArray: [UserApplicationEntity_!]!
  UserFavoritesArray: [UserFavorite_!]!
  UserFormGenerated: Boolean!
  UserRecordLogsArray: [UserRecordLog_!]!
  UserViewMaxRows: Int
  UserViewsArray: [UserView_!]!
  VirtualEntity: Boolean!
  spCreate: String
  spCreateGenerated: Boolean!
  spDelete: String
  spDeleteGenerated: Boolean!
  spUpdate: String
  spUpdateGenerated: Boolean!
}

type ErrorLog_ {
  Category: String
  Code: String
  CompanyIntegrationRunDetailID: Int
  CompanyIntegrationRunID: Int
  CreatedAt: Timestamp!
  CreatedBy: String
  Details: String
  ID: Int!
  Message: String
  Status: String
}

input FieldMapping {
  FieldName: String!
  Value: String!
}

type FieldMappingOutput {
  FieldName: String!
  Value: String!
}

type IntegrationURLFormat_ {
  EntityID: Int!
  FullURLFormat: String
  ID: Int!
  Integration: String!
  IntegrationID: Int!
  IntegrationName: String
  NavigationBaseURL: String
  URLFormat: String!
}

"""
List of integrations that can be executed using the MemberJunction integration architecture.
"""
type Integration_ {
  BatchMaxRequestCount: Int!
  BatchRequestWaitTime: Int!
  ClassName: String
  CompanyIntegrationsArray: [CompanyIntegration_!]!
  CreatedAt: Timestamp!
  Description: String
  ID: Int!
  ImportPath: String
  IntegrationURLFormatsArray: [IntegrationURLFormat_!]!
  Name: String!
  NavigationBaseURL: String
  UpdatedAt: Timestamp!
}

type ListDetail_ {
  ID: Int!
  ListID: Int!
  RecordID: String!
  Sequence: Int!
}

type List_ {
  CompanyIntegrationID: Int
  CreatedAt: Timestamp!
  Description: String
  Entity: String
  EntityID: Int
  ExternalSystemRecordID: String
  ID: Int!
  ListDetailsArray: [ListDetail_!]!
  Name: String!
  UpdatedAt: Timestamp!
  User: String!
  UserID: Int!
}

type Mutation {
  CreateApplicationEntity(input: CreateApplicationEntityInput!): ApplicationEntity_!
  CreateAuditLog(input: CreateAuditLogInput!): AuditLog_!
  CreateCompany(input: CreateCompanyInput!): Company_!
  CreateCompanyIntegrationRecordMap(input: CreateCompanyIntegrationRecordMapInput!): CompanyIntegrationRecordMap_!
  CreateConversation(input: CreateConversationInput!): Conversation_!
  CreateConversationDetail(input: CreateConversationDetailInput!): ConversationDetail_!
  CreateDashboard(input: CreateDashboardInput!): Dashboard_!
  CreateEmployee(input: CreateEmployeeInput!): Employee_!
  CreateEntity(input: CreateEntityInput!): Entity_!
  CreateEntityField(input: CreateEntityFieldInput!): EntityField_!
  CreateEntityPermission(input: CreateEntityPermissionInput!): EntityPermission_!
  CreateEntityRelationship(input: CreateEntityRelationshipInput!): EntityRelationship_!
  CreateList(input: CreateListInput!): List_!
  CreateListDetail(input: CreateListDetailInput!): ListDetail_!
  CreateQueue(input: CreateQueueInput!): Queue_!
  CreateQueueTask(input: CreateQueueTaskInput!): QueueTask_!
  CreateRecordChange(input: CreateRecordChangeInput!): RecordChange_!
  CreateRecordMergeDeletionLog(input: CreateRecordMergeDeletionLogInput!): RecordMergeDeletionLog_!
  CreateRecordMergeLog(input: CreateRecordMergeLogInput!): RecordMergeLog_!
  CreateReport(input: CreateReportInput!): Report_!
  CreateReportSnapshot(input: CreateReportSnapshotInput!): ReportSnapshot_!
  CreateResourceFolder(input: CreateResourceFolderInput!): ResourceFolder_!
  CreateSchemaInfo(input: CreateSchemaInfoInput!): SchemaInfo_!
  CreateUser(input: CreateUserInput!): User_!
  CreateUserApplicationEntity(input: CreateUserApplicationEntityInput!): UserApplicationEntity_!
  CreateUserFavorite(input: CreateUserFavoriteInput!): UserFavorite_!
  CreateUserNotification(input: CreateUserNotificationInput!): UserNotification_!
  CreateUserRole(input: CreateUserRoleInput!): UserRole_!
  CreateUserView(input: CreateUserViewInput!): UserView_!
  CreateUserViewRun(input: CreateUserViewRunInput!): UserViewRun_!
  CreateUserViewRunDetail(input: CreateUserViewRunDetailInput!): UserViewRunDetail_!
  CreateWorkspace(input: CreateWorkspaceInput!): Workspace_!
  CreateWorkspaceItem(input: CreateWorkspaceItemInput!): WorkspaceItem_!
  DeleteApplicationEntity(ID: Int!): ApplicationEntity_!
  DeleteCompany(ID: Int!): Company_!
  DeleteConversation(ID: Int!): Conversation_!
  DeleteConversationDetail(ID: Int!): ConversationDetail_!
  DeleteDashboard(ID: Int!): Dashboard_!
  DeleteEmployee(ID: Int!): Employee_!
  DeleteEntity(ID: Int!): Entity_!
  DeleteEntityField(ID: Int!): EntityField_!
  DeleteEntityPermission(ID: Int!): EntityPermission_!
  DeleteEntityRelationship(ID: Int!): EntityRelationship_!
  DeleteList(ID: Int!): List_!
  DeleteListDetail(ID: Int!): ListDetail_!
  DeleteReport(ID: Int!): Report_!
  DeleteReportSnapshot(ID: Int!): ReportSnapshot_!
  DeleteUserApplicationEntity(ID: Int!): UserApplicationEntity_!
  DeleteUserFavorite(ID: Int!): UserFavorite_!
  DeleteUserView(ID: Int!): UserView_!
  DeleteWorkspace(ID: Int!): Workspace_!
  DeleteWorkspaceItem(ID: Int!): WorkspaceItem_!
  MergeRecords(request: RecordMergeRequest!): RecordMergeResult!
  SetRecordFavoriteStatus(params: UserFavoriteSetParams!): UserFavoriteResult!
  UpdateAIAction(input: UpdateAIActionInput!): AIAction_!
  UpdateAIModel(input: UpdateAIModelInput!): AIModel_!
  UpdateAIModelAction(input: UpdateAIModelActionInput!): AIModelAction_!
  UpdateAIModelType(input: UpdateAIModelTypeInput!): AIModelType_!
  UpdateApplication(input: UpdateApplicationInput!): Application_!
  UpdateApplicationEntity(input: UpdateApplicationEntityInput!): ApplicationEntity_!
  UpdateAuditLog(input: UpdateAuditLogInput!): AuditLog_!
  UpdateCompany(input: UpdateCompanyInput!): Company_!
  UpdateCompanyIntegration(input: UpdateCompanyIntegrationInput!): CompanyIntegration_!
  UpdateCompanyIntegrationRecordMap(input: UpdateCompanyIntegrationRecordMapInput!): CompanyIntegrationRecordMap_!
  UpdateCompanyIntegrationRun(input: UpdateCompanyIntegrationRunInput!): CompanyIntegrationRun_!
  UpdateCompanyIntegrationRunAPILog(input: UpdateCompanyIntegrationRunAPILogInput!): CompanyIntegrationRunAPILog_!
  UpdateCompanyIntegrationRunDetail(input: UpdateCompanyIntegrationRunDetailInput!): CompanyIntegrationRunDetail_!
  UpdateConversation(input: UpdateConversationInput!): Conversation_!
  UpdateConversationDetail(input: UpdateConversationDetailInput!): ConversationDetail_!
  UpdateDashboard(input: UpdateDashboardInput!): Dashboard_!
  UpdateEmployee(input: UpdateEmployeeInput!): Employee_!
  UpdateEmployeeCompanyIntegration(input: UpdateEmployeeCompanyIntegrationInput!): EmployeeCompanyIntegration_!
  UpdateEmployeeRole(input: UpdateEmployeeRoleInput!): EmployeeRole_!
  UpdateEmployeeSkill(input: UpdateEmployeeSkillInput!): EmployeeSkill_!
  UpdateEntity(input: UpdateEntityInput!): Entity_!
  UpdateEntityAIAction(input: UpdateEntityAIActionInput!): EntityAIAction_!
  UpdateEntityField(input: UpdateEntityFieldInput!): EntityField_!
  UpdateEntityPermission(input: UpdateEntityPermissionInput!): EntityPermission_!
  UpdateEntityRelationship(input: UpdateEntityRelationshipInput!): EntityRelationship_!
  UpdateErrorLog(input: UpdateErrorLogInput!): ErrorLog_!
  UpdateIntegration(input: UpdateIntegrationInput!): Integration_!
  UpdateIntegrationURLFormat(input: UpdateIntegrationURLFormatInput!): IntegrationURLFormat_!
  UpdateList(input: UpdateListInput!): List_!
  UpdateListDetail(input: UpdateListDetailInput!): ListDetail_!
  UpdateQueue(input: UpdateQueueInput!): Queue_!
  UpdateQueueTask(input: UpdateQueueTaskInput!): QueueTask_!
  UpdateRecordMergeDeletionLog(input: UpdateRecordMergeDeletionLogInput!): RecordMergeDeletionLog_!
  UpdateRecordMergeLog(input: UpdateRecordMergeLogInput!): RecordMergeLog_!
  UpdateReport(input: UpdateReportInput!): Report_!
  UpdateReportSnapshot(input: UpdateReportSnapshotInput!): ReportSnapshot_!
  UpdateResourceFolder(input: UpdateResourceFolderInput!): ResourceFolder_!
  UpdateRole(input: UpdateRoleInput!): Role_!
  UpdateSchemaInfo(input: UpdateSchemaInfoInput!): SchemaInfo_!
  UpdateUser(input: UpdateUserInput!): User_!
  UpdateUserApplication(input: UpdateUserApplicationInput!): UserApplication_!
  UpdateUserApplicationEntity(input: UpdateUserApplicationEntityInput!): UserApplicationEntity_!
  UpdateUserFavorite(input: UpdateUserFavoriteInput!): UserFavorite_!
  UpdateUserNotification(input: UpdateUserNotificationInput!): UserNotification_!
  UpdateUserRecordLog(input: UpdateUserRecordLogInput!): UserRecordLog_!
  UpdateUserView(input: UpdateUserViewInput!): UserView_!
  UpdateUserViewRun(input: UpdateUserViewRunInput!): UserViewRun_!
  UpdateUserViewRunDetail(input: UpdateUserViewRunDetailInput!): UserViewRunDetail_!
  UpdateWorkflow(input: UpdateWorkflowInput!): Workflow_!
  UpdateWorkflowEngine(input: UpdateWorkflowEngineInput!): WorkflowEngine_!
  UpdateWorkflowRun(input: UpdateWorkflowRunInput!): WorkflowRun_!
  UpdateWorkspace(input: UpdateWorkspaceInput!): Workspace_!
  UpdateWorkspaceItem(input: UpdateWorkspaceItemInput!): WorkspaceItem_!
}

type OutputDeliveryType_ {
  Description: String
  ID: Int!
  Name: String!
  ReportsArray: [Report_!]!
}

type OutputFormatType_ {
  Description: String
  DisplayFormat: String
  ID: Int!
  Name: String!
  ReportsArray: [Report_!]!
}

type OutputTriggerType_ {
  Description: String
  ID: Int!
  Name: String!
  ReportsArray: [Report_!]!
}

input PrimaryKeyValueInputType {
  FieldName: String!
  Value: String!
}

type PrimaryKeyValueOutputType {
  FieldName: String!
  Value: String!
}

type PushStatusNotification {
  date: Timestamp!
  message: String
  sessionId: ID!
}

type Query {
  AIAction(ID: Int!): AIAction_
  AIModel(ID: Int!): AIModel_
  AIModelAction(ID: Int!): AIModelAction_
  AIModelType(ID: Int!): AIModelType_
  AllAIActions: [AIAction_!]!
  AllAIModelActions: [AIModelAction_!]!
  AllAIModelTypes: [AIModelType_!]!
  AllAIModels: [AIModel_!]!
  AllApplications: [Application_!]!
  AllAuditLogTypes: [AuditLogType_!]!
  AllAuthorizationRoles: [AuthorizationRole_!]!
  AllAuthorizations: [Authorization_!]!
  AllCompanies: [Company_!]!
  AllEmployees: [Employee_!]!
  AllEntities: [Entity_!]!
  AllEntityAIActions: [EntityAIAction_!]!
  AllEntityFieldValues: [EntityFieldValue_!]!
  AllEntityFields: [EntityField_!]!
  AllEntityPermissions: [EntityPermission_!]!
  AllEntityRelationships: [EntityRelationship_!]!
  AllIntegrationURLFormats: [IntegrationURLFormat_!]!
  AllIntegrations: [Integration_!]!
  AllRoles: [Role_!]!
  AllRowLevelSecurityFilters: [RowLevelSecurityFilter_!]!
  AllSkills: [Skill_!]!
  AllUserRoles: [UserRole_!]!
  AllUserViews: [UserView_!]!
  AllUsers: [User_!]!
  Application(ID: Int!): Application_
  ApplicationEntity(ID: Int!): ApplicationEntity_
  AuditLog(ID: Int!): AuditLog_
  AuditLogType(ID: Int!): AuditLogType_
  Authorization(ID: Int!): Authorization_
  AuthorizationRole(ID: Int!): AuthorizationRole_
  Company(ID: Int!): Company_
  CompanyIntegration(ID: Int!): CompanyIntegration_
  CompanyIntegrationRecordMap(ID: Int!): CompanyIntegrationRecordMap_
  CompanyIntegrationRun(ID: Int!): CompanyIntegrationRun_
  CompanyIntegrationRunAPILog(ID: Int!): CompanyIntegrationRunAPILog_
  CompanyIntegrationRunDetail(ID: Int!): CompanyIntegrationRunDetail_
  Conversation(ID: Int!): Conversation_
  ConversationDetail(ID: Int!): ConversationDetail_
  CurrentUser: User_!
  CurrentUserDefaultViewByEntityID(EntityID: Int!): [UserView_!]!
  CurrentUserUserViewsByEntityID(EntityID: Int!): [UserView_!]!
  Dashboard(ID: Int!): Dashboard_
  Dataset(ID: Int!): Dataset_
  DatasetItem(ID: Int!): DatasetItem_
  DefaultViewByUserAndEntity(EntityID: Int!, UserID: Int!): [UserView_!]!
  Employee(ID: Int!): Employee_
  EmployeeCompanyIntegration(ID: Int!): EmployeeCompanyIntegration_
  EmployeeRole(ID: Int!): EmployeeRole_
  EmployeeSkill(ID: Int!): EmployeeSkill_
  EntitiesBySchemas(ExcludeSchemas: [String!], IncludeSchemas: [String!]): [Entity_!]!
  Entity(ID: Int!): Entity_
  EntityAIAction(ID: Int!): EntityAIAction_
  EntityField(ID: Int!): EntityField_
  EntityFieldValue(ID: Int!): EntityFieldValue_
  EntityPermission(ID: Int!): EntityPermission_
  EntityRelationship(ID: Int!): EntityRelationship_
  ErrorLog(ID: Int!): ErrorLog_
  ExecuteAskSkipQuery(ConversationId: Int!, UserQuestion: String!): AskSkipResultType!
  GetDatasetByName(DatasetName: String!, ItemFilters: [DatasetItemFilterTypeGQL]): DatasetResultType!
  GetDatasetStatusByName(DatasetName: String!, ItemFilters: [DatasetItemFilterTypeGQL]): DatasetStatusResultType!
  GetEntityDependencies(entityName: String!): [EntityDependencyResult!]!
  GetEntityRecordName(EntityName: String!, PrimaryKeyValues: [PrimaryKeyValueInputType!]!): EntityRecordNameResult!
  GetEntityRecordNames(info: [EntityRecordNameInput!]!): [EntityRecordNameResult!]!
  GetRecordDependencies(entityName: String!, primaryKeyValues: [PrimaryKeyValueInputType!]!): [RecordDependencyResult!]!
  GetRecordFavoriteStatus(params: UserFavoriteSearchParams!): UserFavoriteResult!
  GetReportData(ReportID: Int!): RunReportResultType!
  Integration(ID: Int!): Integration_
  IntegrationURLFormat(ID: Int!): IntegrationURLFormat_
  List(ID: Int!): List_
  ListDetail(ID: Int!): ListDetail_
  OutputDeliveryType(ID: Int!): OutputDeliveryType_
  OutputFormatType(ID: Int!): OutputFormatType_
  OutputTriggerType(ID: Int!): OutputTriggerType_
  Queue(ID: Int!): Queue_
  QueueTask(ID: Int!): QueueTask_
  QueueType(ID: Int!): QueueType_
  RecordChange(ID: Int!): RecordChange_
  RecordMergeDeletionLog(ID: Int!): RecordMergeDeletionLog_
  RecordMergeLog(ID: Int!): RecordMergeLog_
  Report(ID: Int!): Report_
  ReportSnapshot(ID: Int!): ReportSnapshot_
  ResourceFolder(ID: Int!): ResourceFolder_
  ResourceType(ID: Int!): ResourceType_
  Role(ID: Int!): Role_
  RowLevelSecurityFilter(ID: Int!): RowLevelSecurityFilter_
  RunAIActionDynamicView(input: RunDynamicViewInput!): RunAIActionViewResult!
  RunAIActionViewByID(input: RunViewByIDInput!): RunAIActionViewResult!
  RunAIActionViewByName(input: RunViewByNameInput!): RunAIActionViewResult!
  RunAIModelActionDynamicView(input: RunDynamicViewInput!): RunAIModelActionViewResult!
  RunAIModelActionViewByID(input: RunViewByIDInput!): RunAIModelActionViewResult!
  RunAIModelActionViewByName(input: RunViewByNameInput!): RunAIModelActionViewResult!
  RunAIModelDynamicView(input: RunDynamicViewInput!): RunAIModelViewResult!
  RunAIModelTypeDynamicView(input: RunDynamicViewInput!): RunAIModelTypeViewResult!
  RunAIModelTypeViewByID(input: RunViewByIDInput!): RunAIModelTypeViewResult!
  RunAIModelTypeViewByName(input: RunViewByNameInput!): RunAIModelTypeViewResult!
  RunAIModelViewByID(input: RunViewByIDInput!): RunAIModelViewResult!
  RunAIModelViewByName(input: RunViewByNameInput!): RunAIModelViewResult!
  RunApplicationDynamicView(input: RunDynamicViewInput!): RunApplicationViewResult!
  RunApplicationEntityDynamicView(input: RunDynamicViewInput!): RunApplicationEntityViewResult!
  RunApplicationEntityViewByID(input: RunViewByIDInput!): RunApplicationEntityViewResult!
  RunApplicationEntityViewByName(input: RunViewByNameInput!): RunApplicationEntityViewResult!
  RunApplicationViewByID(input: RunViewByIDInput!): RunApplicationViewResult!
  RunApplicationViewByName(input: RunViewByNameInput!): RunApplicationViewResult!
  RunAuditLogDynamicView(input: RunDynamicViewInput!): RunAuditLogViewResult!
  RunAuditLogTypeDynamicView(input: RunDynamicViewInput!): RunAuditLogTypeViewResult!
  RunAuditLogTypeViewByID(input: RunViewByIDInput!): RunAuditLogTypeViewResult!
  RunAuditLogTypeViewByName(input: RunViewByNameInput!): RunAuditLogTypeViewResult!
  RunAuditLogViewByID(input: RunViewByIDInput!): RunAuditLogViewResult!
  RunAuditLogViewByName(input: RunViewByNameInput!): RunAuditLogViewResult!
  RunAuthorizationDynamicView(input: RunDynamicViewInput!): RunAuthorizationViewResult!
  RunAuthorizationRoleDynamicView(input: RunDynamicViewInput!): RunAuthorizationRoleViewResult!
  RunAuthorizationRoleViewByID(input: RunViewByIDInput!): RunAuthorizationRoleViewResult!
  RunAuthorizationRoleViewByName(input: RunViewByNameInput!): RunAuthorizationRoleViewResult!
  RunAuthorizationViewByID(input: RunViewByIDInput!): RunAuthorizationViewResult!
  RunAuthorizationViewByName(input: RunViewByNameInput!): RunAuthorizationViewResult!
  RunCompanyDynamicView(input: RunDynamicViewInput!): RunCompanyViewResult!
  RunCompanyIntegrationDynamicView(input: RunDynamicViewInput!): RunCompanyIntegrationViewResult!
  RunCompanyIntegrationRecordMapDynamicView(input: RunDynamicViewInput!): RunCompanyIntegrationRecordMapViewResult!
  RunCompanyIntegrationRecordMapViewByID(input: RunViewByIDInput!): RunCompanyIntegrationRecordMapViewResult!
  RunCompanyIntegrationRecordMapViewByName(input: RunViewByNameInput!): RunCompanyIntegrationRecordMapViewResult!
  RunCompanyIntegrationRunAPILogDynamicView(input: RunDynamicViewInput!): RunCompanyIntegrationRunAPILogViewResult!
  RunCompanyIntegrationRunAPILogViewByID(input: RunViewByIDInput!): RunCompanyIntegrationRunAPILogViewResult!
  RunCompanyIntegrationRunAPILogViewByName(input: RunViewByNameInput!): RunCompanyIntegrationRunAPILogViewResult!
  RunCompanyIntegrationRunDetailDynamicView(input: RunDynamicViewInput!): RunCompanyIntegrationRunDetailViewResult!
  RunCompanyIntegrationRunDetailViewByID(input: RunViewByIDInput!): RunCompanyIntegrationRunDetailViewResult!
  RunCompanyIntegrationRunDetailViewByName(input: RunViewByNameInput!): RunCompanyIntegrationRunDetailViewResult!
  RunCompanyIntegrationRunDynamicView(input: RunDynamicViewInput!): RunCompanyIntegrationRunViewResult!
  RunCompanyIntegrationRunViewByID(input: RunViewByIDInput!): RunCompanyIntegrationRunViewResult!
  RunCompanyIntegrationRunViewByName(input: RunViewByNameInput!): RunCompanyIntegrationRunViewResult!
  RunCompanyIntegrationViewByID(input: RunViewByIDInput!): RunCompanyIntegrationViewResult!
  RunCompanyIntegrationViewByName(input: RunViewByNameInput!): RunCompanyIntegrationViewResult!
  RunCompanyViewByID(input: RunViewByIDInput!): RunCompanyViewResult!
  RunCompanyViewByName(input: RunViewByNameInput!): RunCompanyViewResult!
  RunConversationDetailDynamicView(input: RunDynamicViewInput!): RunConversationDetailViewResult!
  RunConversationDetailViewByID(input: RunViewByIDInput!): RunConversationDetailViewResult!
  RunConversationDetailViewByName(input: RunViewByNameInput!): RunConversationDetailViewResult!
  RunConversationDynamicView(input: RunDynamicViewInput!): RunConversationViewResult!
  RunConversationViewByID(input: RunViewByIDInput!): RunConversationViewResult!
  RunConversationViewByName(input: RunViewByNameInput!): RunConversationViewResult!
  RunDashboardDynamicView(input: RunDynamicViewInput!): RunDashboardViewResult!
  RunDashboardViewByID(input: RunViewByIDInput!): RunDashboardViewResult!
  RunDashboardViewByName(input: RunViewByNameInput!): RunDashboardViewResult!
  RunDatasetDynamicView(input: RunDynamicViewInput!): RunDatasetViewResult!
  RunDatasetItemDynamicView(input: RunDynamicViewInput!): RunDatasetItemViewResult!
  RunDatasetItemViewByID(input: RunViewByIDInput!): RunDatasetItemViewResult!
  RunDatasetItemViewByName(input: RunViewByNameInput!): RunDatasetItemViewResult!
  RunDatasetViewByID(input: RunViewByIDInput!): RunDatasetViewResult!
  RunDatasetViewByName(input: RunViewByNameInput!): RunDatasetViewResult!
  RunDynamicView(input: RunDynamicViewInput!): RunViewResult!
  RunEmployeeCompanyIntegrationDynamicView(input: RunDynamicViewInput!): RunEmployeeCompanyIntegrationViewResult!
  RunEmployeeCompanyIntegrationViewByID(input: RunViewByIDInput!): RunEmployeeCompanyIntegrationViewResult!
  RunEmployeeCompanyIntegrationViewByName(input: RunViewByNameInput!): RunEmployeeCompanyIntegrationViewResult!
  RunEmployeeDynamicView(input: RunDynamicViewInput!): RunEmployeeViewResult!
  RunEmployeeRoleDynamicView(input: RunDynamicViewInput!): RunEmployeeRoleViewResult!
  RunEmployeeRoleViewByID(input: RunViewByIDInput!): RunEmployeeRoleViewResult!
  RunEmployeeRoleViewByName(input: RunViewByNameInput!): RunEmployeeRoleViewResult!
  RunEmployeeSkillDynamicView(input: RunDynamicViewInput!): RunEmployeeSkillViewResult!
  RunEmployeeSkillViewByID(input: RunViewByIDInput!): RunEmployeeSkillViewResult!
  RunEmployeeSkillViewByName(input: RunViewByNameInput!): RunEmployeeSkillViewResult!
  RunEmployeeViewByID(input: RunViewByIDInput!): RunEmployeeViewResult!
  RunEmployeeViewByName(input: RunViewByNameInput!): RunEmployeeViewResult!
  RunEntityAIActionDynamicView(input: RunDynamicViewInput!): RunEntityAIActionViewResult!
  RunEntityAIActionViewByID(input: RunViewByIDInput!): RunEntityAIActionViewResult!
  RunEntityAIActionViewByName(input: RunViewByNameInput!): RunEntityAIActionViewResult!
  RunEntityDynamicView(input: RunDynamicViewInput!): RunEntityViewResult!
  RunEntityFieldDynamicView(input: RunDynamicViewInput!): RunEntityFieldViewResult!
  RunEntityFieldValueDynamicView(input: RunDynamicViewInput!): RunEntityFieldValueViewResult!
  RunEntityFieldValueViewByID(input: RunViewByIDInput!): RunEntityFieldValueViewResult!
  RunEntityFieldValueViewByName(input: RunViewByNameInput!): RunEntityFieldValueViewResult!
  RunEntityFieldViewByID(input: RunViewByIDInput!): RunEntityFieldViewResult!
  RunEntityFieldViewByName(input: RunViewByNameInput!): RunEntityFieldViewResult!
  RunEntityPermissionDynamicView(input: RunDynamicViewInput!): RunEntityPermissionViewResult!
  RunEntityPermissionViewByID(input: RunViewByIDInput!): RunEntityPermissionViewResult!
  RunEntityPermissionViewByName(input: RunViewByNameInput!): RunEntityPermissionViewResult!
  RunEntityRelationshipDynamicView(input: RunDynamicViewInput!): RunEntityRelationshipViewResult!
  RunEntityRelationshipViewByID(input: RunViewByIDInput!): RunEntityRelationshipViewResult!
  RunEntityRelationshipViewByName(input: RunViewByNameInput!): RunEntityRelationshipViewResult!
  RunEntityViewByID(input: RunViewByIDInput!): RunEntityViewResult!
  RunEntityViewByName(input: RunViewByNameInput!): RunEntityViewResult!
  RunErrorLogDynamicView(input: RunDynamicViewInput!): RunErrorLogViewResult!
  RunErrorLogViewByID(input: RunViewByIDInput!): RunErrorLogViewResult!
  RunErrorLogViewByName(input: RunViewByNameInput!): RunErrorLogViewResult!
  RunIntegrationDynamicView(input: RunDynamicViewInput!): RunIntegrationViewResult!
  RunIntegrationURLFormatDynamicView(input: RunDynamicViewInput!): RunIntegrationURLFormatViewResult!
  RunIntegrationURLFormatViewByID(input: RunViewByIDInput!): RunIntegrationURLFormatViewResult!
  RunIntegrationURLFormatViewByName(input: RunViewByNameInput!): RunIntegrationURLFormatViewResult!
  RunIntegrationViewByID(input: RunViewByIDInput!): RunIntegrationViewResult!
  RunIntegrationViewByName(input: RunViewByNameInput!): RunIntegrationViewResult!
  RunListDetailDynamicView(input: RunDynamicViewInput!): RunListDetailViewResult!
  RunListDetailViewByID(input: RunViewByIDInput!): RunListDetailViewResult!
  RunListDetailViewByName(input: RunViewByNameInput!): RunListDetailViewResult!
  RunListDynamicView(input: RunDynamicViewInput!): RunListViewResult!
  RunListViewByID(input: RunViewByIDInput!): RunListViewResult!
  RunListViewByName(input: RunViewByNameInput!): RunListViewResult!
  RunOutputDeliveryTypeDynamicView(input: RunDynamicViewInput!): RunOutputDeliveryTypeViewResult!
  RunOutputDeliveryTypeViewByID(input: RunViewByIDInput!): RunOutputDeliveryTypeViewResult!
  RunOutputDeliveryTypeViewByName(input: RunViewByNameInput!): RunOutputDeliveryTypeViewResult!
  RunOutputFormatTypeDynamicView(input: RunDynamicViewInput!): RunOutputFormatTypeViewResult!
  RunOutputFormatTypeViewByID(input: RunViewByIDInput!): RunOutputFormatTypeViewResult!
  RunOutputFormatTypeViewByName(input: RunViewByNameInput!): RunOutputFormatTypeViewResult!
  RunOutputTriggerTypeDynamicView(input: RunDynamicViewInput!): RunOutputTriggerTypeViewResult!
  RunOutputTriggerTypeViewByID(input: RunViewByIDInput!): RunOutputTriggerTypeViewResult!
  RunOutputTriggerTypeViewByName(input: RunViewByNameInput!): RunOutputTriggerTypeViewResult!
  RunQueueDynamicView(input: RunDynamicViewInput!): RunQueueViewResult!
  RunQueueTaskDynamicView(input: RunDynamicViewInput!): RunQueueTaskViewResult!
  RunQueueTaskViewByID(input: RunViewByIDInput!): RunQueueTaskViewResult!
  RunQueueTaskViewByName(input: RunViewByNameInput!): RunQueueTaskViewResult!
  RunQueueTypeDynamicView(input: RunDynamicViewInput!): RunQueueTypeViewResult!
  RunQueueTypeViewByID(input: RunViewByIDInput!): RunQueueTypeViewResult!
  RunQueueTypeViewByName(input: RunViewByNameInput!): RunQueueTypeViewResult!
  RunQueueViewByID(input: RunViewByIDInput!): RunQueueViewResult!
  RunQueueViewByName(input: RunViewByNameInput!): RunQueueViewResult!
  RunRecordChangeDynamicView(input: RunDynamicViewInput!): RunRecordChangeViewResult!
  RunRecordChangeViewByID(input: RunViewByIDInput!): RunRecordChangeViewResult!
  RunRecordChangeViewByName(input: RunViewByNameInput!): RunRecordChangeViewResult!
  RunRecordMergeDeletionLogDynamicView(input: RunDynamicViewInput!): RunRecordMergeDeletionLogViewResult!
  RunRecordMergeDeletionLogViewByID(input: RunViewByIDInput!): RunRecordMergeDeletionLogViewResult!
  RunRecordMergeDeletionLogViewByName(input: RunViewByNameInput!): RunRecordMergeDeletionLogViewResult!
  RunRecordMergeLogDynamicView(input: RunDynamicViewInput!): RunRecordMergeLogViewResult!
  RunRecordMergeLogViewByID(input: RunViewByIDInput!): RunRecordMergeLogViewResult!
  RunRecordMergeLogViewByName(input: RunViewByNameInput!): RunRecordMergeLogViewResult!
  RunReportDynamicView(input: RunDynamicViewInput!): RunReportViewResult!
  RunReportSnapshotDynamicView(input: RunDynamicViewInput!): RunReportSnapshotViewResult!
  RunReportSnapshotViewByID(input: RunViewByIDInput!): RunReportSnapshotViewResult!
  RunReportSnapshotViewByName(input: RunViewByNameInput!): RunReportSnapshotViewResult!
  RunReportViewByID(input: RunViewByIDInput!): RunReportViewResult!
  RunReportViewByName(input: RunViewByNameInput!): RunReportViewResult!
  RunResourceFolderDynamicView(input: RunDynamicViewInput!): RunResourceFolderViewResult!
  RunResourceFolderViewByID(input: RunViewByIDInput!): RunResourceFolderViewResult!
  RunResourceFolderViewByName(input: RunViewByNameInput!): RunResourceFolderViewResult!
  RunResourceTypeDynamicView(input: RunDynamicViewInput!): RunResourceTypeViewResult!
  RunResourceTypeViewByID(input: RunViewByIDInput!): RunResourceTypeViewResult!
  RunResourceTypeViewByName(input: RunViewByNameInput!): RunResourceTypeViewResult!
  RunRoleDynamicView(input: RunDynamicViewInput!): RunRoleViewResult!
  RunRoleViewByID(input: RunViewByIDInput!): RunRoleViewResult!
  RunRoleViewByName(input: RunViewByNameInput!): RunRoleViewResult!
  RunRowLevelSecurityFilterDynamicView(input: RunDynamicViewInput!): RunRowLevelSecurityFilterViewResult!
  RunRowLevelSecurityFilterViewByID(input: RunViewByIDInput!): RunRowLevelSecurityFilterViewResult!
  RunRowLevelSecurityFilterViewByName(input: RunViewByNameInput!): RunRowLevelSecurityFilterViewResult!
  RunSchemaInfoDynamicView(input: RunDynamicViewInput!): RunSchemaInfoViewResult!
  RunSchemaInfoViewByID(input: RunViewByIDInput!): RunSchemaInfoViewResult!
  RunSchemaInfoViewByName(input: RunViewByNameInput!): RunSchemaInfoViewResult!
  RunSkillDynamicView(input: RunDynamicViewInput!): RunSkillViewResult!
  RunSkillViewByID(input: RunViewByIDInput!): RunSkillViewResult!
  RunSkillViewByName(input: RunViewByNameInput!): RunSkillViewResult!
  RunTagDynamicView(input: RunDynamicViewInput!): RunTagViewResult!
  RunTagViewByID(input: RunViewByIDInput!): RunTagViewResult!
  RunTagViewByName(input: RunViewByNameInput!): RunTagViewResult!
  RunTaggedItemDynamicView(input: RunDynamicViewInput!): RunTaggedItemViewResult!
  RunTaggedItemViewByID(input: RunViewByIDInput!): RunTaggedItemViewResult!
  RunTaggedItemViewByName(input: RunViewByNameInput!): RunTaggedItemViewResult!
  RunUserApplicationDynamicView(input: RunDynamicViewInput!): RunUserApplicationViewResult!
  RunUserApplicationEntityDynamicView(input: RunDynamicViewInput!): RunUserApplicationEntityViewResult!
  RunUserApplicationEntityViewByID(input: RunViewByIDInput!): RunUserApplicationEntityViewResult!
  RunUserApplicationEntityViewByName(input: RunViewByNameInput!): RunUserApplicationEntityViewResult!
  RunUserApplicationViewByID(input: RunViewByIDInput!): RunUserApplicationViewResult!
  RunUserApplicationViewByName(input: RunViewByNameInput!): RunUserApplicationViewResult!
  RunUserDynamicView(input: RunDynamicViewInput!): RunUserViewResult!
  RunUserFavoriteDynamicView(input: RunDynamicViewInput!): RunUserFavoriteViewResult!
  RunUserFavoriteViewByID(input: RunViewByIDInput!): RunUserFavoriteViewResult!
  RunUserFavoriteViewByName(input: RunViewByNameInput!): RunUserFavoriteViewResult!
  RunUserNotificationDynamicView(input: RunDynamicViewInput!): RunUserNotificationViewResult!
  RunUserNotificationViewByID(input: RunViewByIDInput!): RunUserNotificationViewResult!
  RunUserNotificationViewByName(input: RunViewByNameInput!): RunUserNotificationViewResult!
  RunUserRecordLogDynamicView(input: RunDynamicViewInput!): RunUserRecordLogViewResult!
  RunUserRecordLogViewByID(input: RunViewByIDInput!): RunUserRecordLogViewResult!
  RunUserRecordLogViewByName(input: RunViewByNameInput!): RunUserRecordLogViewResult!
  RunUserRoleDynamicView(input: RunDynamicViewInput!): RunUserRoleViewResult!
  RunUserRoleViewByID(input: RunViewByIDInput!): RunUserRoleViewResult!
  RunUserRoleViewByName(input: RunViewByNameInput!): RunUserRoleViewResult!
  RunUserViewByID(input: RunViewByIDInput!): RunUserViewResult!
  RunUserViewByName(input: RunViewByNameInput!): RunUserViewResult!
  RunUserViewDynamicView(input: RunDynamicViewInput!): RunUserViewViewResult!
  RunUserViewRunDetailDynamicView(input: RunDynamicViewInput!): RunUserViewRunDetailViewResult!
  RunUserViewRunDetailViewByID(input: RunViewByIDInput!): RunUserViewRunDetailViewResult!
  RunUserViewRunDetailViewByName(input: RunViewByNameInput!): RunUserViewRunDetailViewResult!
  RunUserViewRunDynamicView(input: RunDynamicViewInput!): RunUserViewRunViewResult!
  RunUserViewRunViewByID(input: RunViewByIDInput!): RunUserViewRunViewResult!
  RunUserViewRunViewByName(input: RunViewByNameInput!): RunUserViewRunViewResult!
  RunUserViewViewByID(input: RunViewByIDInput!): RunUserViewViewResult!
  RunUserViewViewByName(input: RunViewByNameInput!): RunUserViewViewResult!
  RunViewByID(input: RunViewByIDInput!): RunViewResult!
  RunViewByName(input: RunViewByNameInput!): RunViewResult!
  RunWorkflowDynamicView(input: RunDynamicViewInput!): RunWorkflowViewResult!
  RunWorkflowEngineDynamicView(input: RunDynamicViewInput!): RunWorkflowEngineViewResult!
  RunWorkflowEngineViewByID(input: RunViewByIDInput!): RunWorkflowEngineViewResult!
  RunWorkflowEngineViewByName(input: RunViewByNameInput!): RunWorkflowEngineViewResult!
  RunWorkflowRunDynamicView(input: RunDynamicViewInput!): RunWorkflowRunViewResult!
  RunWorkflowRunViewByID(input: RunViewByIDInput!): RunWorkflowRunViewResult!
  RunWorkflowRunViewByName(input: RunViewByNameInput!): RunWorkflowRunViewResult!
  RunWorkflowViewByID(input: RunViewByIDInput!): RunWorkflowViewResult!
  RunWorkflowViewByName(input: RunViewByNameInput!): RunWorkflowViewResult!
  RunWorkspaceDynamicView(input: RunDynamicViewInput!): RunWorkspaceViewResult!
  RunWorkspaceItemDynamicView(input: RunDynamicViewInput!): RunWorkspaceItemViewResult!
  RunWorkspaceItemViewByID(input: RunViewByIDInput!): RunWorkspaceItemViewResult!
  RunWorkspaceItemViewByName(input: RunViewByNameInput!): RunWorkspaceItemViewResult!
  RunWorkspaceViewByID(input: RunViewByIDInput!): RunWorkspaceViewResult!
  RunWorkspaceViewByName(input: RunViewByNameInput!): RunWorkspaceViewResult!
  SchemaInfo(ID: Int!): SchemaInfo_
  Skill(ID: Int!): Skill_
  Tag(ID: Int!): Tag_
  TaggedItem(ID: Int!): TaggedItem_
  UpdateWhereClause(ID: Int!): [UserView_!]!
  User(ID: Int!): User_
  UserApplication(ID: Int!): UserApplication_
  UserApplicationEntity(ID: Int!): UserApplicationEntity_
  UserByEmail(Email: String!): User_!
  UserByEmployeeID(EmployeeID: Int!): User_!
  UserByID(ID: Int!): User_!
  UserFavorite(ID: Int!): UserFavorite_
  UserFavoriteSearchByParams(params: Int!): [UserFavorite_!]!
  UserFavoritesByUserID(UserID: Int!): [UserFavorite_!]!
  UserNotification(ID: Int!): UserNotification_
  UserRecordLog(ID: Int!): UserRecordLog_
  UserRole(ID: Int!): UserRole_
  UserView(ID: Int!): UserView_
  UserViewRun(ID: Int!): UserViewRun_
  UserViewRunDetail(ID: Int!): UserViewRunDetail_
  UserViewsByUserID(UserID: Int!): [UserView_!]!
  Workflow(ID: Int!): Workflow_
  WorkflowEngine(ID: Int!): WorkflowEngine_
  WorkflowRun(ID: Int!): WorkflowRun_
  Workspace(ID: Int!): Workspace_
  WorkspaceItem(ID: Int!): WorkspaceItem_
  colors: [Color!]!
}

type QueueTask_ {
  Comments: String
  Data: String
  EndedAt: Timestamp
  ErrorMessage: String
  ID: Int!
  Options: String
  Output: String
  QueueID: Int!
  StartedAt: Timestamp
  Status: String!
}

type QueueType_ {
  Description: String
  DriverClass: String!
  DriverImportPath: String
  ID: Int!
  IsActive: Boolean!
  Name: String!
  QueuesArray: [Queue_!]!
}

type Queue_ {
  CreatedAt: Timestamp!
  Description: String
  ID: Int!
  IsActive: Boolean!
  LastHeartbeat: Timestamp!
  Name: String!
  ProcessCwd: String
  ProcessHostName: String
  ProcessIPAddress: String
  ProcessMacAddress: String
  ProcessOSName: String
  ProcessOSVersion: String
  ProcessPID: Int
  ProcessPlatform: String
  ProcessUserID: String
  ProcessUserName: String
  ProcessVersion: String
  QueueTasksArray: [QueueTask_!]!
  QueueType: String!
  QueueTypeID: Int!
  UpdatedAt: Timestamp!
}

"""Tracks history of all pending and complete data changes to records"""
type RecordChange_ {
  ChangedAt: Timestamp!
  ChangesDescription: String!
  ChangesJSON: String!
  Comments: String
  Entity: String!
  EntityID: Int!
  FullRecordJSON: String!
  ID: Int!
  RecordID: String!
  Status: String!
  User: String!
  UserID: Int!
}

type RecordDependencyResult {
  EntityName: String!
  FieldName: String!
  RecordID: Int!
  RelatedEntityName: String!
}

type RecordMergeDeletionLog_ {
  CreatedAt: Timestamp!
  DeletedRecordID: String!
  ID: Int!
  ProcessingLog: String
  RecordMergeLogID: Int!
  Status: String!
  UpdatedAt: Timestamp!
}

type RecordMergeDetailResult {
  Message: String
  PrimaryKeyValues: [PrimaryKeyValueOutputType!]!
  RecordMergeDeletionLogID: Int
  Success: Boolean!
}

type RecordMergeLog_ {
  ApprovalStatus: String!
  ApprovedByUserID: Int
  Comments: String
  CreatedAt: Timestamp!
  Entity: String!
  EntityID: Int!
  ID: Int!
  InitiatedByUser: String!
  InitiatedByUserID: Int!
  ProcessingEndedAt: Timestamp
  ProcessingLog: String
  ProcessingStartedAt: Timestamp!
  ProcessingStatus: String!
  RecordMergeDeletionLogsArray: [RecordMergeDeletionLog_!]!
  SurvivingRecordID: String!
  UpdatedAt: Timestamp
}

input RecordMergeRequest {
  EntityName: String!
  FieldMap: [FieldMapping!]
  RecordsToMerge: [[PrimaryKeyValueInputType!]!]!
  SurvivingRecordPrimaryKeyValues: [PrimaryKeyValueInputType!]!
}

type RecordMergeRequestOutput {
  EntityName: String!
  FieldMap: [FieldMappingOutput!]
  RecordsToMerge: [Int!]!
  SurvivingRecordID: Int!
}

type RecordMergeResult {
  OverallStatus: String
  RecordMergeLogID: Int
  RecordStatus: [RecordMergeDetailResult!]!
  Request: RecordMergeRequestOutput!
  Success: Boolean!
}

type ReportSnapshot_ {
  CreatedAt: Timestamp!
  ID: Int!
  Report: String!
  ReportID: Int!
  ResultSet: String!
  User: String
  UserID: Int
}

type Report_ {
  Conversation: String
  ConversationDetailID: Int
  ConversationID: Int
  CreatedAt: Timestamp!
  Description: String
  ID: Int!
  Name: String!
  OutputDeliveryType: String
  OutputDeliveryTypeID: Int
  OutputEvent: String
  OutputEventID: Int
  OutputFormatType: String
  OutputFormatTypeID: Int
  OutputFrequency: String
  OutputTargetEmail: String
  OutputTriggerType: String
  OutputTriggerTypeID: Int
  OutputWorkflowID: Int
  ReportConfiguration: String
  ReportSQL: String
  ReportSnapshotsArray: [ReportSnapshot_!]!
  SharingScope: String!
  UpdatedAt: Timestamp!
  User: String!
  UserID: Int!
}

type ResourceFolder_ {
  CreatedAt: Timestamp!
  Description: String
  ID: Int!
  Name: String!
  Parent: String
  ParentID: Int
  ResourceFoldersArray: [ResourceFolder_!]!
  ResourceTypeName: String!
  UpdatedAt: Timestamp!
  User: String!
  UserID: Int!
}

type ResourceType_ {
  CreatedAt: Timestamp!
  Description: String
  DisplayName: String!
  Entity: String
  EntityID: Int
  ID: Int!
  Icon: String
  Name: String!
  ResourceFoldersArray: [ResourceFolder_!]!
  UpdatedAt: Timestamp!
  WorkspaceItemsArray: [WorkspaceItem_!]!
}

type Role_ {
  AuthorizationRolesArray: [AuthorizationRole_!]!
  AzureID: String
  CreatedAt: Timestamp!
  Description: String
  EmployeeRolesArray: [EmployeeRole_!]!
  EntityPermissionsArray: [EntityPermission_!]!
  ID: Int!
  Name: String!
  SQLName: String!
  UpdatedAt: Timestamp!
  UserRolesArray: [UserRole_!]!
}

type RowLevelSecurityFilter_ {
  CreatedAt: Timestamp!
  Description: String
  EntityPermissionsArray: [EntityPermission_!]!
  FilterText: String
  ID: Int!
  Name: String!
  UpdatedAt: Timestamp!
}

type RunAIActionViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [AIAction_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunAIModelActionViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [AIModelAction_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunAIModelTypeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [AIModelType_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunAIModelViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [AIModel_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunApplicationEntityViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [ApplicationEntity_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunApplicationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Application_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunAuditLogTypeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [AuditLogType_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunAuditLogViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [AuditLog_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunAuthorizationRoleViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [AuthorizationRole_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunAuthorizationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Authorization_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunCompanyIntegrationRecordMapViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [CompanyIntegrationRecordMap_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunCompanyIntegrationRunAPILogViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [CompanyIntegrationRunAPILog_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunCompanyIntegrationRunDetailViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [CompanyIntegrationRunDetail_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunCompanyIntegrationRunViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [CompanyIntegrationRun_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunCompanyIntegrationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [CompanyIntegration_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunCompanyViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Company_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunConversationDetailViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [ConversationDetail_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunConversationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Conversation_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunDashboardViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Dashboard_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunDatasetItemViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [DatasetItem_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunDatasetViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Dataset_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

input RunDynamicViewInput {
  """
  if provided and either ForceAuditLog is set, or the entity's property settings for logging view runs are set to true, this will be used as the Audit Log Description.
  """
  AuditLogDescription: String
  EntityName: String!

  """
  Pass in a UserViewRun ID value to exclude all records from that run from results
  """
  ExcludeUserViewRunID: Int

  """
  Optional, pass in a valid condition to use as the view WHERE clause. For example, UpdatedAt >= Some Date - if not provided, no filter is applied
  """
  ExtraFilter: String

  """
  Optional, array of entity field names, if not provided, all columns are returned. If provided, only the fields in the array are returned.
  """
  Fields: [String!]

  """
  If set to true, an Audit Log record will be created for the view run, regardless of the property settings in the entity for auditing view runs
  """
  ForceAuditLog: Boolean

  """
  if set to true, if there IS any UserViewMaxRows property set for the entity in question, it will be IGNORED. This is useful in scenarios where you want to programmatically run a view and get ALL the data back, regardless of the MaxRows setting on the entity.
  """
  IgnoreMaxRows: Boolean

  """
  Optional, pass in a valid order by clause sort the results on the server. For example, CreatedAt DESC to order by row creation date in reverse order. Any Valid SQL Order By clause is okay - if not provided, no server-side sorting is applied
  """
  OrderBy: String

  """
  Pass in a valid condition to append to the view WHERE clause to override the Exclude List. For example, UpdatedAt >= Some Date
  """
  OverrideExcludeFilter: String
  UserSearchString: String
}

type RunEmployeeCompanyIntegrationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EmployeeCompanyIntegration_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEmployeeRoleViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EmployeeRole_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEmployeeSkillViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EmployeeSkill_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEmployeeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Employee_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEntityAIActionViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EntityAIAction_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEntityFieldValueViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EntityFieldValue_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEntityFieldViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EntityField_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEntityPermissionViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EntityPermission_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEntityRelationshipViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [EntityRelationship_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunEntityViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Entity_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunErrorLogViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [ErrorLog_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunIntegrationURLFormatViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [IntegrationURLFormat_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunIntegrationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Integration_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunListDetailViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [ListDetail_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunListViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [List_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunOutputDeliveryTypeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [OutputDeliveryType_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunOutputFormatTypeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [OutputFormatType_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunOutputTriggerTypeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [OutputTriggerType_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunQueueTaskViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [QueueTask_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunQueueTypeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [QueueType_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunQueueViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Queue_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunRecordChangeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [RecordChange_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunRecordMergeDeletionLogViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [RecordMergeDeletionLog_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunRecordMergeLogViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [RecordMergeLog_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunReportResultType {
  ErrorMessage: String!
  ExecutionTime: Float!
  ReportID: Float!
  Results: String!
  RowCount: Float!
  Success: Boolean!
}

type RunReportSnapshotViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [ReportSnapshot_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunReportViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Report_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunResourceFolderViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [ResourceFolder_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunResourceTypeViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [ResourceType_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunRoleViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Role_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunRowLevelSecurityFilterViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [RowLevelSecurityFilter_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunSchemaInfoViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [SchemaInfo_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunSkillViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Skill_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunTagViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Tag_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunTaggedItemViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [TaggedItem_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserApplicationEntityViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserApplicationEntity_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserApplicationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserApplication_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserFavoriteViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserFavorite_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserNotificationViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserNotification_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserRecordLogViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserRecordLog_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserRoleViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserRole_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [User_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserViewRunDetailViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserViewRunDetail_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserViewRunViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserViewRun_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunUserViewViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [UserView_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

input RunViewByIDInput {
  """
  if provided and either ForceAuditLog is set, or the entity's property settings for logging view runs are set to true, this will be used as the Audit Log Description.
  """
  AuditLogDescription: String

  """
  if set to true, the resulting data will filter out ANY records that were ever returned by this view, when the SaveViewResults property was set to true. This is useful if you want to run a particular view over time and make sure the results returned each time are new to the view.
  """
  ExcludeDataFromAllPriorViewRuns: Boolean

  """
  Pass in a UserViewRun ID value to exclude all records from that run from results
  """
  ExcludeUserViewRunID: Int

  """
  Optional, pass in a valid condition to append to the view WHERE clause. For example, UpdatedAt >= Some Date - if not provided, no filter is applied
  """
  ExtraFilter: String

  """
  Optional, array of entity field names, if not provided, ID and all other columns used in the view columns are returned. If provided, only the fields in the array are returned.
  """
  Fields: [String!]

  """
  If set to true, an Audit Log record will be created for the view run, regardless of the property settings in the entity for auditing view runs
  """
  ForceAuditLog: Boolean

  """
  if set to true, if there IS any UserViewMaxRows property set for the entity in question, it will be IGNORED. This is useful in scenarios where you want to programmatically run a view and get ALL the data back, regardless of the MaxRows setting on the entity.
  """
  IgnoreMaxRows: Boolean

  """
  Optional, pass in a valid order by clause sort the results on the server. For example, CreatedAt DESC to order by row creation date in reverse order. Any Valid SQL Order By clause is okay - if not provided, no server-side sorting is applied
  """
  OrderBy: String

  """
  Pass in a valid condition to append to the view WHERE clause to override the Exclude List. For example, UpdatedAt >= Some Date
  """
  OverrideExcludeFilter: String

  """
  If set to True, the results of this view are saved into a new UserViewRun record and the UserViewRun.ID is passed back in the results.
  """
  SaveViewResults: Boolean
  UserSearchString: String
  ViewID: Int!
}

input RunViewByNameInput {
  """
  if provided and either ForceAuditLog is set, or the entity's property settings for logging view runs are set to true, this will be used as the Audit Log Description.
  """
  AuditLogDescription: String

  """
  if set to true, the resulting data will filter out ANY records that were ever returned by this view, when the SaveViewResults property was set to true. This is useful if you want to run a particular view over time and make sure the results returned each time are new to the view.
  """
  ExcludeDataFromAllPriorViewRuns: Boolean

  """
  Pass in a UserViewRun ID value to exclude all records from that run from results
  """
  ExcludeUserViewRunID: Int

  """
  Optional, pass in a valid condition to append to the view WHERE clause. For example, UpdatedAt >= Some Date - if not provided, no filter is applied
  """
  ExtraFilter: String

  """
  Optional, array of entity field names, if not provided, ID and all other columns used in the view are returned. If provided, only the fields in the array are returned.
  """
  Fields: [String!]

  """
  If set to true, an Audit Log record will be created for the view run, regardless of the property settings in the entity for auditing view runs
  """
  ForceAuditLog: Boolean

  """
  if set to true, if there IS any UserViewMaxRows property set for the entity in question, it will be IGNORED. This is useful in scenarios where you want to programmatically run a view and get ALL the data back, regardless of the MaxRows setting on the entity.
  """
  IgnoreMaxRows: Boolean

  """
  Optional, pass in a valid order by clause sort the results on the server. For example, CreatedAt DESC to order by row creation date in reverse order. Any Valid SQL Order By clause is okay - if not provided, no server-side sorting is applied
  """
  OrderBy: String

  """
  Pass in a valid condition to append to the view WHERE clause to override the Exclude List. For example, UpdatedAt >= Some Date
  """
  OverrideExcludeFilter: String

  """
  If set to True, the results of this view are saved into a new UserViewRun record and the UserViewRun.ID is passed back in the results.
  """
  SaveViewResults: Boolean
  UserSearchString: String
  ViewName: String!
}

type RunViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [RunViewResultRow!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunViewResultRow {
  Data: String!
  EntityID: Int!
  ID: Int!
}

type RunWorkflowEngineViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [WorkflowEngine_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunWorkflowRunViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [WorkflowRun_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunWorkflowViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Workflow_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunWorkspaceItemViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [WorkspaceItem_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type RunWorkspaceViewResult {
  ErrorMessage: String
  ExecutionTime: Int
  Results: [Workspace_!]!
  RowCount: Int
  Success: Boolean!
  TotalRowCount: Int
  UserViewRunID: Int
}

type SchemaInfo_ {
  Comments: String
  CreatedAt: Timestamp!
  EntityIDMax: Int!
  EntityIDMin: Int!
  ID: Int!
  SchemaName: String!
  UpdatedAt: Timestamp!
}

type Skill_ {
  CreatedAt: Timestamp!
  EmployeeSkillsArray: [EmployeeSkill_!]!
  ID: Int!
  Name: String!
  Parent: String
  ParentID: Int
  SkillsArray: [Skill_!]!
  UpdatedAt: Timestamp!
}

type Subscription {
  colorSubscription: ColorNotification!
  statusUpdates(sessionId: String!): PushStatusNotification!
}

type Tag_ {
  Description: String
  DisplayName: String!
  ID: Int!
  Name: String!
  Parent: String
  ParentID: Int
  TaggedItemsArray: [TaggedItem_!]!
  TagsArray: [Tag_!]!
}

type TaggedItem_ {
  Entity: String!
  EntityID: Int!
  ID: Int!
  RecordID: String!
  Tag: String!
  TagID: Int!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UpdateAIActionInput {
  DefaultModelID: Int
  DefaultPrompt: String
  Description: String
  ID: Int!
  IsActive: Boolean!
  Name: String!
}

input UpdateAIModelActionInput {
  AIActionID: Int!
  AIModelID: Int!
  ID: Int!
  IsActive: Boolean!
}

input UpdateAIModelInput {
  AIModelTypeID: Int!
  Description: String
  DriverClass: String
  DriverImportPath: String
  ID: Int!
  IsActive: Boolean!
  Name: String!
  Vendor: String
}

input UpdateAIModelTypeInput {
  Description: String
  ID: Int!
  Name: String!
}

input UpdateApplicationEntityInput {
  ApplicationName: String
  DefaultForNewUser: Boolean!
  EntityID: Int!
  ID: Int!
  Sequence: Int!
}

input UpdateApplicationInput {
  Description: String
  ID: Int!
  Name: String!
}

input UpdateAuditLogInput {
  AuditLogTypeName: String
  AuthorizationName: String
  Description: String
  Details: String
  EntityID: Int
  ID: Int!
  RecordID: String
  Status: String!
  UserID: Int!
}

input UpdateCompanyInput {
  Description: String!
  Domain: String
  ID: Int!
  LogoURL: String
  Name: String!
  Website: String
}

input UpdateCompanyIntegrationInput {
  APIKey: String
  AccessToken: String
  ClientID: String
  ClientSecret: String
  CompanyName: String!
  CustomAttribute1: String
  ExternalSystemID: String
  ID: Int!
  IntegrationName: String!
  IsActive: Boolean
  IsExternalSystemReadOnly: Boolean!
  RefreshToken: String
  TokenExpirationDate: Timestamp
}

input UpdateCompanyIntegrationRecordMapInput {
  CompanyIntegrationID: Int!
  EntityID: Int!
  EntityRecordID: String!
  ExternalSystemRecordID: String!
  ID: Int!
}

input UpdateCompanyIntegrationRunAPILogInput {
  CompanyIntegrationRunID: Int!
  ExecutedAt: Timestamp!
  ID: Int!
  IsSuccess: Boolean!
  Parameters: String
  RequestMethod: String
  URL: String
}

input UpdateCompanyIntegrationRunDetailInput {
  Action: String!
  CompanyIntegrationRunID: Int!
  EntityID: Int!
  ExecutedAt: Timestamp!
  ID: Int!
  IsSuccess: Boolean!
  RecordID: String!
}

input UpdateCompanyIntegrationRunInput {
  Comments: String
  CompanyIntegrationID: Int!
  EndedAt: Timestamp
  ID: Int!
  RunByUserID: Int!
  StartedAt: Timestamp
  TotalRecords: Int!
}

input UpdateConversationDetailInput {
  ConversationID: Int!
  Error: String
  ExternalID: String
  ID: Int!
  Message: String!
  Role: String!
}

input UpdateConversationInput {
  ExternalID: String
  ID: Int!
  Name: String
  UserID: Int!
}

input UpdateDashboardInput {
  Description: String
  ID: Int!
  Name: String!
  UIConfigDetails: String!
  UserID: Int
}

input UpdateEmployeeCompanyIntegrationInput {
  CompanyIntegrationID: Int!
  EmployeeID: Int!
  ExternalSystemRecordID: String!
  ID: Int!
  IsActive: Boolean!
}

input UpdateEmployeeInput {
  Active: Boolean!
  CompanyID: Int!
  Email: String!
  FirstName: String!
  ID: Int!
  LastName: String!
  Phone: String
  SupervisorID: Int
  Title: String
}

input UpdateEmployeeRoleInput {
  EmployeeID: Int!
  ID: Int!
  RoleID: Int!
}

input UpdateEmployeeSkillInput {
  EmployeeID: Int!
  ID: Int!
  SkillID: Int!
}

input UpdateEntityAIActionInput {
  AIActionID: Int!
  AIModelID: Int
  Comments: String
  EntityID: Int!
  ID: Int!
  Name: String!
  OutputEntityID: Int
  OutputField: String
  OutputType: String!
  Prompt: String
  SkipIfOutputFieldNotEmpty: Boolean!
  TriggerEvent: String!
  UserMessage: String!
}

input UpdateEntityFieldInput {
  AllowUpdateAPI: Boolean!
  AllowUpdateInView: Boolean!
  Category: String
  DefaultColumnWidth: Int
  DefaultInView: Boolean!
  Description: String
  DisplayName: String
  ExtendedType: String
  FullTextSearchEnabled: Boolean!
  GeneratedFormSection: String!
  ID: Int!
  IncludeInGeneratedForm: Boolean!
  IncludeInUserSearchAPI: Boolean!
  IncludeRelatedEntityNameFieldInBaseView: Boolean!
  IsNameField: Boolean!
  IsPrimaryKey: Boolean!
  IsUnique: Boolean!
  RelatedEntityFieldName: String
  RelatedEntityID: Int
  RelatedEntityNameFieldMap: String
  UserSearchParamFormatAPI: String
  ValueListType: String!
  ViewCellTemplate: String
}

input UpdateEntityInput {
  AllowAllRowsAPI: Boolean!
  AllowCreateAPI: Boolean!
  AllowDeleteAPI: Boolean!
  AllowUpdateAPI: Boolean!
  AllowUserSearchAPI: Boolean!
  AuditRecordAccess: Boolean!
  AuditViewRuns: Boolean!
  BaseView: String!
  BaseViewGenerated: Boolean!
  CascadeDeletes: Boolean!
  CustomResolverAPI: Boolean!
  Description: String
  EntityObjectSubclassImport: String
  EntityObjectSubclassName: String
  FullTextCatalog: String
  FullTextCatalogGenerated: Boolean!
  FullTextIndex: String
  FullTextIndexGenerated: Boolean!
  FullTextSearchEnabled: Boolean!
  FullTextSearchFunction: String
  FullTextSearchFunctionGenerated: Boolean!
  ID: Int!
  IncludeInAPI: Boolean!
  Name: String!
  NameSuffix: String
  ParentID: Int
  TrackRecordChanges: Boolean!
  UserFormGenerated: Boolean!
  UserViewMaxRows: Int
  VirtualEntity: Boolean!
  spCreate: String
  spCreateGenerated: Boolean!
  spDelete: String
  spDeleteGenerated: Boolean!
  spUpdate: String
  spUpdateGenerated: Boolean!
}

input UpdateEntityPermissionInput {
  CanCreate: Boolean!
  CanDelete: Boolean!
  CanRead: Boolean!
  CanUpdate: Boolean!
  CreateRLSFilterID: Int
  DeleteRLSFilterID: Int
  EntityID: Int!
  ID: Int!
  ReadRLSFilterID: Int
  RoleName: String
  UpdateRLSFilterID: Int
}

input UpdateEntityRelationshipInput {
  BundleInAPI: Boolean!
  DisplayInForm: Boolean!
  DisplayName: String
  EntityID: Int!
  EntityKeyField: String
  ID: Int!
  IncludeInParentAllQuery: Boolean!
  JoinEntityInverseJoinField: String
  JoinEntityJoinField: String
  JoinView: String
  RelatedEntityID: Int!
  RelatedEntityJoinField: String!
  Type: String!
}

input UpdateErrorLogInput {
  Category: String
  Code: String
  CompanyIntegrationRunDetailID: Int
  CompanyIntegrationRunID: Int
  CreatedBy: String
  Details: String
  ID: Int!
  Message: String
  Status: String
}

input UpdateIntegrationInput {
  BatchMaxRequestCount: Int!
  BatchRequestWaitTime: Int!
  ClassName: String
  Description: String
  ID: Int!
  ImportPath: String
  Name: String!
  NavigationBaseURL: String
}

input UpdateIntegrationURLFormatInput {
  EntityID: Int!
  ID: Int!
  IntegrationName: String
  URLFormat: String!
}

input UpdateListDetailInput {
  ID: Int!
  ListID: Int!
  RecordID: String!
  Sequence: Int!
}

input UpdateListInput {
  CompanyIntegrationID: Int
  Description: String
  EntityID: Int
  ExternalSystemRecordID: String
  ID: Int!
  Name: String!
  UserID: Int!
}

input UpdateQueueInput {
  Description: String
  ID: Int!
  IsActive: Boolean!
  LastHeartbeat: Timestamp!
  Name: String!
  ProcessCwd: String
  ProcessHostName: String
  ProcessIPAddress: String
  ProcessMacAddress: String
  ProcessOSName: String
  ProcessOSVersion: String
  ProcessPID: Int
  ProcessPlatform: String
  ProcessUserID: String
  ProcessUserName: String
  ProcessVersion: String
  QueueTypeID: Int!
}

input UpdateQueueTaskInput {
  Comments: String
  Data: String
  EndedAt: Timestamp
  ErrorMessage: String
  ID: Int!
  Options: String
  Output: String
  QueueID: Int!
  StartedAt: Timestamp
  Status: String!
}

input UpdateRecordMergeDeletionLogInput {
  DeletedRecordID: String!
  ID: Int!
  ProcessingLog: String
  RecordMergeLogID: Int!
  Status: String!
}

input UpdateRecordMergeLogInput {
  ApprovalStatus: String!
  ApprovedByUserID: Int
  Comments: String
  EntityID: Int!
  ID: Int!
  InitiatedByUserID: Int!
  ProcessingEndedAt: Timestamp
  ProcessingLog: String
  ProcessingStartedAt: Timestamp!
  ProcessingStatus: String!
  SurvivingRecordID: String!
}

input UpdateReportInput {
  ConversationDetailID: Int
  ConversationID: Int
  Description: String
  ID: Int!
  Name: String!
  OutputDeliveryTypeID: Int
  OutputEventID: Int
  OutputFormatTypeID: Int
  OutputFrequency: String
  OutputTargetEmail: String
  OutputTriggerTypeID: Int
  OutputWorkflowID: Int
  ReportConfiguration: String
  ReportSQL: String
  SharingScope: String!
  UserID: Int!
}

input UpdateReportSnapshotInput {
  ID: Int!
  ReportID: Int!
  ResultSet: String!
  UserID: Int
}

input UpdateResourceFolderInput {
  Description: String
  ID: Int!
  Name: String!
  ParentID: Int
  ResourceTypeName: String!
  UserID: Int!
}

input UpdateRoleInput {
  AzureID: String
  Description: String
  ID: Int!
  Name: String!
  SQLName: String!
}

input UpdateSchemaInfoInput {
  Comments: String
  EntityIDMax: Int!
  EntityIDMin: Int!
  ID: Int!
  SchemaName: String!
}

input UpdateUserApplicationEntityInput {
  EntityID: Int!
  ID: Int!
  Sequence: Int!
  UserApplicationID: Int!
}

input UpdateUserApplicationInput {
  ApplicationID: Int!
  ID: Int!
  IsActive: Boolean!
  Sequence: Int!
  UserID: Int!
}

input UpdateUserFavoriteInput {
  EntityID: Int!
  ID: Int!
  RecordID: String!
  UserID: Int!
}

input UpdateUserInput {
  Email: String!
  EmployeeID: Int
  FirstName: String
  ID: Int!
  IsActive: Boolean!
  LastName: String
  LinkedEntityID: Int
  LinkedEntityRecordID: Int
  LinkedRecordType: String!
  Name: String!
  Title: String
  Type: String!
}

input UpdateUserNotificationInput {
  ID: Int!
  Message: String
  ReadAt: Timestamp
  ResourceConfiguration: String
  ResourceRecordID: Int
  ResourceTypeID: Int
  Title: String
  Unread: Boolean!
  UserID: Int!
}

input UpdateUserRecordLogInput {
  EarliestAt: Timestamp!
  EntityID: Int!
  ID: Int!
  LatestAt: Timestamp!
  RecordID: String!
  TotalCount: Int!
  UserID: Int!
}

input UpdateUserViewInput {
  CustomFilterState: Boolean!
  CustomWhereClause: Boolean!
  Description: String
  EntityID: Int!
  FilterState: String
  GridState: String
  ID: Int!
  IsDefault: Boolean!
  IsShared: Boolean!
  Name: String!
  SmartFilterEnabled: Boolean!
  SmartFilterExplanation: String
  SmartFilterPrompt: String
  SmartFilterWhereClause: String
  SortState: String
  UserID: Int!
  WhereClause: String
}

input UpdateUserViewRunDetailInput {
  ID: Int!
  RecordID: String!
  UserViewRunID: Int!
}

input UpdateUserViewRunInput {
  ID: Int!
  RunAt: Timestamp!
  RunByUserID: Int!
  UserViewID: Int!
}

input UpdateWorkflowEngineInput {
  Description: String
  DriverClass: String!
  DriverPath: String!
  ID: Int!
  Name: String!
}

input UpdateWorkflowInput {
  CompanyName: String!
  Description: String
  ExternalSystemRecordID: String!
  ID: Int!
  Name: String!
  WorkflowEngineName: String!
}

input UpdateWorkflowRunInput {
  EndedAt: Timestamp
  ExternalSystemRecordID: String!
  ID: Int!
  Results: String
  StartedAt: Timestamp!
  Status: String!
  WorkflowName: String!
}

input UpdateWorkspaceInput {
  Description: String
  ID: Int!
  Name: String!
  UserID: Int!
}

input UpdateWorkspaceItemInput {
  Configuration: String
  Description: String
  ID: Int!
  Name: String!
  ResourceRecordID: String
  ResourceTypeID: Int!
  Sequence: Int!
  WorkSpaceID: Int!
}

type UserApplicationEntity_ {
  Application: String!
  Entity: String!
  EntityID: Int!
  ID: Int!
  Sequence: Int!
  User: String!
  UserApplicationID: Int!
}

type UserApplication_ {
  Application: String!
  ApplicationID: Int!
  ID: Int!
  IsActive: Boolean!
  Sequence: Int!
  User: String!
  UserApplicationEntitiesArray: [UserApplicationEntity_!]!
  UserID: Int!
}

type UserFavoriteResult {
  EntityID: Int!
  IsFavorite: Boolean!
  PrimaryKeyValues: [PrimaryKeyValueOutputType!]!
  Success: Boolean!
  UserID: Int!
}

input UserFavoriteSearchParams {
  EntityID: Int!
  PrimaryKeyValues: [PrimaryKeyValueInputType!]!
  UserID: Int!
}

input UserFavoriteSetParams {
  EntityID: Int!
  IsFavorite: Boolean!
  PrimaryKeyValues: [PrimaryKeyValueInputType!]!
  UserID: Int!
}

type UserFavorite_ {
  CreatedAt: Timestamp!
  Entity: String!
  EntityBaseTable: String!
  EntityBaseView: String!
  EntityID: Int!
  ID: Int!
  RecordID: String!
  UpdatedAt: Timestamp!
  UserID: Int!
}

type UserNotification_ {
  CreatedAt: Timestamp!
  ID: Int!
  Message: String
  ReadAt: Timestamp
  ResourceConfiguration: String
  ResourceRecordID: Int
  ResourceTypeID: Int
  Title: String
  Unread: Boolean!
  UpdatedAt: Timestamp!
  User: String!
  UserID: Int!
}

"""
Tracks history of user access to records across the system, tracks reads and writes
"""
type UserRecordLog_ {
  EarliestAt: Timestamp!
  Entity: String!
  EntityID: Int!
  ID: Int!
  LatestAt: Timestamp!
  RecordID: String!
  TotalCount: Int!
  UserEmail: String!
  UserFirstLast: String
  UserID: Int!
  UserName: String!
  UserSupervisor: String
  UserSupervisorEmail: String
}

type UserRole_ {
  CreatedAt: Timestamp!
  ID: Int!
  RoleName: String!
  UpdatedAt: Timestamp!
  User: String!
  UserID: Int!
}

type UserViewRunDetail_ {
  EntityID: Int!
  ID: Int!
  RecordID: String!
  UserViewID: Int!
  UserViewRunID: Int!
}

type UserViewRun_ {
  ID: Int!
  RunAt: Timestamp!
  RunByUser: String!
  RunByUserID: Int!
  UserView: String!
  UserViewID: Int!
  UserViewRunDetailsArray: [UserViewRunDetail_!]!
}

"""
User Views contain the metadata for the user viewing system of entity data
"""
type UserView_ {
  CreatedAt: Timestamp
  CustomFilterState: Boolean!
  CustomWhereClause: Boolean!
  Description: String
  Entity: String!
  EntityBaseView: String!
  EntityID: Int!
  EntityRelationshipsArray: [EntityRelationship_!]!
  FilterState: String
  GUID: String!
  GridState: String
  ID: Int!
  IsDefault: Boolean!
  IsShared: Boolean!
  Name: String!
  SmartFilterEnabled: Boolean!
  SmartFilterExplanation: String
  SmartFilterPrompt: String
  SmartFilterWhereClause: String
  SortState: String
  UpdatedAt: Timestamp
  UserEmail: String!
  UserFirstLast: String
  UserID: Int!
  UserName: String!
  UserType: String!
  UserViewRunsArray: [UserViewRun_!]!
  WhereClause: String
}

type User_ {
  AuditLogsArray: [AuditLog_!]!
  CompanyIntegrationRunsArray: [CompanyIntegrationRun_!]!
  ConversationsArray: [Conversation_!]!
  CreatedAt: Timestamp!
  DashboardsArray: [Dashboard_!]!
  Email: String!
  EmployeeEmail: String
  EmployeeFirstLast: String
  EmployeeID: Int
  EmployeeSupervisor: String
  EmployeeSupervisorEmail: String
  EmployeeTitle: String
  FirstLast: String
  FirstName: String
  ID: Int!
  IsActive: Boolean!
  LastName: String
  LinkedEntityID: Int
  LinkedEntityRecordID: Int
  LinkedRecordType: String!
  ListsArray: [List_!]!
  Name: String!
  RecordChangesArray: [RecordChange_!]!
  RecordMergeLogsArray: [RecordMergeLog_!]!
  ReportSnapshotsArray: [ReportSnapshot_!]!
  ReportsArray: [Report_!]!
  ResourceFoldersArray: [ResourceFolder_!]!
  Title: String
  Type: String!
  UpdatedAt: Timestamp!
  UserApplicationsArray: [UserApplication_!]!
  UserFavoritesArray: [UserFavorite_!]!
  UserNotificationsArray: [UserNotification_!]!
  UserRecordLogsArray: [UserRecordLog_!]!
  UserRolesArray: [UserRole_!]!
  UserViewRunsArray: [UserViewRun_!]!
  UserViewsArray: [UserView_!]!
  WorkspacesArray: [Workspace_!]!
}

type WorkflowEngine_ {
  CreatedAt: Timestamp!
  Description: String
  DriverClass: String!
  DriverPath: String!
  ID: Int!
  Name: String!
  UpdatedAt: Timestamp!
  WorkflowsArray: [Workflow_!]!
}

type WorkflowRun_ {
  EndedAt: Timestamp
  ExternalSystemRecordID: String!
  ID: Int!
  Results: String
  StartedAt: Timestamp!
  Status: String!
  Workflow: String!
  WorkflowEngineName: String!
  WorkflowName: String!
}

type Workflow_ {
  CompanyName: String!
  CreatedAt: Timestamp!
  Description: String
  ExternalSystemRecordID: String!
  ID: Int!
  Name: String!
  ReportsArray: [Report_!]!
  UpdatedAt: Timestamp!
  WorkflowEngineName: String!
  WorkflowRunsArray: [WorkflowRun_!]!
}

type WorkspaceItem_ {
  Configuration: String
  Description: String
  ID: Int!
  Name: String!
  ResourceRecordID: String
  ResourceType: String!
  ResourceTypeID: Int!
  Sequence: Int!
  WorkSpace: String!
  WorkSpaceID: Int!
}

type Workspace_ {
  Description: String
  ID: Int!
  Name: String!
  User: String!
  UserID: Int!
  WorkspaceItemsArray: [WorkspaceItem_!]!
}