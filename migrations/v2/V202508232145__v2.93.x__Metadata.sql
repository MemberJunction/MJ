-- SQL Logging Session
-- Session ID: 4367d742-e129-40c5-bbe8-c79e3edd8d75
-- Started: 2025-08-24T02:45:01.110Z
-- Description: MetadataSync push operation
-- Format: Migration-ready with Flyway schema placeholders
-- Generated by MemberJunction SQLServerDataProvider

-- Save MJ: Components (core SP call only)
DECLARE @ID_d865c989 UNIQUEIDENTIFIER,
@Namespace_d865c989 NVARCHAR(MAX),
@Name_d865c989 NVARCHAR(500),
@Version_d865c989 NVARCHAR(50),
@VersionSequence_d865c989 INT,
@Title_d865c989 NVARCHAR(1000),
@Description_d865c989 NVARCHAR(MAX),
@Type_d865c989 NVARCHAR(255),
@Status_d865c989 NVARCHAR(50),
@DeveloperName_d865c989 NVARCHAR(255),
@DeveloperEmail_d865c989 NVARCHAR(255),
@DeveloperOrganization_d865c989 NVARCHAR(255),
@SourceRegistryID_d865c989 UNIQUEIDENTIFIER,
@ReplicatedAt_d865c989 DATETIMEOFFSET,
@LastSyncedAt_d865c989 DATETIMEOFFSET,
@Specification_d865c989 NVARCHAR(MAX),
@FunctionalRequirements_d865c989 NVARCHAR(MAX),
@TechnicalDesign_d865c989 NVARCHAR(MAX),
@FunctionalRequirementsVector_d865c989 NVARCHAR(MAX),
@TechnicalDesignVector_d865c989 NVARCHAR(MAX),
@HasCustomProps_d865c989 BIT,
@HasCustomEvents_d865c989 BIT,
@RequiresData_d865c989 BIT,
@DependencyCount_d865c989 INT,
@TechnicalDesignVectorEmbeddingModelID_d865c989 NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_d865c989 NVARCHAR(MAX),
@HasRequiredCustomProps_d865c989 BIT
SET
  @ID_d865c989 = '33e6440f-7e2e-42c0-88f2-470e93cc951e'
SET
  @Namespace_d865c989 = N'AI/Analytics'
SET
  @Name_d865c989 = N'AIPromptsClusterGraph'
SET
  @Version_d865c989 = N'1.0.0'
SET
  @VersionSequence_d865c989 = 1
SET
  @Title_d865c989 = N'AI Prompts Cluster Graph'
SET
  @Description_d865c989 = N'D3.js force-directed graph visualization showing prompt clusters based on semantic similarity'
SET
  @Type_d865c989 = N'Chart'
SET
  @Status_d865c989 = N'Published'
SET
  @Specification_d865c989 = N'{"name":"AIPromptsClusterGraph","title":"AI Prompts Cluster Graph","description":"D3.js force-directed graph visualization showing prompt clusters based on semantic similarity","type":"chart","location":"embedded","code":"function AIPromptsClusterGraph({\n  prompts,\n  clusters,\n  clusterNames = {},\n  selectedPromptId,\n  similarityThreshold = 0.7,\n  highlightCluster,\n  onNodeClick,\n  onNodeHover,\n  onClusterSelect,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const currentTransform = useRef(null);\n  \n  // Initialize zoom behavior once, outside useEffect\n  const zoomBehavior = useRef(null);\n  if (!zoomBehavior.current && typeof d3 !== ''undefined'') {\n    zoomBehavior.current = d3.zoom()\n      .scaleExtent([0.1, 10])\n      .on(''zoom'', (event) => {\n        currentTransform.current = event.transform;\n        if (containerRef.current) {\n          containerRef.current.attr(''transform'', event.transform);\n        }\n      });\n  }\n  \n  // Modern gradient color palette for clusters\n  const clusterColors = [\n    ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n    ''linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'',\n    ''linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'',\n    ''linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)'',\n    ''linear-gradient(135deg, #fa709a 0%, #fee140 100%)'',\n    ''linear-gradient(135deg, #30cfd0 0%, #330867 100%)'',\n    ''linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)'',\n    ''linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)'',\n    ''linear-gradient(135deg, #fbc2eb 0%, #a6c1ee 100%)'',\n    ''linear-gradient(135deg, #fdcbf1 0%, #e6dee9 100%)''\n  ];\n  \n  // Solid colors for D3 (gradients will be defined in defs)\n  const solidColors = [\n    ''#667eea'', ''#f093fb'', ''#4facfe'', ''#43e97b'', ''#fa709a'',\n    ''#30cfd0'', ''#a8edea'', ''#ff9a9e'', ''#fbc2eb'', ''#fdcbf1''\n  ];\n\n  // Update dimensions on mount and resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (svgRef.current && svgRef.current.parentElement) {\n        const { width, height } = svgRef.current.parentElement.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n\n    updateDimensions();\n    window.addEventListener(''resize'', updateDimensions);\n    return () => window.removeEventListener(''resize'', updateDimensions);\n  }, []);\n\n  // Create D3 visualization\n  useEffect(() => {\n    if (!prompts || prompts.length === 0 || !svgRef.current) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(''*'').remove(); // Clear previous visualization\n\n    const width = dimensions.width;\n    const height = dimensions.height;\n\n    // Create container for zoom/pan first\n    const container = svg.append(''g'');\n    containerRef.current = container;\n    \n    // Apply zoom behavior to svg (it''s already initialized in component)\n    if (zoomBehavior.current) {\n      // Update the zoom handler to use the new container\n      zoomBehavior.current.on(''zoom'', (event) => {\n        currentTransform.current = event.transform;\n        container.attr(''transform'', event.transform);\n      });\n      \n      svg.call(zoomBehavior.current);\n    }\n    \n    // Apply saved transform if it exists\n    if (currentTransform.current) {\n      svg.call(zoomBehavior.current.transform, currentTransform.current);\n      container.attr(''transform'', currentTransform.current);\n    }\n    \n    // Add gradient definitions\n    const defs = svg.append(''defs'');\n    \n    // Create gradients for each cluster\n    solidColors.forEach((color, i) => {\n      const gradient = defs.append(''radialGradient'')\n        .attr(''id'', `cluster-gradient-$' + '{i}`)\n        .attr(''cx'', ''30%'')\n        .attr(''cy'', ''30%'');\n      \n      gradient.append(''stop'')\n        .attr(''offset'', ''0%'')\n        .attr(''stop-color'', color)\n        .attr(''stop-opacity'', 0.8);\n      \n      gradient.append(''stop'')\n        .attr(''offset'', ''100%'')\n        .attr(''stop-color'', d3.color(color).darker(0.5))\n        .attr(''stop-opacity'', 1);\n    });\n    \n    // Add glow filter\n    const filter = defs.append(''filter'')\n      .attr(''id'', ''glow'');\n    \n    filter.append(''feGaussianBlur'')\n      .attr(''stdDeviation'', ''3'')\n      .attr(''result'', ''coloredBlur'');\n    \n    const feMerge = filter.append(''feMerge'');\n    feMerge.append(''feMergeNode'')\n      .attr(''in'', ''coloredBlur'');\n    feMerge.append(''feMergeNode'')\n      .attr(''in'', ''SourceGraphic'');\n    \n    // Add strong glow for selection\n    const selectionFilter = defs.append(''filter'')\n      .attr(''id'', ''selection-glow'')\n      .attr(''width'', ''300%'')\n      .attr(''height'', ''300%'')\n      .attr(''x'', ''-100%'')\n      .attr(''y'', ''-100%'');\n    \n    selectionFilter.append(''feGaussianBlur'')\n      .attr(''stdDeviation'', ''8'')\n      .attr(''result'', ''coloredBlur'');\n    \n    const selectionMerge = selectionFilter.append(''feMerge'');\n    selectionMerge.append(''feMergeNode'')\n      .attr(''in'', ''coloredBlur'');\n    selectionMerge.append(''feMergeNode'')\n      .attr(''in'', ''SourceGraphic'');\n\n    // Calculate similarities between all nodes\n    const links = [];\n    const vectorService = utilities.ai.VectorService;\n    \n    // Load vectors into the service for similarity calculations\n    const vectorMap = new Map();\n    prompts.forEach(prompt => {\n      if (prompt.embedding) {\n        vectorMap.set(prompt.ID, prompt.embedding);\n      }\n    });\n    vectorService.LoadVectors(vectorMap);\n    \n    for (let i = 0; i < prompts.length; i++) {\n      for (let j = i + 1; j < prompts.length; j++) {\n        if (prompts[i].embedding && prompts[j].embedding) {\n          // Use CalculateDistance with cosine metric (returns distance, so we need to convert to similarity)\n          const distance = vectorService.CalculateDistance(\n            prompts[i].embedding,\n            prompts[j].embedding,\n            ''cosine''\n          );\n          const similarity = 1 - distance; // Convert distance to similarity\n          \n          if (similarity >= similarityThreshold) {\n            links.push({\n              source: prompts[i].ID,\n              target: prompts[j].ID,\n              value: similarity\n            });\n          }\n        }\n      }\n    }\n\n    // Create force simulation\n    const simulation = d3.forceSimulation(prompts)\n      .force(''link'', d3.forceLink(links)\n        .id(d => d.ID)\n        .distance(d => 100 * (1 - d.value)) // Distance inversely proportional to similarity\n        .strength(d => d.value * 0.5))\n      .force(''charge'', d3.forceManyBody()\n        .strength(-200)\n        .distanceMax(300))\n      .force(''center'', d3.forceCenter(width / 2, height / 2))\n      .force(''collision'', d3.forceCollide().radius(25))\n      .force(''cluster'', forceCluster()); // Custom clustering force\n\n    // Custom force to pull nodes toward their cluster center\n    function forceCluster() {\n      const strength = 0.2;\n      let nodes;\n      \n      function force(alpha) {\n        const centroids = d3.rollup(\n          nodes,\n          v => ({\n            x: d3.mean(v, d => d.x),\n            y: d3.mean(v, d => d.y),\n            count: v.length\n          }),\n          d => d.cluster\n        );\n        \n        nodes.forEach(node => {\n          const centroid = centroids.get(node.cluster);\n          if (centroid && centroid.count > 1) {\n            node.vx -= (node.x - centroid.x) * strength * alpha;\n            node.vy -= (node.y - centroid.y) * strength * alpha;\n          }\n        });\n      }\n      \n      force.initialize = function(_) {\n        nodes = _;\n      };\n      \n      return force;\n    }\n\n    // Draw links with modern styling\n    const link = container.append(''g'')\n      .attr(''class'', ''links'')\n      .selectAll(''line'')\n      .data(links)\n      .enter().append(''line'')\n      .attr(''stroke'', ''url(#link-gradient)'')\n      .attr(''stroke-opacity'', d => d.value * 0.2)\n      .attr(''stroke-width'', d => Math.max(0.5, d.value * 2))\n      .attr(''stroke-linecap'', ''round'');\n    \n    // Add gradient for links\n    const linkGradient = defs.append(''linearGradient'')\n      .attr(''id'', ''link-gradient'')\n      .attr(''gradientUnits'', ''userSpaceOnUse'');\n    \n    linkGradient.append(''stop'')\n      .attr(''offset'', ''0%'')\n      .attr(''stop-color'', ''#e0e0e0'')\n      .attr(''stop-opacity'', 0.3);\n    \n    linkGradient.append(''stop'')\n      .attr(''offset'', ''50%'')\n      .attr(''stop-color'', ''#c0c0c0'')\n      .attr(''stop-opacity'', 0.5);\n    \n    linkGradient.append(''stop'')\n      .attr(''offset'', ''100%'')\n      .attr(''stop-color'', ''#e0e0e0'')\n      .attr(''stop-opacity'', 0.3);\n\n    // Create node groups\n    const node = container.append(''g'')\n      .attr(''class'', ''nodes'')\n      .selectAll(''g'')\n      .data(prompts)\n      .enter().append(''g'')\n      .attr(''cursor'', ''pointer'')\n      .call(d3.drag()\n        .on(''start'', dragstarted)\n        .on(''drag'', dragged)\n        .on(''end'', dragended));\n\n    // Add shadow circles\n    node.append(''circle'')\n      .attr(''r'', d => {\n        const textLength = d.TemplateText?.length || 0;\n        return Math.min(25, Math.max(12, Math.sqrt(textLength / 40))) + 2;\n      })\n      .attr(''fill'', ''black'')\n      .attr(''opacity'', 0.1)\n      .attr(''transform'', ''translate(2, 2)'');\n    \n    // Add main circles for nodes with modern styling\n    node.append(''circle'')\n      .attr(''class'', ''node-circle'')\n      .attr(''r'', d => {\n        // Size based on template text length\n        const textLength = d.TemplateText?.length || 0;\n        return Math.min(25, Math.max(12, Math.sqrt(textLength / 40)));\n      })\n      .attr(''fill'', d => {\n        if (highlightCluster !== null && d.cluster !== highlightCluster) {\n          return ''#f5f5f5'';\n        }\n        return `url(#cluster-gradient-$' + '{d.cluster % solidColors.length})`;\n      })\n      .attr(''stroke'', d => {\n        if (d.ID === selectedPromptId) return ''#00ff88''; // Neon green for selection\n        if (d.ID === hoveredNode) return solidColors[d.cluster % solidColors.length];\n        return ''white'';\n      })\n      .attr(''stroke-width'', d => {\n        if (d.ID === selectedPromptId) return 5;\n        if (d.ID === hoveredNode) return 3;\n        return 2;\n      })\n      .attr(''opacity'', d => {\n        if (highlightCluster !== null && d.cluster !== highlightCluster) {\n          return 0.2;\n        }\n        return 1;\n      })\n      .attr(''filter'', d => {\n        if (d.ID === selectedPromptId) return ''url(#selection-glow)'';\n        if (d.ID === hoveredNode) return ''url(#glow)'';\n        return null;\n      })\n      .style(''transition'', ''all 0.3s ease'');\n\n    // Add labels with modern typography\n    const labels = node.append(''foreignObject'')\n      .attr(''x'', -45)\n      .attr(''y'', -40)\n      .attr(''width'', 90)\n      .attr(''height'', 28)\n      .attr(''pointer-events'', ''none'');\n    \n    labels.append(''xhtml:div'')\n      .style(''text-align'', ''center'')\n      .style(''font-size'', ''12px'')\n      .style(''font-weight'', ''500'')\n      .style(''color'', ''#2d3748'')\n      .style(''line-height'', ''14px'')\n      .style(''overflow'', ''hidden'')\n      .style(''text-overflow'', ''ellipsis'')\n      .style(''display'', ''-webkit-box'')\n      .style(''-webkit-line-clamp'', ''2'')\n      .style(''-webkit-box-orient'', ''vertical'')\n      .style(''text-shadow'', ''0 1px 2px rgba(255,255,255,0.8)'')\n      .text(d => d.Name || ''Unnamed'');\n\n    // Add modern tooltips\n    const tooltip = d3.select(''body'').append(''div'')\n      .attr(''class'', ''graph-tooltip'')\n      .style(''opacity'', 0)\n      .style(''position'', ''absolute'')\n      .style(''padding'', ''12px'')\n      .style(''background'', ''linear-gradient(135deg, rgba(255,255,255,0.98) 0%, rgba(249,250,251,0.98) 100%)'')\n      .style(''color'', ''#2d3748'')\n      .style(''border-radius'', ''12px'')\n      .style(''pointer-events'', ''none'')\n      .style(''font-size'', ''13px'')\n      .style(''max-width'', ''320px'')\n      .style(''box-shadow'', ''0 10px 40px rgba(0,0,0,0.15), 0 2px 10px rgba(0,0,0,0.1)'')\n      .style(''border'', ''1px solid rgba(255,255,255,0.8)'')\n      .style(''backdrop-filter'', ''blur(10px)'');\n\n    // Node interactions\n    node\n      .on(''click'', (event, d) => {\n        event.stopPropagation();\n        onNodeClick(d);\n      })\n      .on(''mouseover'', (event, d) => {\n        setHoveredNode(d.ID);\n        onNodeHover(d);\n        \n        tooltip.transition()\n          .duration(200)\n          .style(''opacity'', .9);\n        \n        tooltip.html(`\n          <div style=\"font-weight: 600; margin-bottom: 8px; color: #1a202c; font-size: 14px;\">$' + '{d.Name}</div>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px; margin-bottom: 8px;\">\n            <span style=\"padding: 2px 8px; background: #edf2f7; border-radius: 4px; font-size: 11px;\">\n              $' + '{d.Category || ''No Category''}\n            </span>\n            <span style=\"padding: 2px 8px; background: #edf2f7; border-radius: 4px; font-size: 11px;\">\n              $' + '{d.Type || ''No Type''}\n            </span>\n            <span style=\"padding: 2px 8px; background: $' + '{solidColors[d.cluster % solidColors.length]}20; border-radius: 4px; font-size: 11px; color: $' + '{solidColors[d.cluster % solidColors.length]};\">\n              Cluster $' + '{d.cluster + 1}\n            </span>\n          </div>\n          $' + '{d.Description ? `<div style=\"font-size: 12px; color: #4a5568; line-height: 1.4;\">$' + '{d.Description.substring(0, 120)}$' + '{d.Description.length > 120 ? ''...'' : ''''}</div>` : ''''}\n        `)\n          .style(''left'', (event.pageX + 10) + ''px'')\n          .style(''top'', (event.pageY - 28) + ''px'');\n      })\n      .on(''mouseout'', () => {\n        setHoveredNode(null);\n        tooltip.transition()\n          .duration(500)\n          .style(''opacity'', 0);\n      });\n\n    // Click on background to deselect\n    svg.on(''click'', () => {\n      onNodeClick(null);\n    });\n\n    // Update positions on simulation tick\n    simulation.on(''tick'', () => {\n      link\n        .attr(''x1'', d => d.source.x)\n        .attr(''y1'', d => d.source.y)\n        .attr(''x2'', d => d.target.x)\n        .attr(''y2'', d => d.target.y);\n\n      node.attr(''transform'', d => `translate($' + '{d.x},$' + '{d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Cleanup on unmount\n    return () => {\n      simulation.stop();\n      tooltip.remove();\n    };\n  }, [prompts, clusters, selectedPromptId, similarityThreshold, highlightCluster, dimensions]);\n\n  // Zoom control functions - don''t use useCallback to ensure we have current refs\n  const handleZoomIn = () => {\n    if (!svgRef.current || !zoomBehavior.current) {\n      console.warn(''Zoom in - refs not ready'');\n      return;\n    }\n    \n    const svg = d3.select(svgRef.current);\n    const currentZoom = currentTransform.current ? currentTransform.current.k : 1;\n    const newZoom = Math.min(currentZoom * 1.5, 10);\n    \n    svg.transition()\n      .duration(300)\n      .call(zoomBehavior.current.scaleTo, newZoom);\n  };\n  \n  const handleZoomOut = () => {\n    if (!svgRef.current || !zoomBehavior.current) {\n      console.warn(''Zoom out - refs not ready'');\n      return;\n    }\n    \n    const svg = d3.select(svgRef.current);\n    const currentZoom = currentTransform.current ? currentTransform.current.k : 1;\n    const newZoom = Math.max(currentZoom / 1.5, 0.1);\n    \n    svg.transition()\n      .duration(300)\n      .call(zoomBehavior.current.scaleTo, newZoom);\n  };\n  \n  const handleResetZoom = () => {\n    if (!svgRef.current || !zoomBehavior.current) {\n      console.warn(''Reset zoom - refs not ready'');\n      return;\n    }\n    \n    const svg = d3.select(svgRef.current);\n    svg.transition()\n      .duration(300)\n      .call(zoomBehavior.current.transform, d3.zoomIdentity);\n    currentTransform.current = d3.zoomIdentity;\n  };\n  \n  // Cluster legend\n  const uniqueClusters = useMemo(() => {\n    if (!clusters || clusters.length === 0) return [];\n    const clusterSet = new Set(clusters.map(p => p.cluster));\n    return Array.from(clusterSet).sort((a, b) => a - b);\n  }, [clusters]);\n\n  return (\n    <div style={{ \n      width: ''100%'', \n      height: ''100%'', \n      position: ''relative'',\n      background: ''linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)'',\n      borderRadius: ''16px'',\n      overflow: ''hidden''\n    }}>\n      <svg\n        ref={svgRef}\n        width={dimensions.width}\n        height={dimensions.height}\n        style={{ width: ''100%'', height: ''100%'' }}\n      />\n      \n      {/* Modern Zoom Controls */}\n      <div style={{\n        position: ''absolute'',\n        top: ''20px'',\n        left: ''20px'',\n        display: ''flex'',\n        flexDirection: ''column'',\n        gap: ''8px'',\n        zIndex: 10\n      }}>\n        <button\n          onClick={handleZoomIn}\n          style={{\n            width: ''40px'',\n            height: ''40px'',\n            borderRadius: ''10px'',\n            border: ''none'',\n            backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n            color: ''#4a5568'',\n            cursor: ''pointer'',\n            fontSize: ''18px'',\n            display: ''flex'',\n            alignItems: ''center'',\n            justifyContent: ''center'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.1)'',\n            transition: ''all 0.2s ease''\n          }}\n          onMouseEnter={e => e.currentTarget.style.transform = ''scale(1.1)''}\n          onMouseLeave={e => e.currentTarget.style.transform = ''scale(1)''}\n          title=\"Zoom In\"\n        >\n          <i className=\"fa-solid fa-plus\"></i>\n        </button>\n        \n        <button\n          onClick={handleZoomOut}\n          style={{\n            width: ''40px'',\n            height: ''40px'',\n            borderRadius: ''10px'',\n            border: ''none'',\n            backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n            color: ''#4a5568'',\n            cursor: ''pointer'',\n            fontSize: ''18px'',\n            display: ''flex'',\n            alignItems: ''center'',\n            justifyContent: ''center'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.1)'',\n            transition: ''all 0.2s ease''\n          }}\n          onMouseEnter={e => e.currentTarget.style.transform = ''scale(1.1)''}\n          onMouseLeave={e => e.currentTarget.style.transform = ''scale(1)''}\n          title=\"Zoom Out\"\n        >\n          <i className=\"fa-solid fa-minus\"></i>\n        </button>\n        \n        <button\n          onClick={handleResetZoom}\n          style={{\n            width: ''40px'',\n            height: ''40px'',\n            borderRadius: ''10px'',\n            border: ''none'',\n            backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n            color: ''#4a5568'',\n            cursor: ''pointer'',\n            fontSize: ''16px'',\n            display: ''flex'',\n            alignItems: ''center'',\n            justifyContent: ''center'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.1)'',\n            transition: ''all 0.2s ease''\n          }}\n          onMouseEnter={e => e.currentTarget.style.transform = ''scale(1.1)''}\n          onMouseLeave={e => e.currentTarget.style.transform = ''scale(1)''}\n          title=\"Reset View\"\n        >\n          <i className=\"fa-solid fa-expand\"></i>\n        </button>\n      </div>\n      \n      {/* Modern Cluster Legend */}\n      <div style={{\n        position: ''absolute'',\n        top: ''20px'',\n        right: ''20px'',\n        backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n        padding: ''16px'',\n        borderRadius: ''12px'',\n        fontSize: ''13px'',\n        boxShadow: ''0 4px 12px rgba(0,0,0,0.08)'',\n        backdropFilter: ''blur(10px)'',\n        minWidth: ''200px'',\n        maxWidth: ''280px''\n      }}>\n        <div style={{ \n          fontWeight: ''600'', \n          marginBottom: ''12px'',\n          color: ''#2d3748'',\n          fontSize: ''14px''\n        }}>\n          Clusters\n        </div>\n        {uniqueClusters.map(cluster => {\n          const clusterName = clusterNames[cluster] || `Cluster $' + '{cluster + 1}`;\n          return (\n            <div\n              key={cluster}\n              style={{\n                display: ''flex'',\n                alignItems: ''flex-start'',\n                marginBottom: ''10px'',\n                cursor: ''pointer'',\n                opacity: highlightCluster !== null && highlightCluster !== cluster ? 0.4 : 1,\n                transition: ''all 0.2s ease'',\n                padding: ''6px 8px'',\n                borderRadius: ''6px'',\n                backgroundColor: highlightCluster === cluster ? `$' + '{solidColors[cluster % solidColors.length]}15` : ''transparent''\n              }}\n              onClick={() => onClusterSelect(cluster)}\n              onMouseEnter={e => e.currentTarget.style.backgroundColor = `$' + '{solidColors[cluster % solidColors.length]}10`}\n              onMouseLeave={e => e.currentTarget.style.backgroundColor = highlightCluster === cluster ? `$' + '{solidColors[cluster % solidColors.length]}15` : ''transparent''}\n              title={clusterName}\n            >\n              <div\n                style={{\n                  width: ''16px'',\n                  height: ''16px'',\n                  background: `linear-gradient(135deg, $' + '{solidColors[cluster % solidColors.length]} 0%, $' + '{d3.color(solidColors[cluster % solidColors.length]).darker(0.3)} 100%)`,\n                  marginRight: ''10px'',\n                  marginTop: ''2px'',\n                  borderRadius: ''50%'',\n                  border: ''2px solid white'',\n                  boxShadow: ''0 2px 4px rgba(0,0,0,0.1)'',\n                  flexShrink: 0\n                }}\n              />\n              <span style={{ \n                color: ''#4a5568'', \n                fontWeight: ''500'',\n                display: ''block'',\n                lineHeight: ''1.3'',\n                wordWrap: ''break-word'',\n                whiteSpace: ''normal''\n              }}>\n                {clusterName}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n      \n      {/* Modern Instructions */}\n      <div style={{\n        position: ''absolute'',\n        bottom: ''20px'',\n        left: ''50%'',\n        transform: ''translateX(-50%)'',\n        backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n        padding: ''8px 16px'',\n        borderRadius: ''20px'',\n        fontSize: ''12px'',\n        color: ''#718096'',\n        boxShadow: ''0 2px 8px rgba(0,0,0,0.08)'',\n        backdropFilter: ''blur(10px)'',\n        display: ''flex'',\n        gap: ''16px'',\n        alignItems: ''center''\n      }}>\n        <span><i className=\"fa-solid fa-hand\" style={{ marginRight: ''4px'' }}></i>Drag to pan</span>\n        <span>•</span>\n        <span><i className=\"fa-solid fa-magnifying-glass\" style={{ marginRight: ''4px'' }}></i>Scroll to zoom</span>\n        <span>•</span>\n        <span><i className=\"fa-solid fa-pointer\" style={{ marginRight: ''4px'' }}></i>Click to select</span>\n      </div>\n    </div>\n  );\n}","functionalRequirements":"Render interactive force-directed graph with prompts as nodes, display clusters with different colors, show similarity connections between prompts, support zoom/pan navigation, highlight on hover, animate transitions","technicalDesign":"Uses D3.js force simulation for node positioning, implements clustering visualization with color coding, draws edges based on similarity threshold, handles mouse interactions for selection and tooltips","properties":[{"name":"prompts","type":"array","required":true,"description":"Array of AI prompt entities with embeddings"},{"name":"clusters","type":"array","required":true,"description":"Array of cluster assignments from clustering algorithm"},{"name":"selectedPromptId","type":"string","required":false,"description":"ID of currently selected prompt"},{"name":"similarityThreshold","type":"number","required":false,"description":"Threshold for showing similarity connections (0-1)"},{"name":"highlightCluster","type":"number","required":false,"description":"Cluster index to highlight"}],"events":[{"name":"onNodeClick","description":"Fired when a node is clicked","parameters":[{"name":"prompt","type":"object","description":"The clicked prompt entity"}]},{"name":"onNodeHover","description":"Fired when hovering over a node","parameters":[{"name":"prompt","type":"object","description":"The hovered prompt entity"}]},{"name":"onClusterSelect","description":"Fired when a cluster is selected","parameters":[{"name":"clusterIndex","type":"number","description":"Index of the selected cluster"}]}],"libraries":[{"name":"d3","version":"7.8.5","globalVariable":"d3"}],"usageExample":"<AIPromptsClusterGraph prompts={prompts} clusters={clusters} />","version":"1.0.0"}'
SET
  @FunctionalRequirements_d865c989 = N'Render interactive force-directed graph with prompts as nodes, display clusters with different colors, show similarity connections between prompts, support zoom/pan navigation, highlight on hover, animate transitions'
SET
  @TechnicalDesign_d865c989 = N'Uses D3.js force simulation for node positioning, implements clustering visualization with color coding, draws edges based on similarity threshold, handles mouse interactions for selection and tooltips'
SET
  @FunctionalRequirementsVector_d865c989 = N'[-0.04671674221754074,-0.09743408858776093,0.004109947010874748,-0.04221409186720848,-0.026122882962226868,-0.05038025230169296,0.058606307953596115,0.048433300107717514,0.018493374809622765,0.013779154978692532,-0.02812085673213005,0.042181797325611115,-0.01523626409471035,0.06335627287626266,0.0008980111451819539,-0.14029432833194733,-0.015212996862828732,-0.030862635001540184,-0.034563515335321426,-0.028941165655851364,-0.0015229583950713277,-0.009451521560549736,-0.008456192910671234,-0.015013947151601315,-0.012299459427595139,-0.021520594134926796,-0.04664463549852371,0.03270632028579712,0.057877156883478165,-0.08684640377759933,-0.08219818770885468,0.06622088700532913,-0.04430675506591797,0.0056446935050189495,0.0000016769032527008676,-0.032118991017341614,-0.018781473860144615,0.008641302585601807,0.015765724703669548,0.006144918501377106,0.08870850503444672,-0.0062813241966068745,0.06601675599813461,-0.02808847837150097,0.0265085157006979,-0.04176139086484909,-0.00023828331904951483,-0.001596714137122035,0.051047876477241516,-0.04118454456329346,0.011870871298015118,0.03540172800421715,-0.01360233873128891,0.031337179243564606,-0.103905588388443,0.10928521305322647,-0.0035977899096906185,-0.031753797084093094,0.07141514867544174,0.007422784809023142,-0.04450032487511635,-0.03571668267250061,0.011033611372113228,-0.021155966445803642,0.04237113520503044,0.01052093505859375,0.07197892665863037,-0.03181462734937668,-0.02871214970946312,0.034649480134248734,-0.04234696924686432,-0.018302250653505325,0.005509435199201107,-0.05962642282247543,-0.009353597648441792,0.08494636416435242,-0.03801592066884041,-0.03013300709426403,-0.0258453581482172,-0.02710942178964615,-0.07386229932308197,-0.005892392713576555,-0.010053939186036587,-0.05792820826172829,0.041132960468530655,-0.01365809328854084,0.05256853625178337,-0.03185516223311424,-0.012161115184426308,0.013258058577775955,0.021907396614551544,-0.019911862909793854,0.057017430663108826,0.014607940800487995,-0.08070222288370132,-0.024784773588180542,0.03035544417798519,0.023338407278060913,0.026595408096909523,0.06437034904956818,0.11540335416793823,-0.028629612177610397,-0.01681102253496647,0.030626488849520683,0.01636495813727379,-0.017032528296113014,-0.013889533467590809,-0.029864905402064323,-0.01742742583155632,0.02745327539741993,-0.00020500148821156472,0.02784540317952633,-0.023182744160294533,0.020573319867253304,-0.03018297255039215,0.009392356500029564,0.01395509298890829,0.03717835620045662,-0.013016377575695515,0.03591185063123703,0.032937027513980865,-0.00640275189653039,0.0017603308660909534,-0.007500224746763706,0.013178414665162563,0.039152439683675766,-0.06983907520771027,-0.026917994022369385,0.002519282279536128,0.020307261496782303,-0.017992204055190086,0.004089311696588993,0.040197379887104034,0.028996720910072327,-0.008165473118424416,0.05432681366801262,0.009500968270003796,0.008537281304597855,-0.03465760126709938,-0.036030370742082596,-0.0177373755723238,0.04743245616555214,-0.0238876361399889,-0.011273386888206005,0.0016199358506128192,-0.021922452375292778,0.008864741772413254,0.03415537253022194,0.010983304120600224,0.02121453732252121,0.021555284038186073,0.012710370123386383,-0.04597518965601921,-0.011768260039389133,-0.04243023321032524,0.002211915561929345,-0.0334831103682518,-0.022877145558595657,-0.07211024314165115,0.01292453519999981,0.02024146541953087,-0.03855747729539871,0.059215646237134933,-0.0014762700302526355,-0.04445715248584747,0.026387419551610947,-0.04574562981724739,-0.03261723741889,0.022033745422959328,-0.011007090099155903,-0.012537913396954536,-0.0026163689326494932,-0.04818689823150635,-0.05372078716754913,0.030889974907040596,0.058690838515758514,0.05195050686597824,-0.028488662093877792,-0.012471817433834076,-0.01013175118714571,0.03661090135574341,-0.024682238698005676,0.015202156268060207,0.0048043811693787575,-0.012212873436510563,-0.009001434780657291,-0.03240782767534256,0.053100112825632095,-0.020435987040400505,0.013507712632417679,0.020278871059417725,0.031301774084568024,0.03968888148665428,0.007455682847648859,0.04632238298654556,0.001608115155249834,-0.01808859407901764,-0.09637521207332611,0.04239344969391823,-0.026822414249181747,-0.00529798399657011,0.05610004439949989,-0.006646154914051294,0.06330674886703491,-0.01495313923805952,0.0008073398494161665,-0.07534634321928024,-0.012687250971794128,0.033318646252155304,0.050921887159347534,-0.01681271381676197,0.0020623253658413887,-0.016954420134425163,0.006384000647813082,-0.009212754666805267,-0.006570825353264809,0.008892225101590157,0.024176405742764473,-0.07304451614618301,-0.044336698949337006,-0.0347403958439827,-0.004567399621009827,-0.004262362606823444,0.002061402890831232,0.08905787765979767,0.08623285591602325,-0.014033976942300797,-0.02634243667125702,0.01558547280728817,0.06272409856319427,0.001611121348105371,-0.026931412518024445,-0.010649556294083595,0.01991940662264824,0.03577905520796776,0.02487415261566639,0.02040032297372818,0.031502917408943176,-0.029257623478770256,-0.0382423996925354,0.005216139368712902,-0.05691232532262802,-0.026476185768842697,-0.017264164984226227,-0.027041450142860413,-0.007312064524739981,0.0412042960524559,0.021070143207907677,-0.014074797742068768,-0.025665294378995895,0.02209237776696682,0.0022403174079954624,0.0063606188632547855,-0.020540637895464897,0.007194232661277056,0.03191179409623146,0.1521698534488678,-0.01867210865020752,-0.10398217290639877,0.03784331679344177,-0.010653841309249401,-0.0013877246528863907,-0.011720518581569195,-0.007557499222457409,-0.008381277322769165,-0.020911704748868942,0.05469243600964546,-0.06778869032859802,-0.0674816146492958,-0.004490959923714399,0.004380329977720976,0.03519018739461899,0.01040501520037651,0.000018298165741725825,-0.018226196989417076,0.03714817762374878,0.030232425779104233,0.013966592028737068,0.008910668082535267,-0.03039846569299698,-0.021473353728652,-0.05266168713569641,-0.009487583301961422,-0.007627786137163639,-0.04347327724099159,-0.00015191907004918903,0.06165274977684021,-0.006279666908085346,0.01425307895988226,-0.04217186197638512,0.017182106152176857,0.015629449859261513,0.0032419722992926836,0.022223856300115585,-0.00866309180855751,0.032880790531635284,0.022063424810767174,0.0810851901769638,-0.009280526079237461,0.03115370124578476,-0.0015037745470181108,-0.0616864375770092,0.0018934181425720453,0.02818084880709648,-0.060113731771707535,0.06453831493854523,0.009444787167012691,0.017594143748283386,0.08275679498910904,-0.014126107096672058,0.034173157066106796,-0.012364893220365047,0.009535055607557297,-0.07516611367464066,-0.008705086074769497,0.03998732194304466,0.05177964270114899,-0.023329105228185654,0.032150402665138245,0.0020450314041227102,-0.021752208471298218,-0.0017209596699103713,0.01653755083680153,-0.042521972209215164,-0.01284805964678526,0.06906313449144363,-0.051703549921512604,0.01607428304851055,0.0032704186160117388,0.03019499033689499,0.012278840877115726,0.013919515535235405,-0.00950948428362608,0.018537061288952827,0.05952242761850357,0.03079235926270485,-0.013296701945364475,-0.023558834567666054,0.0052132816053926945,-0.07161673903465271,-0.0028514175210148096,-0.03598517179489136,0.004559290129691362,0.016360273584723473,0.054609935730695724,0.010320895351469517,0.02968752197921276,-0.021747026592493057,0.019597532227635384,0.015018983744084835,-0.0071320002898573875,0.01696573570370674,-0.0007974510081112385,0.0008510230109095573,0.018024977296590805,0.02852063812315464,-0.06781458109617233,0.04701033607125282,-0.048291876912117004,-0.05861734226346016,-0.00036430402542464435,0.03629721328616142,0.009638144634664059,-0.036676183342933655,-0.03173371031880379,0.043194301426410675,0.0228384118527174,-0.03786963224411011,0.0015838203253224492,-0.009826578199863434,0.0022884162608534098,0.01214549969881773,0.020064370706677437,0.008647688664495945,-0.007497364189475775,-0.11560065299272537,0.02408120594918728,-0.009599985554814339,0.0033550525549799204,-0.010647258721292019,0.04349410906434059,-0.019217705354094505,0.04479457437992096,-0.03078574687242508,0.03636164218187332,-0.04818450286984444,-0.015130434185266495,0.055289167910814285,-0.09109510481357574,0.040415603667497635,-0.007194032892584801,-0.026965871453285217,0.02281143330037594,-0.06330474466085434,0.008371054194867611,0.06196046620607376,-0.016785677522420883,0.002308152848854661,-0.0037493743002414703,0.002955011557787657,0.00119980878662318,0.026372617110610008,-0.0016586281126365066,-0.031832512468099594,0.05807477608323097,-0.008923711255192757,-0.04067545756697655,0.015192441642284393,-0.02076561748981476,0.012007580138742924,-0.01569151133298874,0.05468475818634033,-0.003591478569433093,-0.05134858191013336,-0.016558239236474037,0.009148143231868744,0.02699955925345421,-0.035869941115379333,0.014406517148017883,0.10308004170656204,-0.03684670850634575,-0.014626502059400082,0.037276241928339005,-0.002853692974895239,-0.004028928931802511,-0.014554320834577084,0.004970279522240162,-0.045383207499980927,-0.003089963225647807,-0.00003249667497584596,0.007001077756285667,0.009592758491635323,-0.040429484099149704,0.05920657515525818,0.04500100389122963,-0.0335070826113224,-0.062196359038352966,0.012188545428216457,0.03864143043756485,-0.015478753484785557,0.03631268069148064,0.014063835144042969,0.0779004842042923,0.004530987702310085,-0.05465095862746239,-0.04309797286987305,-0.03877031058073044,-0.031186463311314583,0.05290229991078377,-0.017056135460734367,-0.05563536286354065,-0.05125794932246208,-0.03030203841626644,-0.00426449254155159,-0.0095820976421237,-0.024637596681714058,0.007853055372834206,0.025332555174827576,-0.022186145186424255,-0.012334763072431087,0.026181668043136597,0.015490629710257053,0.03480276092886925,-0.009112468920648098,-0.00017590209608897567,0.08562687039375305,0.050133347511291504,-0.010487264953553677,-0.009839121252298355,-0.0005376358749344945,0.003317656461149454,0.012163503095507622,-0.05410796031355858,-0.06412430852651596,0.05013462156057358,0.03874185308814049,0.019629811868071556,0.004359010607004166,-0.0612921416759491,-0.002675676252692938,0.009097968228161335,0.07607359439134598,0.03890164941549301,-0.0089751360937953,0.001478388556279242,-0.002203357173129916,-0.020754467695951462,-0.014341589994728565,-0.011436466127634048,0.015276660211384296,-0.013220064342021942,-0.01888549141585827,0.019774876534938812,0.0016205210704356432,0.04157104715704918,-0.046248726546764374,-0.0908336341381073,0.026544323191046715,0.054247211664915085,-0.01899626851081848,-0.0012856501853093505,-0.02200143225491047,0.00731757003813982,-0.01282469555735588,-0.03596576303243637,-0.006829382386058569,0.044690076261758804,0.009692845866084099,0.025564858689904213,0.0010096642654389143,0.006304674316197634,-0.000015237784282362554,-0.06008871644735336,-0.011527106165885925,-0.03651037812232971,0.03759021311998367,-0.010380597785115242,0.05495584383606911,-0.003048431593924761,-0.044326301664114,0.010050131008028984,0.019783059135079384,-0.043138034641742706,0.023764755576848984,-0.005260355770587921,0.042152322828769684,0.038038864731788635,0.03261926397681236,0.036812297999858856,0.0006787125021219254,-0.0782114714384079,-0.0025945885572582483,0.05387232080101967,-0.061397451907396317,-0.004160975571721792,-0.0046385652385652065,0.02482844889163971,0.06859428435564041,0.02779284119606018,-0.027473460882902145,-0.05372944101691246,0.023646993562579155,0.029894975945353508,0.0025791777297854424,-0.004879686050117016,0.03442343696951866,0.048166994005441666,-0.07457303255796432,0.01773114688694477,0.01306172739714384,0.04386122152209282,0.002794192172586918,-0.01433570496737957,-0.058905407786369324,0.009965787641704082,-6.066331084618362e-33,-0.04362541064620018,-0.06412096321582794,-0.04107902571558952,0.011671515181660652,-0.025334462523460388,-0.03968898206949234,-0.008588298223912716,0.007022052071988583,-0.0021265798714011908,0.032934028655290604,-0.006822829134762287,-0.04672664776444435,-0.004168983548879623,0.05025192350149155,-0.04888157919049263,0.02387363649904728,0.04729469493031502,0.03576011583209038,-0.009463323280215263,0.04424593970179558,0.0015031833900138736,0.018135854974389076,-0.03350268676877022,0.03633048012852669,-0.011043335311114788,0.025166187435388565,0.03606116771697998,0.0077356440015137196,-0.005391159560531378,0.0071151102893054485,-0.017008431255817413,0.037765007466077805,-0.034683164209127426,-0.009136746637523174,0.0007408979581668973,0.03656291589140892,0.0034420897718518972,-0.053296010941267014,0.0037145374808460474,-0.008544890210032463,-0.019658531993627548,-0.0032591139897704124,0.019237343221902847,0.0033926733303815126,0.024878084659576416,0.0052817887626588345,0.03342486917972565,0.017824389040470123,-0.047944292426109314,0.05576348677277565,0.013214875012636185,0.02363535948097706,-0.008569507859647274,0.040797147899866104,-0.026272078976035118,0.04323524609208107,0.03563539683818817,0.005675835069268942,0.007116743829101324,0.016636237502098083,-0.015042606741189957,-0.007566507440060377,-0.01773008517920971,0.06835350394248962,0.07264126092195511,0.00916046928614378,0.041898131370544434,-0.0012147474335506558,-0.046989716589450836,0.06590050458908081,0.01643381267786026,-0.006133952643722296,0.05151396617293358,-0.03471316024661064,-0.05262215435504913,0.022180330008268356,0.012104835361242294,-0.0527312308549881,-0.025494929403066635,0.009709619916975498,-0.005969901569187641,0.03256142884492874,0.013517949730157852,-0.018337950110435486,0.008212460204958916,-0.0968085378408432,0.012856491841375828,-0.017306609079241753,0.016702966764569283,-0.010699416510760784,-0.0304952971637249,-0.007948276586830616,-0.02162383869290352,0.06840776652097702,-0.0040952586568892,-0.014041369780898094,0.03145834803581238,0.08278228342533112,-0.007850122638046741,-0.04063386470079422,0.034398987889289856,-0.011663656681776047,-0.02859829179942608,-0.04787742719054222,-0.01291231345385313,0.00015985006757546216,-0.03520049899816513,-0.01791468635201454,-0.028033332899212837,0.017725778743624687,0.0318242609500885,-0.02491581253707409,-0.012032645754516125,-0.07904616743326187,0.04767318814992905,-0.022440951317548752,0.0003671603335533291,0.05661536380648613,0.0059343366883695126,0.005770863965153694,0.004136539530009031,0.008120161481201649,-0.055303119122982025,-0.04408229887485504,0.021806471049785614,-0.010103587061166763,-0.01941283419728279,0.0031767685431987047,-0.017773885279893875,-0.018855974078178406,-0.03219147026538849,0.009023765102028847,2.5241737944270426e-7,-0.037237219512462616,0.05779360234737396,-0.0030893778894096613,-0.0121650705114007,-0.0075207785703241825,-0.0828109160065651,0.032564427703619,-0.012539715506136417,0.02222718670964241,-0.00884549506008625,-0.0028715922962874174,0.02157781645655632,-0.03326429799199104,0.07392522692680359,-0.011472519487142563,0.018015924841165543,-0.030827799811959267,-0.03337157145142555,-0.051310714334249496,0.024395912885665894,0.03671551123261452,-0.011799532920122147,0.07856747508049011,0.056025441735982895,0.008538341149687767,-0.0051153297536075115,0.025571219623088837,-0.01104671973735094,0.052114229649305344,-0.05795731022953987,0.009067036211490631,-0.026036377996206284,-0.03993967920541763,0.048313114792108536,0.010347045958042145,-0.007201454136520624,-0.017461949959397316,-0.038250211626291275,0.019128669053316116,0.003386334516108036,0.05063793808221817,0.00480699073523283,-0.0009843872394412756,-0.03551403060555458,-0.003266355488449335,-0.05316147208213806,-0.022947508841753006,0.05616920068860054,-0.026916058734059334,-0.030661456286907196,-0.0017732797423377633,-0.02049854025244713,0.005825328174978495,-0.004911299794912338,-0.0050283633172512054,0.01739446260035038,-0.013428273610770702,0.03404345363378525,0.010472746565937996,0.011326074600219727,-0.004104021470993757,-0.06219722703099251,-0.005279490724205971,0.0664624497294426,-0.01035398431122303,0.018731649965047836,-0.004355370067059994,3.533496988485929e-34,0.019304877147078514,-0.0008200593874789774,0.0441068559885025,-0.016662973910570145,0.005057191476225853,0.009365297853946686,-0.021822012960910797,0.007214449346065521,0.0815337598323822,-0.10434750467538834,-0.018688073381781578]'
SET
  @TechnicalDesignVector_d865c989 = N'[-0.01928911730647087,-0.11240977793931961,-0.029324615374207497,-0.05927392840385437,-0.019617922604084015,-0.06658537685871124,0.051757294684648514,0.04194172844290733,-0.04908546805381775,-0.019058430567383766,0.026671696454286575,0.06527809798717499,0.007504678796976805,0.061102285981178284,0.014838754199445248,-0.07219871878623962,-0.01874273270368576,0.008030527271330357,-0.015600712038576603,-0.04236651584506035,0.01191572193056345,-0.033622242510318756,-0.010954447090625763,0.0027042117435485125,-0.04307328909635544,-0.00673591298982501,-0.06796673685312271,0.029564138501882553,0.0368216373026371,-0.07286862283945084,-0.01373400166630745,0.08790329098701477,-0.04677669703960419,0.042288657277822495,0.0000015927290633044322,-0.028536511585116386,-0.002190655330196023,0.01626088283956051,0.05031101405620575,0.019164180383086205,0.0688256174325943,-0.016362454742193222,0.02791482023894787,-0.04813452437520027,0.04045068845152855,-0.015547064132988453,0.03628886863589287,-0.025412743911147118,0.015836142003536224,-0.07154365628957748,0.012934308499097824,0.06682166457176208,0.007126715034246445,0.04308272525668144,-0.02767200395464897,0.09365096688270569,-0.009521406143903732,0.06184016913175583,0.06720589101314545,0.0008151522488333285,-0.016065705567598343,0.005322284996509552,-0.02213210240006447,-0.05560868978500366,0.0770215317606926,0.010457221418619156,0.03094581514596939,-0.028399784117937088,-0.03616173937916756,0.018932675942778587,-0.018976055085659027,-0.002065907698124647,0.0042366269044578075,-0.01901116967201233,-0.03580474108457565,0.04112629592418671,-0.02444743551313877,-0.04182346910238266,0.01805134303867817,-0.056199051439762115,-0.07273278385400772,0.020579520612955093,-0.007784819230437279,-0.061986956745386124,0.03842136636376381,0.0188177190721035,0.02645607478916645,-0.01746995374560356,-0.02628501132130623,0.006796612404286861,0.02752397209405899,-0.012887008488178253,0.06752290576696396,-0.028975587338209152,-0.008905463851988316,-0.04087338224053383,0.04082838445901871,0.0046382988803088665,0.06090785562992096,0.010382923297584057,0.10935301333665848,0.007786772213876247,0.021812688559293747,0.04184429347515106,0.035878024995326996,-0.03307069465517998,-0.020645933225750923,0.02003951370716095,-0.010312356986105442,0.02771770767867565,-0.006082004867494106,0.0029405115637928247,0.009810525923967361,-0.01709652505815029,0.0007068503764458001,0.026989642530679703,0.02354099415242672,0.03565189614892006,-0.0038559723179787397,-0.01887460984289646,0.029467299580574036,0.008906851522624493,0.010696315206587315,0.015327096916735172,-0.01225260179489851,-0.008204294368624687,-0.054580383002758026,-0.014136550948023796,0.009697417728602886,0.03625478968024254,0.017769580706954002,-0.005931959953159094,0.023879539221525192,-0.01365467719733715,-0.02462020143866539,0.03674866631627083,0.02367768995463848,-0.002695919945836067,-0.02428528293967247,0.009872050024569035,-0.003857935545966029,0.05055425688624382,0.011437326669692993,-0.017791150137782097,0.02039976231753826,-0.028413141146302223,0.008393688127398491,0.037474263459444046,0.0009017103002406657,-0.004852792248129845,0.03892192989587784,0.025383155792951584,-0.11699990928173065,0.01775282621383667,-0.02436903677880764,-0.008218993432819843,-0.004429581109434366,-0.03356023505330086,-0.03809829428792,0.022682830691337585,0.017766069620847702,-0.02115379087626934,-0.005150396842509508,-0.010759112425148487,-0.034737106412649155,0.015890955924987793,-0.05086878687143326,-0.021451899781823158,-0.022392377257347107,0.01821032539010048,0.009230057708919048,-0.05946137383580208,-0.028970731422305107,-0.07773630321025848,0.06325408816337585,0.12076926976442337,0.02655913308262825,-0.0014559613773599267,-0.03106844611465931,0.027932023629546165,0.016326364129781723,-0.038507044315338135,-0.006154133006930351,0.023967446759343147,-0.034582022577524185,-0.012242067605257034,-0.06081214174628258,0.06494444608688354,-0.013851210474967957,0.024500079452991486,0.0075619276612997055,0.010625484399497509,0.0409088097512722,-0.03374384343624115,0.002249723067507148,-0.012936237268149853,0.04192826524376869,-0.05900264158844948,0.038884103298187256,-0.010949387215077877,-0.05501458793878555,0.04018552601337433,-0.011321976780891418,0.02369365096092224,0.006634981371462345,-0.03845648840069771,-0.06311061978340149,-0.010468686930835247,0.013444478623569012,0.03732989355921745,-0.016501620411872864,0.02531457133591175,-0.06525223702192307,0.013096502982079983,-0.050893861800432205,0.0006164785590954125,0.0210858341306448,0.04999331012368202,-0.043522752821445465,-0.01573328487575054,-0.045530274510383606,-0.04460084065794945,0.006886160932481289,-0.001785485539585352,0.10271627455949783,0.09970016777515411,-0.025952855125069618,-0.03211047500371933,0.010490820743143559,0.02766023948788643,-0.022233515977859497,-0.0560481883585453,0.05247453972697258,0.03910087049007416,0.03595219552516937,0.013855507597327232,0.057073209434747696,0.03785818815231323,0.014961834996938705,-0.037858862429857254,-0.01886708103120327,-0.01349237747490406,-0.0032914066687226295,0.0024390178732573986,0.009672042913734913,-0.011616530828177929,-0.009751707315444946,0.005086945835500956,-0.0063092983327806,-0.07593711465597153,0.0035453394521027803,0.028469065204262733,0.03617432713508606,-0.03169970214366913,0.013852349482476711,0.014419308863580227,0.06614243984222412,-0.0006416160031221807,-0.04115338996052742,0.0516422763466835,0.008549095131456852,-0.023166455328464508,0.013651528395712376,0.01448099222034216,0.033548753708601,-0.0015819023828953505,0.0584886372089386,-0.03267912566661835,-0.017574090510606766,0.01763826236128807,-0.009122254326939583,0.023937152698636055,-0.0025878017768263817,-0.0051071238704025745,-0.013424129225313663,0.017317961901426315,-0.02195393480360508,-0.01968085765838623,-0.03822310268878937,0.004288400057703257,-0.057883370667696,-0.06520703434944153,-0.0004844570648856461,-0.0019358117133378983,-0.028313882648944855,-0.006094801239669323,0.04792425036430359,-0.007404360454529524,0.042957864701747894,0.031649451702833176,-0.02060704305768013,0.03878294676542282,0.035235919058322906,0.023377371951937675,-0.00338846817612648,0.028887281194329262,-0.0381162092089653,0.04326128214597702,-0.014154155738651752,0.01926032453775406,0.01377219520509243,0.009016751311719418,-0.01694604381918907,0.001461603445932269,-0.041603296995162964,0.09509626775979996,-0.005035903304815292,-0.020342543721199036,-0.006158352363854647,0.03327502682805061,0.029804738238453865,-0.014508472755551338,0.03582678362727165,-0.04438195005059242,0.036788459867239,0.034330304712057114,-0.0037200190126895905,-0.002878383966162801,0.0022440284956246614,0.07236409187316895,-0.06096119061112404,-0.030078250914812088,0.05737626552581787,-0.05481649562716484,-0.028126049786806107,0.059259481728076935,-0.02795260213315487,0.009516936726868153,0.009685883298516273,-0.010533702559769154,-0.005843627732247114,-0.011913895606994629,0.0038428097032010555,0.020317984744906425,0.04338303208351135,0.054250918328762054,-0.030057519674301147,-0.08046884089708328,0.04369798302650452,-0.010716351680457592,-0.02315114252269268,-0.03810405358672142,0.02661016210913658,0.0358424186706543,0.07535268366336823,0.016258221119642258,0.03302975371479988,-0.007467821706086397,-0.015471793711185455,0.038324058055877686,0.03454703465104103,0.039681773632764816,0.002625374821946025,-0.01849418692290783,-0.0024486565962433815,0.05524367094039917,-0.07938014715909958,0.030474459752440453,-0.05947153642773628,-0.018528666347265244,-0.01911226101219654,0.05620905011892319,0.004126611165702343,-0.02324831672012806,-0.10998934507369995,0.03330950811505318,0.020163916051387787,-0.0029721595346927643,-0.0018398206448182464,-0.04708985984325409,0.005393640138208866,0.022943967953324318,0.05250116065144539,0.019304871559143066,-0.028329074382781982,-0.08390361070632935,0.01280204113572836,-0.026279056444764137,0.0025661704130470753,0.023737065494060516,0.02532294951379299,-0.04616517946124077,0.031983036547899246,-0.03575066849589348,0.013142047449946404,-0.014178499579429626,-0.01688312366604805,0.07228464633226395,-0.03445034101605415,0.058686889708042145,-0.00606795446947217,-0.01678907684981823,-0.012751627713441849,-0.023162376135587692,-0.012999109923839569,0.07599237561225891,-0.031876757740974426,-0.006595917046070099,0.025800511240959167,0.0009971141116693616,0.0025678901001811028,0.010220506228506565,-0.04908356815576553,0.027860088273882866,0.033519431948661804,-0.024009549990296364,0.002729024039581418,0.034636955708265305,0.021843580529093742,-0.0036734705790877342,-0.00540449284017086,0.004690871108323336,-0.021706953644752502,-0.04559270665049553,-0.027257656678557396,0.009865108877420425,0.02501204051077366,-0.021745268255472183,-0.0027609297540038824,0.04978460446000099,-0.009448466822504997,-0.020879123359918594,0.05524599552154541,0.0026525426656007767,0.013479377143085003,-0.049226708710193634,0.00406050868332386,-0.03228188678622246,-0.029871098697185516,0.03357742354273796,-0.013690432533621788,-0.022165991365909576,-0.040952567011117935,0.05271116644144058,0.08475887030363083,-0.03866410255432129,-0.04896173253655434,0.00886830035597086,0.022854728624224663,-0.011739365756511688,0.028005581349134445,0.0024657929316163063,0.040592506527900696,0.015454431995749474,-0.03249197453260422,-0.060547493398189545,-0.05682598054409027,-0.008470342494547367,0.020020203664898872,0.039592619985342026,-0.032602980732917786,0.05152566730976105,0.01840152032673359,0.016241570934653282,-0.010414726100862026,-0.029015595093369484,0.020837783813476562,0.06290603429079056,-0.02379099279642105,-0.025754038244485855,0.04369882121682167,0.027831191197037697,0.0004228103789500892,-0.030551381409168243,-0.01208339910954237,-0.018796326592564583,0.039333876222372055,-0.008602604269981384,-0.02382219210267067,-0.01617983542382717,-0.0002910624025389552,0.008015818893909454,-0.022450778633356094,-0.013033349998295307,0.054024696350097656,-0.004431675188243389,-0.04359040409326553,-0.048052649945020676,-0.07020892202854156,-0.0008793069864623249,-0.003606887999922037,0.0590052604675293,0.03902539983391762,0.008245013654232025,0.005870752036571503,0.018644794821739197,0.020663101226091385,-0.017345882952213287,-0.01592756062746048,0.00810426939278841,-0.026708874851465225,-0.06466492265462875,0.0331549309194088,0.03917562589049339,0.04102576524019241,-0.06185765191912651,-0.01026867888867855,0.03353842720389366,-0.002254944760352373,0.03331398591399193,0.0036699657794088125,-0.014732172712683678,0.010525749064981937,0.0260317325592041,-0.026281820610165596,0.043609391897916794,0.0065058013424277306,-0.0420265793800354,0.02029818296432495,-0.04536529257893562,0.01280975341796875,0.011804535053670406,-0.04744939133524895,0.02665645442903042,-0.019951654598116875,-0.01937853731215,0.024999119341373444,0.08204318583011627,0.027830881997942924,-0.01919928379356861,0.007049696519970894,0.028955623507499695,-0.028293905779719353,-0.009784785099327564,0.04891322925686836,-0.026268621906638145,0.03273558244109154,-0.0016764044994488358,0.03150311857461929,-0.01590777188539505,-0.010726439766585827,-0.04923884570598602,-0.003634991589933634,-0.08359245210886002,-0.0045080408453941345,-0.010588095523416996,0.038309406489133835,0.09289953112602234,0.005841242149472237,-0.041821837425231934,-0.04401347041130066,-0.01882835477590561,-0.0051801507361233234,0.01143068540841341,0.052094947546720505,0.016540179029107094,0.035294290632009506,-0.01846780814230442,-0.013073987327516079,0.007281196303665638,0.036360256373882294,-0.03120269998908043,-0.014483398757874966,-0.012796569615602493,0.00918755866587162,-5.879212220434624e-33,-0.019872473552823067,-0.056995343416929245,-0.06684178858995438,0.03121279925107956,-0.032222989946603775,-0.05440083146095276,0.001449225703254342,0.006205612327903509,0.006985381245613098,0.03157733380794525,0.03431740403175354,-0.05676715075969696,-0.005606745835393667,0.010942347347736359,-0.0353703498840332,0.06181986257433891,-0.008349350653588772,-0.0012066063936799765,-0.0022523333318531513,0.007186890579760075,0.006126470398157835,0.049363601952791214,-0.014821702614426613,0.022076768800616264,-0.04934139922261238,-0.0013636284274980426,0.03936724737286568,-0.009657783433794975,-0.050448693335056305,0.009363426826894283,0.004600605461746454,0.009175785817205906,-0.05269327014684677,0.05783476680517197,-0.008357946760952473,-0.04607999324798584,-0.05449207127094269,-0.013869457878172398,0.010199937969446182,-0.0176993515342474,0.016852501779794693,0.02323787845671177,0.0439130999147892,-0.003912993241101503,-0.02378752827644348,-0.016168061643838882,0.03573431819677353,-0.018033824861049652,-0.07266426086425781,-0.02702629379928112,0.0219570379704237,0.04651856794953346,-0.035855989903211594,0.010688351467251778,-0.010471287183463573,0.023626891896128654,0.07122614979743958,-0.02400786243379116,-0.04361102357506752,0.019851844757795334,-0.04618435725569725,-0.03906474635004997,-0.008892832323908806,0.02089792862534523,0.05992712453007698,0.04906824231147766,0.03178379684686661,0.012028313241899014,-0.01529163308441639,0.014016075059771538,0.029410196468234062,-0.006795319262892008,0.04003976657986641,-0.06758174300193787,-0.03902892768383026,0.026927214115858078,0.016666345298290253,-0.0049422853626310825,-0.0524931401014328,0.015859168022871017,0.023513000458478928,0.017822179943323135,0.007064519450068474,-0.02140405774116516,0.031092535704374313,-0.09227965027093887,0.002457704395055771,-0.03604966402053833,0.016232945024967194,-0.012007396668195724,-0.06634803861379623,0.040708836168050766,-0.0690079927444458,0.023598097264766693,0.02319427579641342,-0.02945387177169323,0.0029696908313781023,0.1015852689743042,-0.02694365754723549,-0.06898826360702515,0.032593775540590286,-0.035842958837747574,-0.09914641827344894,-0.028876744210720062,-0.011498057283461094,-0.024626435711979866,-0.028016023337841034,-0.04164055362343788,-0.03272321820259094,0.04424390569329262,0.013258513063192368,0.007491417229175568,-0.04177605360746384,-0.08109138906002045,0.02581106685101986,-0.05124656483530998,0.021930960938334465,0.006453018169850111,0.04156581312417984,0.029136881232261658,0.018880780786275864,-0.011905810795724392,-0.07332226634025574,0.010775377973914146,0.05583541840314865,-0.004828632343560457,-0.033851440995931625,0.04233715310692787,0.006835174281150103,0.021426960825920105,-0.013984289951622486,-0.04074971750378609,2.3591728393057565e-7,0.012210010550916195,0.07136446237564087,0.014712237752974033,-0.026447346433997154,0.023179301992058754,-0.06328746676445007,-0.000728350190911442,-0.0011611590161919594,0.020410696044564247,-0.030088642612099648,0.00815676525235176,0.02199270948767662,0.02556908316910267,0.03256905451416969,-0.01952226646244526,0.019105376675724983,-0.013436834327876568,-0.013288216665387154,-0.027818048372864723,0.026744218543171883,-0.043207209557294846,-0.00043510031537152827,0.08887585997581482,0.01040200237184763,-0.01966596208512783,-0.028807833790779114,0.006179782561957836,-0.03789343684911728,0.07755306363105774,-0.011765857227146626,0.010784853249788284,-0.030490253120660782,-0.06053820252418518,0.031135186553001404,-0.004196684341877699,-0.0012418554397299886,-0.02820783294737339,-0.020410379394888878,-0.011764060705900192,0.09730604290962219,0.08350873738527298,-0.06386762857437134,-0.004127965774387121,0.006288702599704266,-0.011191710829734802,-0.009535163640975952,-0.012266571633517742,0.03153917193412781,0.0037409483920782804,-0.0341038815677166,0.014990882016718388,-0.024817906320095062,0.020130567252635956,-0.038629647344350815,-0.050848692655563354,-0.015377064235508442,0.010067862458527088,0.05132032930850983,0.009341122582554817,0.07100395858287811,-0.0031520756892859936,-0.08253738284111023,0.003083242569118738,0.043030597269535065,0.012173764407634735,0.018377376720309258,-0.030067022889852524,3.0892299188521845e-34,0.05150848999619484,0.0006547427619807422,0.02246961183845997,0.03391508013010025,0.0008731161360628903,-0.029609359800815582,0.06787388771772385,-0.02012147195637226,0.030134471133351326,0.0027886326424777508,-0.03369176387786865]'
SET
  @HasCustomProps_d865c989 = 0
SET
  @HasCustomEvents_d865c989 = 0
SET
  @RequiresData_d865c989 = 0
SET
  @DependencyCount_d865c989 = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_d865c989 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_d865c989 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_d865c989 = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_d865c989,
  @Namespace = @Namespace_d865c989,
  @Name = @Name_d865c989,
  @Version = @Version_d865c989,
  @VersionSequence = @VersionSequence_d865c989,
  @Title = @Title_d865c989,
  @Description = @Description_d865c989,
  @Type = @Type_d865c989,
  @Status = @Status_d865c989,
  @DeveloperName = @DeveloperName_d865c989,
  @DeveloperEmail = @DeveloperEmail_d865c989,
  @DeveloperOrganization = @DeveloperOrganization_d865c989,
  @SourceRegistryID = @SourceRegistryID_d865c989,
  @ReplicatedAt = @ReplicatedAt_d865c989,
  @LastSyncedAt = @LastSyncedAt_d865c989,
  @Specification = @Specification_d865c989,
  @FunctionalRequirements = @FunctionalRequirements_d865c989,
  @TechnicalDesign = @TechnicalDesign_d865c989,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_d865c989,
  @TechnicalDesignVector = @TechnicalDesignVector_d865c989,
  @HasCustomProps = @HasCustomProps_d865c989,
  @HasCustomEvents = @HasCustomEvents_d865c989,
  @RequiresData = @RequiresData_d865c989,
  @DependencyCount = @DependencyCount_d865c989,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_d865c989,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_d865c989,
  @HasRequiredCustomProps = @HasRequiredCustomProps_d865c989;

-- Save MJ: Components (core SP call only)
DECLARE @ID_1283227f UNIQUEIDENTIFIER,
@Namespace_1283227f NVARCHAR(MAX),
@Name_1283227f NVARCHAR(500),
@Version_1283227f NVARCHAR(50),
@VersionSequence_1283227f INT,
@Title_1283227f NVARCHAR(1000),
@Description_1283227f NVARCHAR(MAX),
@Type_1283227f NVARCHAR(255),
@Status_1283227f NVARCHAR(50),
@DeveloperName_1283227f NVARCHAR(255),
@DeveloperEmail_1283227f NVARCHAR(255),
@DeveloperOrganization_1283227f NVARCHAR(255),
@SourceRegistryID_1283227f UNIQUEIDENTIFIER,
@ReplicatedAt_1283227f DATETIMEOFFSET,
@LastSyncedAt_1283227f DATETIMEOFFSET,
@Specification_1283227f NVARCHAR(MAX),
@FunctionalRequirements_1283227f NVARCHAR(MAX),
@TechnicalDesign_1283227f NVARCHAR(MAX),
@FunctionalRequirementsVector_1283227f NVARCHAR(MAX),
@TechnicalDesignVector_1283227f NVARCHAR(MAX),
@HasCustomProps_1283227f BIT,
@HasCustomEvents_1283227f BIT,
@RequiresData_1283227f BIT,
@DependencyCount_1283227f INT,
@TechnicalDesignVectorEmbeddingModelID_1283227f NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_1283227f NVARCHAR(MAX),
@HasRequiredCustomProps_1283227f BIT
SET
  @ID_1283227f = '7e51e1bf-e118-4ea3-8b71-e2098f5cf11e'
SET
  @Namespace_1283227f = N'AI/Analytics'
SET
  @Name_1283227f = N'AIPromptsClusterDetails'
SET
  @Version_1283227f = N'1.0.0'
SET
  @VersionSequence_1283227f = 1
SET
  @Title_1283227f = N'AI Prompts Cluster Details'
SET
  @Description_1283227f = N'Detail panel showing selected prompt information and similar prompts'
SET
  @Type_1283227f = N'Other'
SET
  @Status_1283227f = N'Published'
SET
  @Specification_1283227f = N'{"name":"AIPromptsClusterDetails","title":"AI Prompts Cluster Details","description":"Detail panel showing selected prompt information and similar prompts","type":"panel","location":"embedded","code":"function AIPromptsClusterDetails({\n  selectedPrompt,\n  allPrompts,\n  clusterInfo,\n  similarPrompts,\n  onPromptNavigate,\n  onEditPrompt,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  const [expandedSection, setExpandedSection] = useState(''details'');\n  const [showFullTemplate, setShowFullTemplate] = useState(false);\n\n  // Modern style helpers\n  const sectionStyle = {\n    marginBottom: ''20px'',\n    padding: ''16px'',\n    background: ''linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(249,250,251,0.95) 100%)'',\n    borderRadius: ''16px'',\n    boxShadow: ''0 4px 12px rgba(0,0,0,0.05)'',\n    backdropFilter: ''blur(10px)'',\n    border: ''1px solid rgba(255,255,255,0.8)''\n  };\n\n  const headerStyle = {\n    fontSize: ''15px'',\n    fontWeight: ''600'',\n    color: ''#2d3748'',\n    marginBottom: ''12px'',\n    cursor: ''pointer'',\n    display: ''flex'',\n    alignItems: ''center'',\n    justifyContent: ''space-between'',\n    padding: ''8px'',\n    borderRadius: ''8px'',\n    transition: ''all 0.2s ease''\n  };\n\n  const labelStyle = {\n    fontSize: ''12px'',\n    fontWeight: ''600'',\n    color: ''#718096'',\n    marginBottom: ''6px'',\n    textTransform: ''uppercase'',\n    letterSpacing: ''0.025em''\n  };\n\n  const valueStyle = {\n    fontSize: ''14px'',\n    color: ''#2d3748'',\n    marginBottom: ''12px'',\n    lineHeight: ''1.5''\n  };\n\n  const badgeStyle = {\n    display: ''inline-block'',\n    padding: ''4px 10px'',\n    fontSize: ''12px'',\n    fontWeight: ''600'',\n    borderRadius: ''8px'',\n    marginRight: ''8px''\n  };\n\n  // Format template text with basic syntax highlighting\n  const formatTemplateText = (text) => {\n    if (!text) return ''No template text'';\n    \n    // Truncate if needed\n    const displayText = showFullTemplate \n      ? text \n      : text.length > 500 ? text.substring(0, 500) + ''...'' : text;\n    \n    // Basic syntax highlighting for variables\n    const highlighted = displayText.replace(\n      /\\{\\{([^}]+)\\}\\}/g,\n      ''<span style=\"color: #0066cc; font-weight: bold;\">{{$1}}</span>''\n    );\n    \n    return (\n      <div style={{ position: ''relative'' }}>\n        <pre style={{\n          whiteSpace: ''pre-wrap'',\n          wordWrap: ''break-word'',\n          fontFamily: ''monospace'',\n          fontSize: styles.fonts?.sizes?.xs || ''12px'',\n          backgroundColor: styles.colors?.surface || ''white'',\n          padding: styles.spacing?.sm || ''8px'',\n          borderRadius: styles.borders?.radius || ''4px'',\n          border: `1px solid $' + '{styles.colors?.border || ''#ddd''}`,\n          maxHeight: showFullTemplate ? ''none'' : ''200px'',\n          overflow: ''hidden''\n        }} dangerouslySetInnerHTML={{ __html: highlighted }} />\n        \n        {text.length > 500 && (\n          <button\n            onClick={() => setShowFullTemplate(!showFullTemplate)}\n            style={{\n              marginTop: styles.spacing?.xs || ''4px'',\n              padding: `2px 8px`,\n              fontSize: styles.fonts?.sizes?.xs || ''12px'',\n              backgroundColor: styles.colors?.primary || ''#007bff'',\n              color: ''white'',\n              border: ''none'',\n              borderRadius: styles.borders?.radius || ''4px'',\n              cursor: ''pointer''\n            }}\n          >\n            {showFullTemplate ? ''Show Less'' : ''Show More''}\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  if (!selectedPrompt) {\n    return (\n      <div style={{\n        display: ''flex'',\n        alignItems: ''center'',\n        justifyContent: ''center'',\n        height: ''100%'',\n        color: styles.colors?.text?.secondary || ''#666'',\n        fontSize: styles.fonts?.sizes?.sm || ''14px'',\n        textAlign: ''center''\n      }}>\n        Select a prompt from the graph to view details\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {/* Modern Header */}\n      <div style={{\n        marginBottom: ''24px'',\n        padding: ''20px'',\n        background: ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n        borderRadius: ''16px'',\n        boxShadow: ''0 8px 24px rgba(102, 126, 234, 0.2)'',\n        position: ''relative''\n      }}>\n        <div style={{\n          display: ''flex'',\n          justifyContent: ''space-between'',\n          alignItems: ''flex-start''\n        }}>\n          <div style={{ flex: 1 }}>\n            <h3 style={{\n              fontSize: ''20px'',\n              fontWeight: ''600'',\n              color: ''white'',\n              margin: 0,\n              marginBottom: ''8px''\n            }}>\n              {selectedPrompt.Name}\n            </h3>\n            <div style={{ display: ''flex'', gap: ''8px'', flexWrap: ''wrap'' }}>\n              {selectedPrompt.Category && (\n                <span style={{\n                  padding: ''3px 10px'',\n                  background: ''rgba(255,255,255,0.2)'',\n                  borderRadius: ''6px'',\n                  fontSize: ''12px'',\n                  color: ''white'',\n                  fontWeight: ''500''\n                }}>\n                  {selectedPrompt.Category}\n                </span>\n              )}\n              {selectedPrompt.Type && (\n                <span style={{\n                  padding: ''3px 10px'',\n                  background: ''rgba(255,255,255,0.2)'',\n                  borderRadius: ''6px'',\n                  fontSize: ''12px'',\n                  color: ''white'',\n                  fontWeight: ''500''\n                }}>\n                  {selectedPrompt.Type}\n                </span>\n              )}\n              {selectedPrompt.Status && (\n                <span style={{\n                  padding: ''3px 10px'',\n                  background: selectedPrompt.Status === ''Active'' \n                    ? ''rgba(72, 187, 120, 0.3)'' \n                    : ''rgba(255,255,255,0.2)'',\n                  borderRadius: ''6px'',\n                  fontSize: ''12px'',\n                  color: ''white'',\n                  fontWeight: ''500''\n                }}>\n                  {selectedPrompt.Status}\n                </span>\n              )}\n            </div>\n          </div>\n          \n          {/* Action button */}\n          <button\n            onClick={() => onEditPrompt(selectedPrompt.ID)}\n            style={{\n              width: ''40px'',\n              height: ''40px'',\n              backgroundColor: ''rgba(255,255,255,0.2)'',\n              backdropFilter: ''blur(10px)'',\n              color: ''white'',\n              fontSize: ''16px'',\n              border: ''none'',\n              borderRadius: ''10px'',\n              cursor: ''pointer'',\n              display: ''flex'',\n              alignItems: ''center'',\n              justifyContent: ''center'',\n              transition: ''all 0.2s ease''\n            }}\n            onMouseEnter={e => {\n              e.currentTarget.style.backgroundColor = ''rgba(255,255,255,0.3)'';\n              e.currentTarget.style.transform = ''scale(1.05)'';\n            }}\n            onMouseLeave={e => {\n              e.currentTarget.style.backgroundColor = ''rgba(255,255,255,0.2)'';\n              e.currentTarget.style.transform = ''scale(1)'';\n            }}\n            title=\"Open Prompt Record\"\n          >\n            <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\n          </button>\n        </div>\n      </div>\n\n      {/* Prompt Details */}\n      <div style={sectionStyle}>\n        <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''details'' ? null : ''details'')}>\n          <span>Prompt Details</span>\n          <span>{expandedSection === ''details'' ? ''▼'' : ''▶''}</span>\n        </div>\n        \n        {expandedSection === ''details'' && (\n          <div>\n            {selectedPrompt.Description && (\n              <>\n                <div style={labelStyle}>Description</div>\n                <div style={valueStyle}>{selectedPrompt.Description}</div>\n              </>\n            )}\n            \n            <div style={{ display: ''flex'', gap: styles.spacing?.md || ''16px'' }}>\n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Category</div>\n                <div style={valueStyle}>{selectedPrompt.Category || ''None''}</div>\n              </div>\n              \n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Type</div>\n                <div style={valueStyle}>{selectedPrompt.Type || ''None''}</div>\n              </div>\n            </div>\n            \n            <div style={{ display: ''flex'', gap: styles.spacing?.md || ''16px'' }}>\n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Status</div>\n                <div style={{\n                  ...badgeStyle,\n                  backgroundColor: selectedPrompt.Status === ''Active'' \n                    ? ''#d4edda'' \n                    : selectedPrompt.Status === ''Disabled'' \n                    ? ''#f8d7da'' \n                    : ''#fff3cd'',\n                  color: selectedPrompt.Status === ''Active'' \n                    ? ''#155724'' \n                    : selectedPrompt.Status === ''Disabled'' \n                    ? ''#721c24'' \n                    : ''#856404''\n                }}>\n                  {selectedPrompt.Status}\n                </div>\n              </div>\n              \n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Role</div>\n                <div style={valueStyle}>{selectedPrompt.PromptRole || ''None''}</div>\n              </div>\n            </div>\n            \n            <div style={labelStyle}>Response Format</div>\n            <div style={valueStyle}>{selectedPrompt.ResponseFormat || ''Text''}</div>\n          </div>\n        )}\n      </div>\n\n      {/* Template Text */}\n      <div style={sectionStyle}>\n        <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''template'' ? null : ''template'')}>\n          <span>Template Text</span>\n          <span>{expandedSection === ''template'' ? ''▼'' : ''▶''}</span>\n        </div>\n        \n        {expandedSection === ''template'' && (\n          <div>\n            {formatTemplateText(selectedPrompt.TemplateText)}\n          </div>\n        )}\n      </div>\n\n      {/* Cluster Information */}\n      {clusterInfo && (\n        <div style={sectionStyle}>\n          <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''cluster'' ? null : ''cluster'')}>\n            <span>Cluster Information</span>\n            <span>{expandedSection === ''cluster'' ? ''▼'' : ''▶''}</span>\n          </div>\n          \n          {expandedSection === ''cluster'' && (\n            <div>\n              <div style={labelStyle}>Cluster</div>\n              <div style={valueStyle}>\n                Cluster {clusterInfo.clusterIndex + 1} ({clusterInfo.clusterSize} members)\n              </div>\n              \n              <div style={labelStyle}>Other Members</div>\n              <div style={{\n                maxHeight: ''150px'',\n                overflowY: ''auto'',\n                fontSize: styles.fonts?.sizes?.sm || ''14px''\n              }}>\n                {clusterInfo.clusterMembers\n                  .filter(p => p.ID !== selectedPrompt.ID)\n                  .map(prompt => (\n                    <div\n                      key={prompt.ID}\n                      style={{\n                        padding: styles.spacing?.xs || ''4px'',\n                        marginBottom: ''2px'',\n                        backgroundColor: styles.colors?.surface || ''white'',\n                        borderRadius: styles.borders?.radius || ''4px'',\n                        cursor: ''pointer'',\n                        '':hover'': {\n                          backgroundColor: styles.colors?.hover || ''#f0f0f0''\n                        }\n                      }}\n                      onClick={() => onPromptNavigate(prompt.ID)}\n                    >\n                      {prompt.Name}\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Similar Prompts */}\n      {similarPrompts && similarPrompts.length > 0 && (\n        <div style={sectionStyle}>\n          <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''similar'' ? null : ''similar'')}>\n            <span>Similar Prompts</span>\n            <span>{expandedSection === ''similar'' ? ''▼'' : ''▶''}</span>\n          </div>\n          \n          {expandedSection === ''similar'' && (\n            <div>\n              {similarPrompts.map(({ prompt, similarity }) => (\n                <div\n                  key={prompt.ID}\n                  style={{\n                    display: ''flex'',\n                    justifyContent: ''space-between'',\n                    alignItems: ''center'',\n                    padding: styles.spacing?.xs || ''4px'',\n                    marginBottom: ''2px'',\n                    backgroundColor: styles.colors?.surface || ''white'',\n                    borderRadius: styles.borders?.radius || ''4px'',\n                    cursor: ''pointer''\n                  }}\n                  onClick={() => onPromptNavigate(prompt.ID)}\n                >\n                  <div>\n                    <div style={{ fontSize: styles.fonts?.sizes?.sm || ''14px'' }}>\n                      {prompt.Name}\n                    </div>\n                    <div style={{\n                      fontSize: styles.fonts?.sizes?.xs || ''12px'',\n                      color: styles.colors?.text?.secondary || ''#666''\n                    }}>\n                      {prompt.Category || ''No category''}\n                    </div>\n                  </div>\n                  <div style={{\n                    ...badgeStyle,\n                    backgroundColor: similarity > 0.9 ? ''#d4edda'' \n                      : similarity > 0.7 ? ''#fff3cd'' \n                      : ''#f8f8f8'',\n                    color: similarity > 0.9 ? ''#155724'' \n                      : similarity > 0.7 ? ''#856404'' \n                      : ''#666''\n                  }}>\n                    {(similarity * 100).toFixed(0)}%\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}","functionalRequirements":"Display selected prompt details including name, description, template text, show similar prompts based on vector similarity, display cluster membership info, provide navigation to prompt editor","technicalDesign":"React component that displays prompt entity details, calculates and shows top similar prompts using vector service, formats template text with syntax highlighting","properties":[{"name":"selectedPrompt","type":"object","required":false,"description":"Currently selected prompt entity"},{"name":"allPrompts","type":"array","required":true,"description":"All prompts for similarity calculation"},{"name":"clusterInfo","type":"object","required":false,"description":"Cluster information for selected prompt"},{"name":"similarPrompts","type":"array","required":false,"description":"List of similar prompts with similarity scores"}],"events":[{"name":"onPromptNavigate","description":"Fired when user wants to navigate to a prompt","parameters":[{"name":"promptId","type":"string","description":"ID of prompt to navigate to"}]},{"name":"onEditPrompt","description":"Fired when user wants to edit the prompt","parameters":[{"name":"promptId","type":"string","description":"ID of prompt to edit"}]}],"libraries":[],"usageExample":"<AIPromptsClusterDetails selectedPrompt={prompt} allPrompts={prompts} />","version":"1.0.0"}'
SET
  @FunctionalRequirements_1283227f = N'Display selected prompt details including name, description, template text, show similar prompts based on vector similarity, display cluster membership info, provide navigation to prompt editor'
SET
  @TechnicalDesign_1283227f = N'React component that displays prompt entity details, calculates and shows top similar prompts using vector service, formats template text with syntax highlighting'
SET
  @FunctionalRequirementsVector_1283227f = N'[-0.04377761855721474,-0.08697464317083359,-0.01669113151729107,-0.03190318122506142,0.010670472867786884,-0.0034533857833594084,0.05526202172040939,0.05574878305196762,-0.052021659910678864,0.009781105443835258,-0.030483296141028404,0.028501778841018677,0.018211061134934425,0.036892686039209366,-0.035861413925886154,-0.1538928896188736,0.01927696354687214,-0.02285437472164631,0.01276758685708046,-0.026943108066916466,0.0027003095019608736,-0.007596606854349375,-0.024862242862582207,0.0027988695073872805,0.003241717116907239,-0.041145071387290955,-0.008935871534049511,0.017435826361179352,0.04767586290836334,-0.06403966248035431,-0.05691060796380043,0.0743376612663269,-0.010349681600928307,-0.034082140773534775,0.0000015713835637143347,-0.041968364268541336,-0.03022913821041584,0.01203388161957264,-0.05430127680301666,0.021688196808099747,0.05790657177567482,0.015825016424059868,0.05044369027018547,-0.03556051850318909,0.04732108861207962,-0.044820934534072876,-0.012887089513242245,0.05727383494377136,0.042977720499038696,-0.05482836067676544,0.028459614142775536,0.038511723279953,-0.028986547142267227,-0.0071135046891868114,-0.07373445481061935,0.05585698410868645,-0.01744299940764904,-0.04416549578309059,0.08486445993185043,0.049179717898368835,-0.007134018465876579,-0.007772255223244429,-0.0010990294395014644,-0.011084683239459991,0.0067428406327962875,0.04410881549119949,-0.0023485543206334114,-0.04266922175884247,-0.005158080253750086,0.012735706754028797,0.05710377171635628,-0.018335439264774323,0.015025683678686619,-0.07202986627817154,-0.016128355637192726,0.02201620116829872,-0.022991742938756943,0.0020909039303660393,-0.031933195888996124,-0.016194237396121025,0.011166064999997616,0.005601165350526571,-0.03855273127555847,-0.044405173510313034,0.024928754195570946,0.05310218036174774,0.0312104020267725,-0.029090195894241333,-0.043391671031713486,-0.01742643490433693,0.011119352653622627,-0.03456801176071167,0.014270239509642124,0.006682014558464289,-0.12581315636634827,-0.014045258983969688,0.01690863072872162,-0.05290033668279648,0.03542623296380043,0.08160719275474548,0.07993834465742111,0.037261784076690674,-0.02846171334385872,0.028846658766269684,0.009085073135793209,0.06808777153491974,0.004895805846899748,0.042695190757513046,-0.01854122430086136,0.008024545386433601,-0.03810711205005646,0.006396339740604162,-0.013429349288344383,0.03037135675549507,-0.02537449635565281,0.016629187390208244,0.0016012376872822642,0.04165353998541832,-0.014096708036959171,0.04028211534023285,0.039258599281311035,-0.01106629241257906,-0.015952279791235924,-0.009152138605713844,-0.011423647403717041,-0.05063449963927269,-0.06012590974569321,-0.06641470640897751,-0.020145198330283165,-0.03657699376344681,0.0028558121994137764,-0.005807116627693176,0.02563679777085781,0.019460301846265793,-0.03793491795659065,0.004277462139725685,0.01790539175271988,-0.0023088238667696714,0.008230654522776604,-0.0016393207479268312,0.014433812350034714,0.012577244080603123,-0.039618346840143204,0.010163814760744572,0.035397715866565704,0.03800090774893761,-0.014399627223610878,0.011186454445123672,0.0014516542432829738,0.007399866823107004,-0.018438756465911865,0.03387359902262688,-0.025633884593844414,-0.0002778139023575932,0.030383775010704994,0.021320605650544167,0.015290132723748684,-0.05021558701992035,-0.10353413224220276,0.0030807408038526773,0.012928174808621407,0.003103731432929635,0.04271372780203819,-0.020193977281451225,-0.03322146087884903,0.008379862643778324,-0.07154862582683563,0.01642155833542347,0.07204266637563705,-0.017023373395204544,-0.0047134519554674625,-0.005824240390211344,-0.0012219015043228865,0.02163514494895935,0.007596455514431,0.0753825306892395,0.04842137545347214,-0.020061541348695755,0.014173316769301891,0.020158831030130386,0.0022977476473897696,0.0017899447120726109,0.016401372849941254,0.004266320262104273,-0.069827601313591,-0.006106584798544645,-0.004497703164815903,0.0006102548795752227,-0.008184830658137798,0.05345521494746208,0.012237267568707466,0.012651422061026096,-0.07059543579816818,-0.00875526200979948,0.02191786840558052,-0.007557820528745651,-0.019143426790833473,-0.02529413253068924,0.07771667838096619,0.01457840483635664,0.0034694476053118706,0.046616241335868835,0.05697254836559296,-0.008633580058813095,0.023907717317342758,-0.029751591384410858,-0.060861796140670776,-0.008882843889296055,0.03534179925918579,0.017358100041747093,0.061406463384628296,-0.00901459064334631,-0.05582650378346443,0.026009928435087204,-0.05496964603662491,0.012272302992641926,-0.0054853204637765884,0.029103165492415428,-0.07081936299800873,-0.02961760386824608,-0.005296576302498579,0.03972858563065529,-0.03126703202724457,0.012097029946744442,0.07882526516914368,0.027584293857216835,-0.0014824523823335767,0.01859329640865326,0.02269812487065792,0.02319374307990074,-0.013687234371900558,-0.02213526889681816,0.05161387100815773,0.006548193283379078,-0.0020442293025553226,0.048262178897857666,-0.0026631031651049852,-0.002306712558493018,-0.06575086712837219,-0.0023838477209210396,-0.003039722330868244,-0.06539327651262283,-0.038643404841423035,-0.019109029322862625,-0.039053693413734436,-0.024890869855880737,-0.029590005055069923,0.01267057005316019,0.03281869739294052,-0.017778081819415092,-0.02097601629793644,-0.006268246565014124,0.0625367984175682,0.0002892014745157212,0.05113133788108826,0.14227987825870514,0.06321048736572266,-0.026305463165044785,-0.13171179592609406,0.06814935803413391,0.00023584086738992482,-0.016116812825202942,-0.029181018471717834,0.01125848013907671,0.0035935486666858196,0.020188743248581886,0.03735952079296112,-0.04066459462046623,-0.0356062687933445,-0.009902392514050007,0.024358592927455902,0.044788017868995667,0.023640451952815056,-0.019922012463212013,-0.017135322093963623,0.029167091473937035,-0.016994526609778404,0.028654571622610092,0.012044144794344902,-0.006330572068691254,0.01086342055350542,-0.01049149502068758,0.013277817517518997,0.011067967861890793,-0.029039809480309486,0.004850953817367554,0.024011723697185516,-0.016915639862418175,-0.007252085022628307,-0.010209077037870884,0.005422923713922501,0.012682236731052399,0.02677120454609394,0.0398067943751812,-0.013996196910738945,0.002062486484646797,0.012054838240146637,0.0757407397031784,0.0035166372545063496,0.03623397275805473,-0.04286053031682968,0.03488018363714218,-0.006379141006618738,0.010505156591534615,-0.04569411277770996,0.06205315142869949,0.05401600897312164,0.029762335121631622,0.08060398697853088,-0.015737581998109818,0.028427869081497192,0.026207761839032173,0.002745043719187379,-0.01374670397490263,-0.006229087710380554,0.030823996290564537,-0.03716101869940758,-0.033025242388248444,-0.019286928698420525,0.07845664769411087,-0.007262593600898981,-0.004420085810124874,0.04709816724061966,-0.03937191516160965,-0.018604744225740433,0.03340595215559006,-0.040912192314863205,0.00975604634732008,-0.042512234300374985,0.025307759642601013,0.03706565126776695,-0.01109924167394638,-0.015271754004061222,-0.010829085484147072,0.025395575910806656,0.03633645549416542,0.018328748643398285,-0.040302131325006485,0.004140782169997692,-0.049955811351537704,-0.04550119489431381,-0.030681394040584564,-0.011140359565615654,-0.001158165861852467,0.05336335673928261,0.02632215805351734,0.014190953224897385,0.0325511209666729,-0.050401028245687485,0.020265940576791763,0.0494687482714653,0.027548741549253464,-0.00954116228967905,0.016679445281624794,-0.0061250366270542145,0.023086873814463615,-0.038696032017469406,0.003701180452480912,-0.04693596065044403,-0.07659702748060226,-0.034088294953107834,0.01810741052031517,0.005761137697845697,0.013077901676297188,0.0332406647503376,0.021614495664834976,-0.0009139978792518377,-0.07973309606313705,-0.03217324987053871,0.008530178107321262,-0.013722117058932781,-0.003174748970195651,0.02865075320005417,0.055801864713430405,-0.008590368553996086,-0.06876801699399948,0.003125989343971014,-0.01011994294822216,-0.025901280343532562,0.016240740194916725,0.040713001042604446,0.048034876585006714,0.06073204427957535,-0.022832458838820457,0.04186957702040672,-0.028070909902453423,-0.017865361645817757,0.021903444081544876,-0.012197521515190601,-0.005898785777390003,-0.005026145838201046,-0.0707559883594513,-0.07018686830997467,-0.02284044399857521,-0.00048340499051846564,0.016455477103590965,-0.05092868581414223,0.03949742764234543,-0.0027029006741940975,-0.00028807332273572683,0.006565629038959742,0.01111884880810976,-0.02176753804087639,-0.0009572299313731492,0.01040753535926342,0.010198201984167099,0.03720424696803093,0.012881388887763023,-0.012733855284750462,-0.03904632478952408,-0.09927721321582794,0.02065098099410534,0.009642732329666615,-0.06194112077355385,-0.03353307023644447,-0.01164246816188097,-0.0069906930439174175,-0.01728147827088833,0.028742019087076187,0.0845797136425972,-0.026173580437898636,-0.013152592815458775,0.026785751804709435,-0.015425506979227066,0.006877478212118149,0.002658536657691002,0.008670661598443985,0.007532414980232716,0.017502982169389725,0.03149566799402237,0.03347156196832657,0.01715019904077053,-0.03038584440946579,0.02752954699099064,0.08918122947216034,0.012330600060522556,-0.05106697604060173,-0.004838095977902412,0.011037994176149368,0.000040995866584125906,0.03225310519337654,0.050474051386117935,0.09854210913181305,0.012363290414214134,-0.015755685046315193,-0.04925494268536568,-0.02763490192592144,-0.013630981557071209,0.025295639410614967,-0.04481356590986252,-0.0301944762468338,-0.04558251053094864,0.023465583100914955,0.0027142250910401344,-0.011065397411584854,-0.049811601638793945,-0.0470309816300869,0.05381684750318527,-0.04476659372448921,-0.007300711236894131,0.009925390593707561,0.020632127299904823,0.03042975813150406,-0.02536688558757305,-0.013509252108633518,0.07619951665401459,-0.031182099133729935,0.008640948683023453,-0.027982594445347786,-0.054705388844013214,-0.006438509561121464,-0.011235019192099571,-0.028665468096733093,-0.01177563238888979,0.033470988273620605,0.0002833187463693321,-0.043115124106407166,0.05899793654680252,-0.0896543562412262,-0.005236068274825811,0.06167227402329445,0.04519914090633392,0.01954454369843006,-0.07691866904497147,-0.016814522445201874,0.023359108716249466,0.010918519459664822,-0.0023296938743442297,0.04562373831868172,0.05017790570855141,-0.049381010234355927,-0.009331081993877888,0.018009105697274208,0.025794656947255135,-0.015082997269928455,0.04649590700864792,-0.09915228188037872,0.024281058460474014,-0.015787137672305107,0.004877712111920118,0.03582937642931938,-0.02628527395427227,-0.023807892575860023,0.003941431641578674,0.012784689664840698,0.031436361372470856,-0.015088106505572796,0.05997612327337265,0.023556489497423172,0.023981427773833275,0.017813652753829956,0.00021741083764936775,-0.030505796894431114,-0.039240751415491104,-0.014816481620073318,0.041130002588033676,-0.028217501938343048,0.027574216946959496,-0.052292972803115845,-0.044375281780958176,0.010201475583016872,-0.03887465223670006,-0.010422543622553349,0.029343629255890846,0.008877179585397243,0.05877622589468956,0.035020023584365845,0.014520004391670227,0.00953112356364727,0.019540688022971153,-0.09637445956468582,0.003925866447389126,0.02655930072069168,-0.041040461510419846,-0.04876621440052986,0.03762204572558403,0.044096145778894424,0.1251879185438156,-0.011729591526091099,0.00889687892049551,-0.04372354969382286,0.060661766678094864,0.06267756968736649,-0.03667709231376648,-0.0548558346927166,-0.033822644501924515,0.02976182848215103,-0.05534571036696434,0.005513230804353952,0.03593960404396057,0.017778713256120682,-0.0024559132289141417,-0.03578018769621849,-0.012650378979742527,0.0013077340554445982,-5.272734277227096e-33,-0.04680875688791275,-0.029362373054027557,-0.07204589247703552,0.005523547530174255,-0.002093286020681262,-0.040954072028398514,-0.0018999690655618906,-0.02145414799451828,0.011279191821813583,0.015828460454940796,-0.005796931684017181,-0.06103606894612312,0.003987746778875589,0.011251437477767467,-0.017182886600494385,0.009462804533541203,0.049916915595531464,0.021846473217010498,-0.03773254156112671,0.04509536176919937,0.013821152970194817,0.0304449163377285,0.027988240122795105,0.004477949347347021,0.008161792531609535,0.007247339002788067,0.0671040415763855,0.02166822738945484,-0.03066953271627426,-0.0023268701042979956,-0.0016701804706826806,0.012080718763172626,-0.02479476109147072,-0.04337841644883156,-0.01676000840961933,0.02913612872362137,0.004865085240453482,-0.02960261143743992,-0.014431692659854889,-0.0006295533385127783,0.025696715340018272,-0.0075662946328520775,-0.06026756763458252,0.0005233290139585733,0.023140914738178253,0.03303796797990799,0.009712113067507744,0.017274048179388046,-0.05418255180120468,0.047416798770427704,-0.018884185701608658,0.00983272772282362,-0.006432348862290382,0.033409759402275085,0.00566505454480648,0.0319732129573822,0.018235674127936363,0.0569346658885479,-0.032535091042518616,-0.005352635867893696,0.057237304747104645,0.02880067005753517,0.031802840530872345,0.02308688312768936,0.03728397935628891,-0.011725249700248241,0.032958947122097015,-0.00938505120575428,-0.029544496908783913,-0.0034875560086220503,-0.029324719682335854,0.028729934245347977,0.02277107909321785,-0.05249837413430214,-0.06279120594263077,0.0019229116151109338,0.06435347348451614,-0.006251789163798094,-0.04618865251541138,0.02356097288429737,0.0345086045563221,-0.007044667843729258,-0.01303972490131855,-0.031115198507905006,0.004706611856818199,-0.0958855077624321,-0.0033045569434762,0.021432142704725266,0.02662629261612892,-0.031630951911211014,-0.06389255821704865,0.009314439259469509,-0.02897178940474987,0.06249461695551872,0.028066091239452362,-0.021908562630414963,0.048394881188869476,0.019749855622649193,-0.04130291938781738,-0.026300884783267975,-0.04477030038833618,-0.01788732409477234,0.025938846170902252,-0.0077080740593373775,-0.018560508266091347,-0.018790794536471367,-0.015941808000206947,-0.008761834353208542,-0.05737984552979469,0.0276210755109787,0.019815893843770027,-0.020532768219709396,0.0071600256487727165,-0.03227021545171738,0.04083704948425293,-0.020127402618527412,0.016557123512029648,0.012292248196899891,0.024882672354578972,-0.0809844359755516,0.018740514293313026,-0.023791776970028877,-0.011617246083915234,-0.035139042884111404,0.0172128863632679,0.011018317192792892,-0.032080914825201035,0.01191722135990858,0.0544174388051033,0.06863114982843399,-0.011568913236260414,0.010714797303080559,2.2514582553867513e-7,-0.013212506659328938,0.038612306118011475,0.0033649441320449114,-0.026707252487540245,0.028151554986834526,-0.032203491777181625,0.03275579214096069,0.0027029893826693296,0.021122988313436508,-0.04388076066970825,0.006002139765769243,-0.013095649890601635,0.021704182028770447,0.03625977411866188,-0.04473942518234253,0.010634755715727806,-0.060595039278268814,0.007828223519027233,-0.07912193238735199,0.011492352001369,0.07022646069526672,-0.014606739394366741,0.017408711835741997,0.013177137821912766,0.03745311126112938,0.0468980073928833,-0.003954828716814518,0.0068776560947299,0.044734202325344086,-0.00954701378941536,0.059320949018001556,-0.024715187028050423,-0.0135783851146698,0.07073047012090683,0.007321098819375038,-0.0015639333287253976,-0.04046542942523956,0.004200716502964497,0.05610235780477524,0.03244733437895775,0.044096097350120544,-0.009778264909982681,-0.02044440619647503,-0.017841093242168427,-0.0035323502961546183,-0.09175949543714523,0.026942403987050056,0.002038937993347645,-0.026952238753437996,-0.03884507715702057,-0.017950601875782013,0.0005289992550387979,0.04211624339222908,-0.012490908615291119,0.0015942435711622238,0.0062677329406142235,-0.0372730977833271,0.02741144970059395,0.009787056595087051,0.02066260203719139,-0.0256221741437912,-0.06609415262937546,0.006818730384111404,0.028507398441433907,0.03838175907731056,-0.0445062518119812,-0.01919197291135788,3.332136413311254e-34,-0.017688095569610596,0.04457651078701019,0.0030527657363563776,0.01703396812081337,-0.017254944890737534,-0.014809169806540012,-0.03313108906149864,-0.012274493463337421,0.03937183693051338,-0.09719649702310562,-0.01646299660205841]'
SET
  @TechnicalDesignVector_1283227f = N'[-0.025229381397366524,-0.024553490802645683,-0.026998937129974365,-0.05494336038827896,0.0016450077528133988,-0.028412293642759323,0.02636510506272316,0.0794660747051239,-0.071292445063591,-0.03411727771162987,0.01420179195702076,-0.01153256744146347,0.04404459893703461,0.08518620580434799,0.0054608602076768875,-0.06778869777917862,-0.0004385033680591732,0.023520061746239662,0.01037469319999218,0.0038517597131431103,0.07656364142894745,0.010537508875131607,-0.018513549119234085,0.0077146803960204124,0.0073886653408408165,-0.015442794188857079,-0.004265558440238237,0.00826320517808199,0.07790633291006088,-0.05074984207749367,-0.03149031102657318,0.059462521225214005,-0.017686590552330017,-0.037274714559316635,0.0000013398531564234872,-0.06047452613711357,-0.03638887777924538,0.029180312529206276,-0.03844870254397392,-0.024499788880348206,0.023073652759194374,0.017143601551651955,0.011293403804302216,0.027661647647619247,0.015753373503684998,-0.08586600422859192,0.024354340508580208,0.02561960555613041,0.0811217799782753,-0.014676030725240707,0.01652349904179573,0.011867541819810867,0.03705044463276863,0.023795608431100845,-0.006637196522206068,0.05141857638955116,-0.00929037295281887,-0.05702158063650131,0.022233473137021065,0.006509524770081043,0.009396756999194622,-0.03183567151427269,0.02323102205991745,-0.029654406011104584,-0.0135270357131958,0.05677398666739464,0.0869797021150589,0.05393927916884422,-0.029957976192235947,0.04420829564332962,0.06463375687599182,0.042591556906700134,-0.003295866772532463,-0.038848888128995895,-0.06167244538664818,-0.018997985869646072,-0.01608431339263916,0.03017183393239975,-0.06098561733961105,-0.0029997671954333782,0.04755833372473717,0.006293743383139372,-0.06446937471628189,-0.030007075518369675,0.025215134024620056,0.03169397637248039,0.02623572200536728,-0.031565044075250626,-0.046993106603622437,-0.02780933491885662,0.037450965493917465,-0.029881514608860016,0.03381110355257988,0.015425417572259903,-0.06116635352373123,0.01781691424548626,0.032946787774562836,-0.16563944518566132,0.0663403794169426,0.03566667065024376,0.13783466815948486,0.08175662159919739,-0.058931827545166016,0.016269944608211517,0.029327785596251488,0.11391349881887436,-0.000431006628787145,-0.03879965469241142,-0.023627696558833122,0.01415775716304779,0.008499056100845337,-0.020666634663939476,0.006064224988222122,0.036452874541282654,-0.038345351815223694,0.03128795325756073,-0.042488228529691696,-0.028229016810655594,-0.02378961630165577,0.041113439947366714,0.04066793993115425,-0.04434018209576607,-0.04611102491617203,-0.009839262813329697,-0.008196824230253696,0.009104503318667412,-0.018654819577932358,-0.07894492894411087,-0.0037716790102422237,-0.01618533581495285,0.013292372226715088,-0.00842453632503748,0.037225257605314255,0.0016406439244747162,-0.05317484959959984,-0.011892675422132015,-0.0040581803768873215,0.01464023906737566,0.012183708138763905,-0.018482081592082977,0.002908562310039997,0.05171273648738861,-0.0025214117486029863,-0.0046400041319429874,0.007321937475353479,0.018622849136590958,-0.00012363346468191594,-0.023092133924365044,0.018360476940870285,0.05638548731803894,0.030651880428195,0.012012267485260963,-0.027982614934444427,-0.028968146070837975,-0.04374904930591583,0.0018303422257304192,0.05406297370791435,-0.03192118555307388,-0.04300990328192711,-0.02591807022690773,-0.008274847641587257,0.027580756694078445,0.07895057648420334,0.04091985151171684,-0.03736106678843498,-0.007211930584162474,-0.11217351257801056,-0.010962458327412605,0.017066795378923416,-0.0009306096471846104,0.02764999493956566,-0.006880962755531073,-0.007998834364116192,0.017596952617168427,0.001132313976995647,-0.007626032456755638,-0.031113578006625175,0.026197858154773712,-0.010358069092035294,0.05786861106753349,0.016622522845864296,-0.034776099026203156,0.026761744171380997,0.013376956805586815,0.002754566492512822,0.00019228635937906802,-0.03437802195549011,0.03401954472064972,0.0050536999478936195,0.01900722272694111,-0.0028611698653548956,-0.005422010086476803,-0.04676298424601555,0.007747040130198002,0.016125807538628578,-0.018934674561023712,-0.051413994282484055,0.03374410793185234,0.06783616542816162,-0.006202711258083582,0.01055699959397316,-0.009505003690719604,0.02456163801252842,0.06342025101184845,0.021681150421500206,-0.03411734849214554,-0.0009813136421144009,-0.013593753799796104,0.010928281582891941,0.02610143832862377,-0.006468313280493021,0.005751691292971373,-0.01798500306904316,-0.00896442774683237,-0.01560820359736681,-0.03307094797492027,0.009653277695178986,0.035650499165058136,-0.08152381330728531,-0.04045145958662033,-0.0026823964435607195,0.03633540868759155,0.041510455310344696,0.019274940714240074,0.13753142952919006,-0.0050389934331178665,-0.004044953268021345,-0.0009115132270380855,0.018243608996272087,0.015125926584005356,-0.01874651573598385,0.0005758063634857535,-0.015393977053463459,-0.01601633056998253,0.013640361838042736,0.005383829120546579,-0.03745819628238678,-0.033740460872650146,-0.019447773694992065,0.03229343518614769,-0.02852630615234375,-0.0015668704872950912,-0.03216522932052612,-0.004096520598977804,-0.06652871519327164,-0.053331244736909866,-0.04956599324941635,0.017623012885451317,-0.0049529834650456905,0.023443149402737617,0.016876641660928726,-0.026315104216337204,0.06076009199023247,-0.026358872652053833,0.04126882925629616,0.02329694665968418,0.02828262746334076,-0.024342546239495277,-0.05453765019774437,0.012696840800344944,-0.01879114657640457,-0.0003378826368134469,0.0016529769636690617,0.007382995914667845,0.026592589914798737,-0.005041162949055433,0.04092713072896004,-0.05952007323503494,-0.03723474591970444,0.007056003902107477,0.010948147624731064,0.024506166577339172,0.007870467379689217,-0.01596773788332939,-0.001672686543315649,-0.021507764235138893,-0.041660722345113754,0.023566585034132004,0.012614540755748749,-0.004003454465419054,-0.004365411587059498,-0.06528642773628235,0.0013439370086416602,0.006175028160214424,-0.04601655900478363,0.014822466298937798,-0.0021627291571348906,-0.009247093461453915,-0.04753263667225838,-0.029649486765265465,0.011371401138603687,0.007402239833027124,0.004508758895099163,0.005362385418266058,-0.0052923220209777355,0.00492582144215703,0.11565481126308441,0.015475562773644924,0.0036746615078300238,-0.003872836008667946,-0.015276945196092129,-0.011494699865579605,-0.04142773896455765,0.001720501109957695,-0.03416500985622406,0.05076128989458084,0.02134023606777191,-0.0151895172894001,0.046909723430871964,0.03498496115207672,0.01759509928524494,0.02688993513584137,-0.011882311664521694,0.009551389142870903,0.0028204675763845444,0.0626610741019249,-0.01915704272687435,0.008715217933058739,-0.04287811368703842,0.039366379380226135,0.0038687163032591343,-0.03747660666704178,0.03338976204395294,-0.031002385541796684,-0.010375705547630787,0.015811029821634293,0.027326975017786026,-0.025981010869145393,-0.03588614985346794,0.029654663056135178,0.010658029466867447,-0.01718287356197834,0.0008309516706503928,0.012749187648296356,0.06439627707004547,0.023672066628932953,-0.024425482377409935,0.004053134936839342,-0.013551564887166023,-0.04015784338116646,-0.02249002829194069,-0.05623609945178032,-0.006124784238636494,0.01184610091149807,0.03664455935359001,-0.022303590551018715,-0.020197128877043724,0.03793534263968468,-0.03092072531580925,0.018597502261400223,0.037757936865091324,0.04933089017868042,0.007746689487248659,-0.01219987589865923,-0.01290079578757286,0.04447050392627716,-0.0325704962015152,-0.020365776494145393,-0.0084465891122818,-0.035750001668930054,0.00518814055249095,0.04073323681950569,0.1012573391199112,0.021867381408810616,0.027594689279794693,0.019821632653474808,0.04996747523546219,-0.016752060502767563,-0.010312775149941444,0.04823065176606178,-0.036094315350055695,-0.009199054911732674,0.019433381035923958,0.05323838070034981,0.00992040615528822,-0.02714298479259014,0.012874865904450417,-0.025060467422008514,-0.055837247520685196,0.006691810209304094,0.057110320776700974,-0.01632852852344513,0.10700415819883347,0.00960058718919754,0.04236803203821182,-0.02094889245927334,-0.01738772541284561,-0.009441775269806385,-0.00006778612441848963,-0.01516939327120781,-0.0343402624130249,-0.006908542010933161,-0.03597339242696762,0.005266869440674782,0.04080324247479439,0.07227693498134613,-0.04225461557507515,0.00510735297575593,0.057257141917943954,0.0015188533579930663,-0.015583147294819355,0.02656569518148899,0.023530643433332443,0.003553940448909998,-0.003021430689841509,-0.014840968884527683,0.029148241505026817,0.0198484119027853,-0.013911017216742039,-0.017688943073153496,-0.07420587539672852,-0.06939633190631866,-0.026309728622436523,-0.0552479512989521,-0.096931092441082,-0.00414276123046875,-0.0036666220985352993,-0.0606832355260849,0.04303744062781334,0.06241094321012497,-0.05781780183315277,0.006778503302484751,0.017035679891705513,-0.0022639217786490917,0.06103349104523659,-0.02302045002579689,-0.016995780169963837,-0.021138178184628487,-0.011717023327946663,-0.005308490712195635,-0.016635708510875702,-0.0035922639071941376,-0.02660446986556053,0.05923349782824516,0.03412362560629845,-0.03261549398303032,-0.045086171478033066,0.009492114186286926,0.03172517567873001,-0.03375231847167015,0.04944222420454025,-0.005205084569752216,0.07442189753055573,-0.007090955972671509,-0.03916638717055321,-0.031711332499980927,-0.025329558178782463,0.055394601076841354,0.02992759458720684,-0.03497462347149849,0.035872265696525574,-0.037630192935466766,-0.02655991166830063,0.010108492337167263,-0.02138798125088215,-0.0680297389626503,-0.046002909541130066,0.04562155902385712,-0.005688015837222338,0.038965854793787,0.005971717182546854,0.0198396984487772,-0.0036052470095455647,0.00564220454543829,-0.015980742871761322,-0.00442212400957942,0.037891995161771774,-0.030864689499139786,-0.007101076655089855,-0.05242917686700821,0.005461402237415314,-0.015981994569301605,-0.0381653867661953,-0.034797847270965576,0.0394803062081337,0.013033979572355747,0.0002277549501741305,0.05524018779397011,-0.07207712531089783,0.03499256819486618,0.05507193133234978,0.07067616283893585,-0.019231297075748444,-0.013757571578025818,-0.00521943811327219,-0.005290020722895861,0.003997483756393194,-0.0068102674558758736,-0.004878181964159012,-0.01007047202438116,-0.0353090763092041,-0.018088381737470627,-0.012370061129331589,0.06674505770206451,0.06048702448606491,0.05219963192939758,-0.08952666074037552,0.02537441998720169,-0.05439087003469467,-0.028255224227905273,0.005328424274921417,-0.05516998469829559,-0.016971876844763756,-0.017822302877902985,-0.003531348891556263,0.005454849451780319,-0.002697395160794258,0.07716067135334015,-0.008798045106232166,-0.024506740272045135,0.002280930755659938,0.02131620980799198,0.00527364294975996,-0.040118832141160965,-0.03901444748044014,0.056305937469005585,-0.031096618622541428,0.03389182314276695,-0.03035978227853775,-0.05171630531549454,0.021116042509675026,0.00281690526753664,0.010499406605958939,0.020356658846139908,0.043240610510110855,0.07091354578733444,0.0476389080286026,0.030958013609051704,-0.015231406316161156,0.024214502424001694,-0.008076840080320835,0.03223011642694473,0.008832988329231739,-0.020071273669600487,-0.022950507700443268,0.05010633543133736,-0.02032366581261158,0.06730415672063828,0.022564876824617386,-0.04835685342550278,-0.06439990550279617,0.057383906096220016,0.06309956312179565,0.022919779643416405,-0.011997812427580357,-0.012754571624100208,0.02901414781808853,-0.040847960859537125,-0.018190594390034676,-0.011045991443097591,0.02359139733016491,0.024364523589611053,-0.0031239658128470182,-0.015073074027895927,0.013643370941281319,-5.2781937138026964e-33,-0.056338489055633545,-0.004816878121346235,-0.031871430575847626,0.056820034980773926,0.007463808637112379,0.002282726811245084,-0.010159896686673164,-0.052168797701597214,0.03889094293117523,-0.026168210431933403,0.007963288575410843,-0.08251495659351349,0.016083577647805214,0.005967617500573397,-0.05042221397161484,-0.004453475587069988,0.045682139694690704,0.028942173346877098,-0.02531576342880726,0.02103453502058983,-0.02457559108734131,0.014573388732969761,0.06993450969457626,-0.0424950048327446,-0.031010137870907784,0.002890540286898613,0.02499062567949295,0.01666504144668579,-0.038483161479234695,0.02321799285709858,0.011377080343663692,0.04008374735713005,-0.02647978998720646,-0.0764017328619957,-0.024432972073554993,0.0584375225007534,-0.051355525851249695,-0.04790002107620239,0.015288546681404114,-0.01719069294631481,0.010596697218716145,-0.004242224618792534,-0.014959932304918766,-0.008777907118201256,0.02171388454735279,0.0292710792273283,0.01647157408297062,-0.006675635930150747,0.0005450132302939892,-0.04940896853804588,-0.010341153480112553,0.009867027401924133,-0.008008117787539959,0.05035741254687309,-0.026934288442134857,0.04063643142580986,0.06393887847661972,0.02552715688943863,-0.050911903381347656,-0.024261359125375748,-0.012633430771529675,-0.006041713524609804,0.025005530565977097,0.04165981337428093,0.013811270706355572,0.003339652204886079,0.07459086924791336,-0.0018800682155415416,-0.0735919177532196,-0.0012231497094035149,0.0058461385779082775,-0.05658626928925514,0.06456150114536285,-0.010435283184051514,-0.012316773645579815,0.023671887814998627,0.0007473238511011004,0.0185931958258152,0.019272183999419212,0.04995960742235184,0.06437226384878159,0.027580680325627327,-0.01076301746070385,-0.017756309360265732,-0.04114453122019768,-0.030277332291007042,0.014265443198382854,0.034782830625772476,-0.0021726565901190042,-0.019664473831653595,-0.04238137602806091,-0.004215036053210497,-0.011994131840765476,0.06951223313808441,-0.049406085163354874,-0.022193338721990585,0.04572340101003647,0.04272906482219696,-0.04364924877882004,-0.027882883325219154,-0.02677871286869049,-0.026140792295336723,-0.011782580055296421,-0.01494643185287714,0.0002392558235442266,0.00020665368356276304,-0.026834463700652122,-0.010387794114649296,-0.08596646785736084,0.04518332704901695,0.017566874623298645,0.029447611421346664,-0.017439238727092743,-0.0023473447654396296,0.042533211410045624,-0.022269047796726227,-0.004938273690640926,0.0058664726093411446,0.015738215297460556,-0.06162819638848305,-0.02121480368077755,0.01394014060497284,0.030300693586468697,0.013046612031757832,0.001449615228921175,-0.00033579824957996607,-0.012089922092854977,-0.05037012696266174,0.026117177680134773,0.01840546354651451,-0.006422908045351505,0.040853243321180344,2.1976745756546734e-7,0.006316007114946842,0.0261367317289114,0.007885534316301346,0.0015959602314978838,0.03495636582374573,0.004153511952608824,0.031827595084905624,-0.010186857543885708,-0.0034849951043725014,-0.07263556867837906,-0.003617793321609497,-0.023633675649762154,0.016236845403909683,0.06377393007278442,-0.0028315403033047915,-0.002854730701074004,-0.09083568304777145,-0.02341223880648613,-0.07194315642118454,0.029396861791610718,0.07558456063270569,0.0090132812038064,0.03338661789894104,0.005473389755934477,0.04519708454608917,0.05972903594374657,0.0064567080698907375,-0.009090693667531013,0.04061221703886986,-0.021017717197537422,0.009368827566504478,-0.05633563548326492,-0.016340767964720726,0.04810330271720886,0.03281378000974655,0.006161059252917767,0.003166930517181754,0.037685275077819824,0.05209065601229668,0.10681851953268051,0.06485927104949951,0.007639020215719938,-0.017538737505674362,-0.06237673759460449,0.02114086225628853,-0.03283434361219406,-0.004697869997471571,-0.03728059306740761,-0.03732897713780403,-0.015713969245553017,-0.006999890320003033,0.008558269590139389,-0.0190923772752285,-0.000491326383780688,-0.00982245896011591,-0.03412219136953354,-0.03670797497034073,0.0021638034377247095,-0.058114465326070786,-0.016209209337830544,-0.03346770256757736,-0.02860509231686592,-0.04639091715216637,0.02670099213719368,-0.008855555206537247,-0.06942418217658997,-0.037767112255096436,3.1776714046609167e-34,-0.012598773464560509,-0.0366918183863163,-0.019118940457701683,0.04335504025220871,0.009387214668095112,0.013939492404460907,-0.011851893737912178,0.019064730033278465,-0.004306364804506302,-0.061065424233675,-0.03391743451356888]'
SET
  @HasCustomProps_1283227f = 0
SET
  @HasCustomEvents_1283227f = 0
SET
  @RequiresData_1283227f = 0
SET
  @DependencyCount_1283227f = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_1283227f = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_1283227f = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_1283227f = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_1283227f,
  @Namespace = @Namespace_1283227f,
  @Name = @Name_1283227f,
  @Version = @Version_1283227f,
  @VersionSequence = @VersionSequence_1283227f,
  @Title = @Title_1283227f,
  @Description = @Description_1283227f,
  @Type = @Type_1283227f,
  @Status = @Status_1283227f,
  @DeveloperName = @DeveloperName_1283227f,
  @DeveloperEmail = @DeveloperEmail_1283227f,
  @DeveloperOrganization = @DeveloperOrganization_1283227f,
  @SourceRegistryID = @SourceRegistryID_1283227f,
  @ReplicatedAt = @ReplicatedAt_1283227f,
  @LastSyncedAt = @LastSyncedAt_1283227f,
  @Specification = @Specification_1283227f,
  @FunctionalRequirements = @FunctionalRequirements_1283227f,
  @TechnicalDesign = @TechnicalDesign_1283227f,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_1283227f,
  @TechnicalDesignVector = @TechnicalDesignVector_1283227f,
  @HasCustomProps = @HasCustomProps_1283227f,
  @HasCustomEvents = @HasCustomEvents_1283227f,
  @RequiresData = @RequiresData_1283227f,
  @DependencyCount = @DependencyCount_1283227f,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_1283227f,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_1283227f,
  @HasRequiredCustomProps = @HasRequiredCustomProps_1283227f;

-- Save MJ: Components (core SP call only)
DECLARE @ID_8f81fda4 UNIQUEIDENTIFIER,
@Namespace_8f81fda4 NVARCHAR(MAX),
@Name_8f81fda4 NVARCHAR(500),
@Version_8f81fda4 NVARCHAR(50),
@VersionSequence_8f81fda4 INT,
@Title_8f81fda4 NVARCHAR(1000),
@Description_8f81fda4 NVARCHAR(MAX),
@Type_8f81fda4 NVARCHAR(255),
@Status_8f81fda4 NVARCHAR(50),
@DeveloperName_8f81fda4 NVARCHAR(255),
@DeveloperEmail_8f81fda4 NVARCHAR(255),
@DeveloperOrganization_8f81fda4 NVARCHAR(255),
@SourceRegistryID_8f81fda4 UNIQUEIDENTIFIER,
@ReplicatedAt_8f81fda4 DATETIMEOFFSET,
@LastSyncedAt_8f81fda4 DATETIMEOFFSET,
@Specification_8f81fda4 NVARCHAR(MAX),
@FunctionalRequirements_8f81fda4 NVARCHAR(MAX),
@TechnicalDesign_8f81fda4 NVARCHAR(MAX),
@FunctionalRequirementsVector_8f81fda4 NVARCHAR(MAX),
@TechnicalDesignVector_8f81fda4 NVARCHAR(MAX),
@HasCustomProps_8f81fda4 BIT,
@HasCustomEvents_8f81fda4 BIT,
@RequiresData_8f81fda4 BIT,
@DependencyCount_8f81fda4 INT,
@TechnicalDesignVectorEmbeddingModelID_8f81fda4 NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_8f81fda4 NVARCHAR(MAX),
@HasRequiredCustomProps_8f81fda4 BIT
SET
  @ID_8f81fda4 = '5a7544ec-42d7-46f2-898a-d7a39601ec50'
SET
  @Namespace_8f81fda4 = N'AI/Analytics'
SET
  @Name_8f81fda4 = N'AIPromptsClusterControls'
SET
  @Version_8f81fda4 = N'1.0.0'
SET
  @VersionSequence_8f81fda4 = 1
SET
  @Title_8f81fda4 = N'AI Prompts Cluster Controls'
SET
  @Description_8f81fda4 = N'Control panel for filtering, searching, and adjusting clustering parameters'
SET
  @Type_8f81fda4 = N'Other'
SET
  @Status_8f81fda4 = N'Published'
SET
  @Specification_8f81fda4 = N'{"name":"AIPromptsClusterControls","title":"AI Prompts Cluster Controls","description":"Control panel for filtering, searching, and adjusting clustering parameters","type":"panel","location":"embedded","code":"function AIPromptsClusterControls({\n  categories,\n  types,\n  currentFilters,\n  clusterCount,\n  similarityThreshold,\n  isProcessing,\n  onSearchChange,\n  onFilterChange,\n  onClusterCountChange,\n  onSimilarityThresholdChange,\n  onRecalculate,\n  onExport,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  const [localSearch, setLocalSearch] = useState(currentFilters.search || '''');\n  const searchTimeout = useRef(null);\n\n  // Debounce search input\n  const handleSearchChange = (value) => {\n    setLocalSearch(value);\n    \n    if (searchTimeout.current) {\n      clearTimeout(searchTimeout.current);\n    }\n    \n    searchTimeout.current = setTimeout(() => {\n      onSearchChange(value);\n    }, 300);\n  };\n\n  // Modern style helpers\n  const inputStyle = {\n    width: ''100%'',\n    padding: ''10px 12px'',\n    fontSize: ''14px'',\n    border: ''2px solid transparent'',\n    borderRadius: ''10px'',\n    backgroundColor: ''rgba(255, 255, 255, 0.9)'',\n    backdropFilter: ''blur(10px)'',\n    transition: ''all 0.3s ease'',\n    outline: ''none'',\n    color: ''#2d3748''\n  };\n\n  const labelStyle = {\n    display: ''block'',\n    marginBottom: ''6px'',\n    fontSize: ''13px'',\n    fontWeight: ''600'',\n    color: ''#4a5568'',\n    letterSpacing: ''0.025em'',\n    textTransform: ''uppercase''\n  };\n\n  const sectionStyle = {\n    marginBottom: ''20px'',\n    padding: ''16px'',\n    background: ''linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(249,250,251,0.95) 100%)'',\n    borderRadius: ''16px'',\n    boxShadow: ''0 4px 12px rgba(0,0,0,0.05)'',\n    backdropFilter: ''blur(10px)'',\n    border: ''1px solid rgba(255,255,255,0.8)''\n  };\n\n  const buttonStyle = {\n    width: ''100%'',\n    padding: ''12px 16px'',\n    fontSize: ''14px'',\n    fontWeight: ''600'',\n    border: ''none'',\n    borderRadius: ''12px'',\n    cursor: isProcessing ? ''not-allowed'' : ''pointer'',\n    transition: ''all 0.3s ease'',\n    background: ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n    color: ''white'',\n    boxShadow: ''0 4px 12px rgba(102, 126, 234, 0.3)''\n  };\n\n  return (\n    <div style={{ height: ''100%'', overflowY: ''auto'' }}>\n      {/* Search */}\n      <div style={sectionStyle}>\n        <label style={labelStyle}>\n          <i className=\"fa-solid fa-magnifying-glass\" style={{ marginRight: ''6px'' }}></i>\n          Search\n        </label>\n        <div style={{ position: ''relative'' }}>\n          <input\n            type=\"text\"\n            value={localSearch}\n            onChange={(e) => handleSearchChange(e.target.value)}\n            placeholder=\"Search prompts...\"\n            style={{\n              ...inputStyle,\n              paddingLeft: ''40px''\n            }}\n            onFocus={(e) => {\n              e.target.style.borderColor = ''#667eea'';\n              e.target.style.boxShadow = ''0 0 0 3px rgba(102, 126, 234, 0.1)'';\n            }}\n            onBlur={(e) => {\n              e.target.style.borderColor = ''transparent'';\n              e.target.style.boxShadow = ''none'';\n            }}\n            disabled={isProcessing}\n          />\n          <i className=\"fa-solid fa-magnifying-glass\" style={{\n            position: ''absolute'',\n            left: ''14px'',\n            top: ''50%'',\n            transform: ''translateY(-50%)'',\n            color: ''#a0aec0'',\n            fontSize: ''14px''\n          }}></i>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div style={sectionStyle}>\n        <h4 style={{\n          margin: ''0 0 16px 0'',\n          fontSize: ''15px'',\n          fontWeight: ''600'',\n          color: ''#2d3748'',\n          display: ''flex'',\n          alignItems: ''center''\n        }}>\n          <i className=\"fa-solid fa-filter\" style={{ marginRight: ''8px'', color: ''#667eea'' }}></i>\n          Filters\n        </h4>\n\n        {/* Category filter */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={labelStyle}>Category</label>\n          <select\n            value={currentFilters.category || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              category: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map(cat => (\n              <option key={cat.id} value={cat.id}>{cat.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Type filter */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={labelStyle}>Type</label>\n          <select\n            value={currentFilters.type || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              type: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Types</option>\n            {types.map(type => (\n              <option key={type.id} value={type.id}>{type.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Status filter */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={labelStyle}>Status</label>\n          <select\n            value={currentFilters.status || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              status: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Pending\">Pending</option>\n            <option value=\"Disabled\">Disabled</option>\n          </select>\n        </div>\n\n        {/* Role filter */}\n        <div>\n          <label style={labelStyle}>Prompt Role</label>\n          <select\n            value={currentFilters.role || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              role: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Roles</option>\n            <option value=\"System\">System</option>\n            <option value=\"User\">User</option>\n            <option value=\"Assistant\">Assistant</option>\n            <option value=\"SystemOrUser\">System or User</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Clustering Parameters */}\n      <div style={sectionStyle}>\n        <h4 style={{\n          margin: ''0 0 16px 0'',\n          fontSize: ''15px'',\n          fontWeight: ''600'',\n          color: ''#2d3748'',\n          display: ''flex'',\n          alignItems: ''center''\n        }}>\n          <i className=\"fa-solid fa-diagram-project\" style={{ marginRight: ''8px'', color: ''#667eea'' }}></i>\n          Clustering\n        </h4>\n\n        {/* Number of clusters */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={{...labelStyle, display: ''flex'', justifyContent: ''space-between'', marginBottom: ''10px''}}>\n            <span>Clusters</span>\n            <span style={{\n              background: ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n              color: ''white'',\n              padding: ''2px 8px'',\n              borderRadius: ''6px'',\n              fontSize: ''12px'',\n              fontWeight: ''600''\n            }}>{clusterCount}</span>\n          </label>\n          <input\n            type=\"range\"\n            min=\"2\"\n            max=\"15\"\n            value={clusterCount}\n            onChange={(e) => onClusterCountChange(parseInt(e.target.value))}\n            style={{ width: ''100%'' }}\n            disabled={isProcessing}\n          />\n          <div style={{\n            display: ''flex'',\n            justifyContent: ''space-between'',\n            fontSize: styles.fonts?.sizes?.xs || ''10px'',\n            color: styles.colors?.text?.secondary || ''#666''\n          }}>\n            <span>2</span>\n            <span>15</span>\n          </div>\n        </div>\n\n        {/* Similarity threshold */}\n        <div>\n          <label style={{...labelStyle, display: ''flex'', justifyContent: ''space-between'', marginBottom: ''10px''}}>\n            <span>Similarity</span>\n            <span style={{\n              background: ''linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'',\n              color: ''white'',\n              padding: ''2px 8px'',\n              borderRadius: ''6px'',\n              fontSize: ''12px'',\n              fontWeight: ''600''\n            }}>{(similarityThreshold * 100).toFixed(0)}%</span>\n          </label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={similarityThreshold * 100}\n            onChange={(e) => onSimilarityThresholdChange(parseInt(e.target.value) / 100)}\n            style={{ width: ''100%'' }}\n            disabled={isProcessing}\n          />\n          <div style={{\n            display: ''flex'',\n            justifyContent: ''space-between'',\n            fontSize: styles.fonts?.sizes?.xs || ''10px'',\n            color: styles.colors?.text?.secondary || ''#666''\n          }}>\n            <span>0%</span>\n            <span>100%</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Actions */}\n      <div style={sectionStyle}>\n        <button\n          onClick={onRecalculate}\n          disabled={isProcessing}\n          style={{\n            ...buttonStyle,\n            opacity: isProcessing ? 0.6 : 1,\n            marginBottom: ''12px''\n          }}\n          onMouseEnter={e => !isProcessing && (e.currentTarget.style.transform = ''translateY(-2px)'')}\n          onMouseLeave={e => e.currentTarget.style.transform = ''translateY(0)''}\n        >\n          {isProcessing ? (\n            <>\n              <i className=\"fa-solid fa-spinner fa-spin\" style={{ marginRight: ''8px'' }}></i>\n              Processing...\n            </>\n          ) : (\n            <>\n              <i className=\"fa-solid fa-wand-magic-sparkles\" style={{ marginRight: ''8px'' }}></i>\n              Generate Clusters\n            </>\n          )}\n        </button>\n\n        <button\n          onClick={onExport}\n          disabled={isProcessing}\n          style={{\n            ...buttonStyle,\n            background: ''linear-gradient(135deg, #ffffff 0%, #f9fafb 100%)'',\n            color: ''#4a5568'',\n            border: ''2px solid #e2e8f0'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.05)''\n          }}\n          onMouseEnter={e => !isProcessing && (e.currentTarget.style.transform = ''translateY(-2px)'')}\n          onMouseLeave={e => e.currentTarget.style.transform = ''translateY(0)''}\n        >\n          <i className=\"fa-solid fa-download\" style={{ marginRight: ''8px'' }}></i>\n          Export CSV\n        </button>\n      </div>\n\n      {/* Statistics */}\n      <div style={{\n        ...sectionStyle,\n        fontSize: styles.fonts?.sizes?.xs || ''12px'',\n        color: styles.colors?.text?.secondary || ''#666''\n      }}>\n        <h4 style={{\n          margin: `0 0 $' + '{styles.spacing?.xs || ''4px''} 0`,\n          fontSize: styles.fonts?.sizes?.sm || ''14px'',\n          color: styles.colors?.text?.primary || ''#333''\n        }}>\n          Statistics\n        </h4>\n        <div>Categories: {categories.length}</div>\n        <div>Types: {types.length}</div>\n        <div>Active Filters: {\n          Object.values(currentFilters).filter(v => v).length\n        }</div>\n      </div>\n    </div>\n  );\n}","functionalRequirements":"Provide search input for finding prompts, filter by category/type/status, adjust clustering parameters, control similarity threshold, toggle view options, export cluster assignments","technicalDesign":"React component with controlled inputs for various filters and parameters, emits change events to parent component for re-clustering or re-filtering","properties":[{"name":"categories","type":"array","required":true,"description":"Available prompt categories for filtering"},{"name":"types","type":"array","required":true,"description":"Available prompt types for filtering"},{"name":"currentFilters","type":"object","required":true,"description":"Current filter state"},{"name":"clusterCount","type":"number","required":true,"description":"Number of clusters to generate"},{"name":"similarityThreshold","type":"number","required":true,"description":"Current similarity threshold"},{"name":"isProcessing","type":"boolean","required":true,"description":"Whether embeddings are being generated"}],"events":[{"name":"onSearchChange","description":"Fired when search text changes","parameters":[{"name":"searchText","type":"string","description":"The search query"}]},{"name":"onFilterChange","description":"Fired when filters are updated","parameters":[{"name":"filters","type":"object","description":"Updated filter object"}]},{"name":"onClusterCountChange","description":"Fired when cluster count is adjusted","parameters":[{"name":"count","type":"number","description":"New cluster count"}]},{"name":"onSimilarityThresholdChange","description":"Fired when similarity threshold changes","parameters":[{"name":"threshold","type":"number","description":"New threshold value"}]},{"name":"onRecalculate","description":"Fired when user requests recalculation","parameters":[]},{"name":"onExport","description":"Fired when user wants to export clusters","parameters":[]}],"libraries":[],"usageExample":"<AIPromptsClusterControls categories={categories} onFilterChange={handleFilterChange} />","version":"1.0.0"}'
SET
  @FunctionalRequirements_8f81fda4 = N'Provide search input for finding prompts, filter by category/type/status, adjust clustering parameters, control similarity threshold, toggle view options, export cluster assignments'
SET
  @TechnicalDesign_8f81fda4 = N'React component with controlled inputs for various filters and parameters, emits change events to parent component for re-clustering or re-filtering'
SET
  @FunctionalRequirementsVector_8f81fda4 = N'[-0.017989158630371094,-0.03753228113055229,-0.040566980838775635,-0.05713481456041336,0.010388575494289398,-0.0025989660061895847,0.04985399916768074,0.0312526673078537,0.025374403223395348,0.02160102315247059,-0.026677440851926804,0.05980730429291725,-0.03560269623994827,0.08757646381855011,-0.031884100288152695,-0.07654009014368057,0.03425907343626022,-0.02430662326514721,0.007864277809858322,-0.031041864305734634,-0.01367310993373394,-0.015294511802494526,-0.030110996216535568,-0.021089958027005196,-0.007019220385700464,-0.003654054831713438,-0.04971952736377716,0.004926116671413183,0.04415160417556763,-0.046638116240501404,-0.031504712998867035,0.05409790948033333,-0.03553733974695206,0.0004559973021969199,0.0000015667811794628506,-0.05673611909151077,-0.037403713911771774,0.00013372814282774925,0.0008090187329798937,0.03119451366364956,0.07421114295721054,0.007995008490979671,0.05321487784385681,-0.024109553545713425,0.040445275604724884,-0.024016374722123146,0.03056899644434452,0.013678280636668205,0.011666561476886272,-0.025467684492468834,0.012020130641758442,0.05228567495942116,-0.012926372699439526,-0.004156998358666897,-0.02189752273261547,0.0336432047188282,0.021258797496557236,-0.039216261357069016,0.11902173608541489,0.04793894290924072,0.03236796334385872,0.023759935051202774,-0.015766121447086334,-0.04854747653007507,0.010684224776923656,0.02160237543284893,0.00489342026412487,-0.12157073616981506,0.03500421345233917,-0.012874217703938484,0.02883698046207428,-0.012282087467610836,0.026010733097791672,-0.021982770413160324,-0.02219482511281967,0.03694474697113037,-0.02948039583861828,0.0019766490440815687,-0.014627859927713871,-0.035887524485588074,0.0018224819796159863,0.02934001199901104,-0.031079450622200966,-0.051219191402196884,0.020467912778258324,0.050809986889362335,0.010344875045120716,-0.03497711569070816,-0.008569993078708649,-0.017440101131796837,0.014114095829427242,-0.006682040169835091,0.03753301873803139,0.03314672410488129,-0.12172060459852219,-0.04564308002591133,0.04563463106751442,0.04000084847211838,0.046792201697826385,0.052450213581323624,0.01815885305404663,0.046978507190942764,0.0030471470672637224,0.046536125242710114,0.025088734924793243,-0.015984859317541122,0.01601976528763771,0.006101105362176895,-0.005101516842842102,-0.02285884879529476,-0.039031848311424255,0.003135006409138441,-0.030972177162766457,0.011730304919183254,0.003288143314421177,0.0036880732513964176,0.015192377381026745,0.038912102580070496,-0.00218789535574615,-0.01958387903869152,0.061347611248493195,-0.033630263060331345,0.0032863763626664877,0.029243946075439453,0.01847010664641857,-0.04394357278943062,-0.09005159139633179,-0.020294927060604095,-0.011018025688827038,0.003685278119519353,-0.011722919531166553,0.024973012506961823,0.06874170154333115,-0.009047958068549633,-0.0021159506868571043,-0.020082684233784676,0.022445164620876312,-0.01677696406841278,-0.08610045909881592,-0.003216173266991973,0.01989315077662468,0.01627877540886402,-0.0458790548145771,0.021167874336242676,0.01681465096771717,-0.0074974349699914455,-0.023391449823975563,0.033952947705984116,-0.033985935151576996,-0.0007392988190986216,-0.0464729405939579,0.03374790400266647,-0.006786214653402567,0.02225860208272934,0.001452297088690102,-0.027043379843235016,-0.031027695164084435,-0.017954813316464424,-0.11368519067764282,0.048644039779901505,0.03491334989666939,-0.00501590222120285,0.06434115767478943,-0.014791241846978664,-0.05092136561870575,0.02484571374952793,-0.040024563670158386,0.017695873975753784,-0.0112540228292346,0.007390247657895088,0.02895248308777809,0.0017975467490032315,0.023779045790433884,0.023986782878637314,0.001368232537060976,0.11106111109256744,0.08440113812685013,0.03993266820907593,0.032560497522354126,-0.024986296892166138,0.045927390456199646,-0.09070708602666855,-0.012544124387204647,0.020722907036542892,-0.04499311372637749,-0.03427485376596451,-0.0007498493068851531,0.015686053782701492,-0.011156664229929447,0.03246505558490753,0.003767814254388213,0.06803494691848755,-0.036243923008441925,-0.0029126321896910667,-0.004080185666680336,-0.0015471864026039839,0.052519310265779495,-0.09775424748659134,0.016251416876912117,-0.019395574927330017,0.014336873777210712,0.024311767891049385,0.060553450137376785,0.03747495263814926,0.02821124903857708,-0.0705052837729454,0.0015832261415198445,0.018395032733678818,0.00441067386418581,-0.004972384311258793,0.02558453567326069,-0.005874284077435732,-0.017671464011073112,0.01886259764432907,-0.019752969965338707,0.06252975761890411,0.01829034835100174,0.0018682911759242415,-0.0629892647266388,0.018631432205438614,-0.04808641970157623,-0.030341606587171555,-0.021997088566422462,0.005690218880772591,0.08665727823972702,0.01886047050356865,0.004223387688398361,0.017165709286928177,0.011960047297179699,-0.002954369643703103,0.007783638779073954,-0.025790106505155563,0.05983559042215347,0.009460248984396458,0.010266133584082127,0.008746875450015068,0.049351926892995834,0.022957777604460716,-0.028516555204987526,0.02665718086063862,-0.017776869237422943,-0.059267058968544006,-0.00435473769903183,0.012328817509114742,-0.019586097449064255,-0.033433958888053894,-0.014445684850215912,0.013666102662682533,0.043865397572517395,-0.052407097071409225,-0.015577325597405434,-0.007315855473279953,0.0819154903292656,-0.008343438617885113,0.010909625329077244,0.011124262586236,-0.0011490825563669205,-0.02802043966948986,-0.08597669750452042,0.058720663189888,-0.022326182574033737,-0.03362290561199188,0.010250763036310673,0.026993494480848312,0.03937297314405441,0.020154941827058792,0.020139019936323166,-0.0260588638484478,-0.022288646548986435,-0.011013942770659924,-0.01974918693304062,0.024580614641308784,0.0385514460504055,-0.01700993813574314,-0.007778183091431856,0.02754056081175804,-0.00988915003836155,-0.008168797940015793,0.017317967489361763,-0.01778116263449192,0.03801664337515831,-0.041965849697589874,-0.02431722730398178,0.015887506306171417,-0.007345661520957947,-0.011480163782835007,0.03139019012451172,-0.06228198483586311,0.016771188005805016,0.06837357580661774,0.014296346344053745,-0.0021571582183241844,0.044902101159095764,0.000715559464879334,-0.011913836933672428,-0.010671407915651798,-0.02781350165605545,0.10619162023067474,-0.0023380958009511232,0.05965857207775116,-0.024403803050518036,0.05061209574341774,0.00983851496130228,0.0184978935867548,-0.015298867598176003,0.04895133525133133,0.04631228744983673,-0.0035652529913932085,0.06451854854822159,-0.0117318881675601,0.0067071146331727505,-0.018871653825044632,-0.005396823398768902,-0.032415516674518585,0.008417407982051373,-0.02915632724761963,-0.06464207172393799,-0.018778575584292412,-0.010776522569358349,0.05153147876262665,-0.02333676815032959,-0.01895235851407051,0.02205725386738777,-0.004260757006704807,-0.01305478997528553,-0.018228529021143913,-0.0725046843290329,-0.0030910195782780647,-0.04905864968895912,0.01848866045475006,0.03759285435080528,-0.015447034500539303,-0.030667077749967575,-0.0007917761686258018,0.0318722166121006,0.029645847156643867,0.00683621596544981,-0.03074871003627777,0.01958654634654522,-0.016234247013926506,0.01022412721067667,0.02102372981607914,-0.00041540173697285354,0.011540384963154793,0.09106875211000443,0.029456278309226036,0.06732302904129028,-0.002077000215649605,-0.07301855832338333,0.01909547857940197,0.05934122949838638,0.05310773849487305,-0.009196463041007519,-0.017292987555265427,0.0013699163682758808,-0.006031885277479887,-0.04759065434336662,0.0029568751342594624,-0.0617910735309124,-0.03860463201999664,-0.03233738988637924,0.01364146824926138,-0.02260052226483822,-0.042840275913476944,0.0216992124915123,0.03300889581441879,0.01095963828265667,-0.022308610379695892,-0.01690930873155594,-0.021341390907764435,-0.008161856792867184,0.016832813620567322,0.00938695203512907,0.04269178956747055,0.016252079978585243,-0.132503479719162,-0.00722710182890296,-0.04063260927796364,-0.0037898216396570206,0.02537228912115097,0.03880409151315689,0.07806776463985443,0.07266273349523544,-0.014296956360340118,0.03777430206537247,-0.03027150221168995,-0.05868203192949295,0.04910825565457344,-0.01923801749944687,0.02390480600297451,-0.01735689491033554,-0.11937426775693893,-0.04600140079855919,-0.050370462238788605,-0.003029043786227703,-0.04221440106630325,-0.06824034452438354,0.01738549768924713,-0.024867946282029152,0.01149218250066042,0.015608182176947594,0.022398142144083977,-0.027401946485042572,0.009253425523638725,-0.013349011540412903,0.010594179853796959,-0.009605597704648972,0.042992692440748215,0.004320592153817415,0.005512968637049198,0.012411132454872131,0.01168405544012785,-0.003520816331729293,-0.04908452555537224,-0.016599301248788834,-0.01147163100540638,-0.0004073968739248812,0.015657126903533936,0.03026602603495121,0.06697198003530502,-0.023666057735681534,-0.03150260075926781,0.027276992797851562,-0.018672214820981026,0.010578104294836521,-0.02276366576552391,0.006943940185010433,0.010056247934699059,0.015079990029335022,0.053884994238615036,0.004740453325212002,0.051400888711214066,-0.015926405787467957,0.001449127565138042,0.05933137983083725,-0.0015294934855774045,-0.04363194480538368,-0.06203059107065201,0.036725595593452454,0.00424709590151906,0.02936657704412937,0.07397130131721497,0.04836893081665039,0.0011830362491309643,-0.04924093559384346,-0.018721047788858414,0.029676290228962898,-0.04365396499633789,0.041036419570446014,-0.009390919469296932,-0.021506525576114655,-0.05687156319618225,-0.017837857827544212,0.023613035678863525,0.015862278640270233,-0.016473136842250824,-0.07161487638950348,0.08467230945825577,-0.03968740999698639,0.016547320410609245,0.003979127388447523,0.026336606591939926,-0.007005977910012007,-0.05338411405682564,-0.06965889781713486,0.02787077985703945,0.019691720604896545,-0.012554324232041836,0.006283273454755545,-0.032813191413879395,0.015904193744063377,0.0066728428937494755,-0.01237424835562706,-0.0005267627420835197,0.04058701917529106,-0.04041331261396408,-0.02180144377052784,-0.05155237391591072,-0.07267694920301437,-0.012035341933369637,0.0385768823325634,0.03128531947731972,0.04799751937389374,-0.01411768514662981,-0.010138661600649357,0.0012890058569610119,0.0018435580423101783,0.015188117511570454,0.023478684946894646,0.042226336896419525,-0.010760394856333733,0.015322580933570862,0.004918122664093971,0.07352107763290405,0.012869547121226788,0.0015603252686560154,-0.021061941981315613,0.010054478421807289,0.009338470175862312,0.01015610620379448,0.005993090104311705,0.003110760822892189,-0.02613838203251362,-0.035296522080898285,0.0017640937585383654,0.05250854790210724,-0.0021044095046818256,0.017767731100320816,0.02909030020236969,0.022898806259036064,-0.02915637567639351,0.025913214311003685,-0.03180299699306488,-0.0428411103785038,-0.01873761974275112,-0.014581556431949139,-0.05318216234445572,0.01351435761898756,-0.051650892943143845,-0.05107060447335243,-0.00015026566688902676,-0.01731238141655922,0.006374541670084,-0.007442759815603495,0.05330056697130203,-0.02518593706190586,0.06251867860555649,0.015357128344476223,-0.022747104987502098,0.02450890652835369,-0.0437307134270668,-0.005446769762784243,-0.014422262087464333,-0.04092028737068176,-0.03848397359251976,0.04911433532834053,0.006145447958260775,0.0837426707148552,0.028588704764842987,-0.010923817753791809,-0.0029363909270614386,0.02433849312365055,0.02074202336370945,-0.042506713420152664,-0.0486147366464138,-0.01899852603673935,0.032535240054130554,-0.014063320122659206,0.0055201081559062,0.04610418155789375,0.0017800917848944664,-0.07020062208175659,-0.0280892476439476,0.006710589863359928,0.007478663232177496,-6.105498923729745e-33,-0.0276019349694252,-0.06524860113859177,-0.02580324560403824,-0.03535149246454239,-0.007636350579559803,-0.0722845122218132,-0.008955973200500011,-0.01627351902425289,0.0012369565665721893,0.022247429937124252,0.0023100688122212887,-0.030589401721954346,-0.0035712344106286764,-0.015156048350036144,0.010134870186448097,0.046848759055137634,0.03555477410554886,0.020453760400414467,-0.03507694974541664,0.017629684880375862,0.03281158581376076,-0.001137815648689866,-0.03198474645614624,0.03592643514275551,-0.07282594591379166,0.09092698991298676,0.03347194939851761,0.05795399844646454,-0.04233590140938759,0.011383039876818657,0.008504843339323997,-0.017073804512619972,-0.020331978797912598,0.04475100338459015,0.006880398839712143,-0.01216209027916193,-0.00720892334356904,-0.02584526687860489,-0.015832416713237762,-0.017144037410616875,0.04807812720537186,-0.01668982207775116,-0.02171151153743267,0.02314898744225502,0.002583910943940282,0.05352966487407684,0.02123408578336239,0.005879053380340338,-0.07869046181440353,0.04340852424502373,0.0027452108915895224,0.017851436510682106,-0.008220510557293892,0.07086654007434845,-0.022332042455673218,0.0753573551774025,0.009823760017752647,0.06675595790147781,-0.0039915721863508224,0.045483678579330444,-0.008395508863031864,0.027850599959492683,0.008949466049671173,0.024873215705156326,0.038333334028720856,0.00469871936365962,-0.007157405838370323,-0.010736284777522087,-0.004990904126316309,-0.007911033928394318,-0.016200542449951172,0.07361894845962524,0.010538972914218903,-0.015600236132740974,-0.07669129967689514,0.015850309282541275,0.09122824668884277,0.00019363814499229193,-0.04899340867996216,0.018354739993810654,0.0032470282167196274,0.03923856467008591,-0.02782386541366577,-0.027770498767495155,0.0051669045351445675,-0.07629545032978058,-0.05431782081723213,0.050792109221220016,0.016747385263442993,0.036695696413517,-0.10082628577947617,-0.010361511260271072,-0.012594694271683693,0.026374300941824913,0.10127373039722443,-0.05413784086704254,0.01121616456657648,0.05265514925122261,0.011807829141616821,-0.04726050794124603,-0.03457002714276314,-0.011751811020076275,0.011709866113960743,-0.028074944391846657,0.00923196692019701,-0.011097026988863945,-0.05858674272894859,0.009039198979735374,-0.042830001562833786,0.0014552255161106586,0.03774457797408104,-0.0007373052067123353,0.004411477129906416,-0.05965147539973259,-0.008670720271766186,-0.04214886948466301,0.025256462395191193,0.034389276057481766,0.04300857335329056,-0.013858222402632236,0.01863744854927063,-0.027508744969964027,-0.003945761360228062,-0.055163782089948654,0.012386174872517586,-0.003608538769185543,-0.03184664994478226,0.0010941475629806519,0.048313483595848083,-0.004266615025699139,-0.01274527795612812,0.026866788044571877,2.4850055524439085e-7,0.014747275039553642,0.06931132823228836,-0.031154843047261238,-0.01567239500582218,0.038932718336582184,-0.03738747164607048,0.04662274941802025,-0.045220308005809784,0.015083150938153267,-0.005485089961439371,0.009327542036771774,-0.008244281634688377,-0.0020713377743959427,0.006482369266450405,-0.017982665449380875,-0.04248421639204025,-0.0009548382950015366,-0.0023657316341996193,-0.07997038960456848,0.0022177998907864094,-0.002334413817152381,0.01705477014183998,0.005898891016840935,0.023999478667974472,0.01941729336977005,-0.04718196019530296,-0.02932443656027317,-0.008065450936555862,0.01567450538277626,0.00422733835875988,0.04953741654753685,-0.016229089349508286,-0.010656436905264854,0.04042578488588333,-0.021023333072662354,0.011249165050685406,-0.010984687134623528,0.009256409481167793,0.01821703463792801,-0.05771910026669502,0.06604679673910141,-0.013667069375514984,-0.015628360211849213,-0.05853559076786041,0.012444469146430492,-0.006629090290516615,0.04154698923230171,0.03140369802713394,0.00543011911213398,-0.02925724908709526,-0.008542334660887718,-0.03180236369371414,0.013771959580481052,-0.009544111788272858,0.006520599126815796,0.0027912643272429705,-0.03390331193804741,0.023235170170664787,0.03556768223643303,-0.026967406272888184,-0.03572436422109604,-0.11143122613430023,-0.008531806990504265,0.02323981001973152,0.07868149876594543,-0.02144473046064377,-0.017161307856440544,3.167057517192457e-34,0.017593346536159515,0.013262592256069183,0.04536698758602142,-0.03474835678935051,-0.025941722095012665,-0.010737057775259018,-0.08715859055519104,-0.003369343699887395,0.028173796832561493,-0.08500069379806519,-0.011694754473865032]'
SET
  @TechnicalDesignVector_8f81fda4 = N'[-0.05565858259797096,0.019980929791927338,-0.025013761594891548,-0.05790350213646889,-0.009000423364341259,-0.054211217910051346,0.009041421115398407,0.04327059164643288,0.00464131124317646,-0.03489340841770172,0.007810778450220823,0.0244083721190691,0.0054613384418189526,0.07241106778383255,-0.044929858297109604,-0.04582591354846954,0.01860884763300419,0.02172616682946682,-0.0777621865272522,-0.0054208822548389435,0.02265136130154133,-0.017765332013368607,0.013856399804353714,0.003492052899673581,0.013825926929712296,-0.027695046737790108,-0.024084249511361122,-0.008033250458538532,0.04107770323753357,0.011331948451697826,0.02133576199412346,0.0322435200214386,-0.017022887244820595,0.04082496836781502,0.0000013404909395831055,-0.002054044511169195,-0.02468082495033741,-0.013743546791374683,0.004100061021745205,-0.023352546617388725,0.02275453321635723,-0.029495473951101303,0.029976435005664825,0.004207892809063196,-0.0004075970209669322,-0.06029537692666054,-0.003786857007071376,-0.031276553869247437,0.05286838114261627,-0.006051265634596348,0.00552176171913743,0.05097360536456108,-0.014571283012628555,0.03128630667924881,-0.0007396138389594853,0.07724787294864655,0.01829567551612854,-0.09021645039319992,0.07506826519966125,-0.036380521953105927,-0.010560421273112297,-0.03049609437584877,0.02326328121125698,-0.0803958922624588,0.07813408970832825,-0.011410253122448921,0.027394957840442657,0.03239116445183754,-0.018514864146709442,-0.013396507129073143,-0.03654451295733452,-0.0023717391304671764,0.03131205961108208,-0.013540332205593586,-0.05751057714223862,0.0358273945748806,0.01473594643175602,-0.02991483174264431,-0.014708337374031544,0.01453816331923008,0.0561857670545578,0.011078628711402416,-0.022325566038489342,-0.047618210315704346,-0.03566155582666397,0.08768980205059052,0.04103989526629448,-0.023508353158831596,-0.10786377638578415,-0.018000680953264236,0.07321605086326599,-0.015733521431684494,0.034290868788957596,0.000008261264156317338,-0.0710059255361557,0.02900010161101818,-0.008923097513616085,-0.04514099285006523,-0.03769015520811081,-0.000673017231747508,0.007547652814537287,0.03536614403128624,0.05768650397658348,0.012314005754888058,0.08625403791666031,-0.013335177674889565,0.0013114551547914743,-0.05864470452070236,-0.01513654924929142,-0.016363056376576424,-0.02757066674530506,0.013611262664198875,0.028758348897099495,0.039554741233587265,-0.019697461277246475,0.025190720334649086,-0.017687613144516945,0.015437428839504719,-0.02332082949578762,0.0005436461069621146,0.015368839725852013,-0.037739016115665436,-0.02376752533018589,-0.022507496178150177,0.0330699123442173,0.07915939390659332,0.025352921336889267,-0.07342173159122467,0.016511134803295135,0.02255827933549881,-0.011460463516414165,-0.022539125755429268,0.03877594321966171,0.019328666850924492,-0.042519669979810715,0.010229699313640594,-0.003799848025664687,-0.001751735107973218,-0.024500813335180283,-0.03072812408208847,0.0009102252079173923,0.05099423602223396,0.016377991065382957,0.04359271004796028,-0.012758933007717133,-0.02456807717680931,0.002890872536227107,-0.08997651934623718,-0.006724347826093435,0.0025097415782511234,0.0012875923421233892,0.034464187920093536,0.04708794504404068,-0.010463005863130093,0.0037029075901955366,0.026681559160351753,0.04184951260685921,0.030757877975702286,0.03028702363371849,-0.05106642469763756,0.023412873968482018,0.010324991308152676,0.06164231896400452,0.022944139316678047,-0.03983794152736664,0.025677867233753204,-0.08538130670785904,-0.05861244723200798,-0.04270688816905022,-0.000574369914829731,0.004231044556945562,-0.042243484407663345,-0.023239584639668465,-0.0011737107997760177,0.03512989357113838,-0.017437661066651344,0.004619093611836433,0.03605544939637184,-0.051021069288253784,-0.002883399836719036,-0.03074544295668602,0.004964269697666168,0.018740560859441757,0.02238440327346325,-0.0019067716784775257,-0.07398480921983719,-0.00661376491189003,0.012863852083683014,0.004097782541066408,0.003570562694221735,0.01279405876994133,-0.016801731660962105,0.021273713558912277,-0.03983834758400917,0.014526095241308212,-0.003344661323353648,0.004614077974110842,-0.01624995656311512,0.03167394548654556,-0.0106349503621459,0.06097131222486496,-0.012597454711794853,0.06443662196397781,0.02167442813515663,0.040515415370464325,-0.06914316862821579,-0.032456133514642715,0.0027067838236689568,-0.003270885907113552,-0.005246299784630537,-0.04989783838391304,0.01814744435250759,-0.00006460172880906612,0.01755417324602604,0.004587833303958178,0.004916034638881683,0.007742004934698343,-0.022646451368927956,-0.07683293521404266,-0.040763869881629944,-0.059166159480810165,0.061446577310562134,0.03627738356590271,-0.015997709706425667,0.08094634115695953,0.013293519616127014,0.0397736094892025,0.007409662939608097,0.04838728904724121,-0.02702711522579193,0.01559420581907034,0.017949769273400307,0.0080861272290349,0.01431072037667036,0.016416305676102638,0.00390553567558527,0.02478230558335781,-0.014410619623959064,-0.005620334763079882,0.027400903403759003,-0.023996444419026375,-0.019537579268217087,-0.03548737242817879,-0.031276799738407135,0.009536252357065678,-0.010349716991186142,-0.03500880300998688,0.07937590777873993,-0.02910476364195347,-0.017572632059454918,0.01119150035083294,0.029321040958166122,-0.036311130970716476,-0.024672169238328934,-0.027612365782260895,-0.10210766643285751,0.00590301351621747,-0.0188197810202837,0.005985698662698269,0.02309078350663185,-0.009385466575622559,0.044427622109651566,-0.00901892688125372,0.0011825959663838148,-0.010240383446216583,-0.009958901442587376,-0.002577877603471279,0.06693974882364273,0.006126531399786472,0.023308096453547478,0.01190062053501606,0.03864126279950142,0.004252055659890175,0.01771695911884308,0.039099015295505524,0.009024950675666332,-0.030857622623443604,0.011092682369053364,0.006023033056408167,-0.026403121650218964,-0.032488249242305756,-0.02927633933722973,0.005404471419751644,-0.00011524156434461474,-0.02670355699956417,0.04915039986371994,0.021585660055279732,-0.013861012645065784,-0.009715897962450981,-0.0827832743525505,0.013045687228441238,0.03780416399240494,0.0068804617039859295,-0.0108246561139822,-0.012117806822061539,0.009418874979019165,0.062248293310403824,0.0985364019870758,0.006932530552148819,0.0265464149415493,-0.0077857994474470615,-0.02496173232793808,0.022127855569124222,-0.015994815155863762,-0.028678586706519127,0.041009217500686646,-0.012178396806120872,0.03772164508700371,0.05290764942765236,0.036179762333631516,-0.016860224306583405,-0.02026083692908287,-0.014108284376561642,0.013448165729641914,-0.025605496019124985,0.00692259194329381,-0.007455893792212009,-0.10953376442193985,-0.001386272837407887,0.019089503213763237,-0.055984240025281906,-0.050514914095401764,0.02986922301352024,0.01884789764881134,-0.0251095462590456,-0.011662243865430355,-0.003798216348513961,0.01302956324070692,-0.06799555569887161,-0.01972241885960102,-0.021199630573391914,-0.02978660725057125,0.03705007955431938,-0.0073450286872684956,0.015517672523856163,0.004260985180735588,-0.03291400894522667,0.030946705490350723,-0.021096715703606606,-0.005507284309715033,0.018231205642223358,-0.027320418506860733,-0.00882893055677414,0.029819298535585403,0.10533680766820908,-0.021866807714104652,-0.0376792773604393,0.03535934537649155,-0.058281004428863525,0.0480458065867424,0.061541758477687836,0.02079498954117298,-0.008095724508166313,-0.02695256844162941,-0.017296843230724335,0.02488383650779724,-0.05672457814216614,-0.015372641384601593,-0.05686528608202934,-0.0140982111915946,0.04612089693546295,0.04937854781746864,0.1659637987613678,-0.049043603241443634,-0.03509208932518959,0.004672218579798937,0.02569546364247799,0.01189123373478651,0.0030588244553655386,-0.04039784148335457,-0.019395746290683746,-0.04358988255262375,-0.0030266479589045048,-0.03196292743086815,0.0005847779102623463,-0.0984167829155922,0.0263456329703331,-0.0061804428696632385,0.014739965088665485,-0.005504576954990625,0.03171023726463318,0.021734517067670822,0.08554890751838684,-0.027037983760237694,0.01471631694585085,-0.020153339952230453,0.01921137608587742,0.01950688846409321,0.000854763959068805,0.011292358860373497,0.011058817617595196,-0.054758258163928986,-0.07696957886219025,-0.00038988416781648993,0.03747854381799698,0.029053963720798492,-0.010576961562037468,0.018748564645648003,0.014487730339169502,-0.02276768535375595,0.017032328993082047,0.052556656301021576,0.00855205673724413,-0.007502909749746323,0.009950535371899605,-0.0047316402196884155,-0.08188100904226303,-0.004795664455741644,0.023302802816033363,0.06237926706671715,-0.013101023621857166,-0.07028064876794815,-0.01686025783419609,-0.01947912760078907,-0.11742891371250153,-0.004223415162414312,0.008367344737052917,-0.008841843344271183,0.06484115123748779,0.011486072093248367,-0.04985842853784561,0.005251199938356876,0.07970628887414932,-0.0417681559920311,0.04967643320560455,0.004367589019238949,-0.03295717015862465,-0.00038147909799590707,-0.02754078060388565,-0.011111428029835224,-0.032631032168865204,0.059215858578681946,0.04825860261917114,-0.009648803621530533,0.0478939451277256,-0.024477625265717506,-0.01886078529059887,-0.03566471114754677,-0.006916115526109934,-0.04025939479470253,0.04723426699638367,0.016972003504633904,0.05272051692008972,-0.00017815431056078523,0.011983641423285007,0.05832024663686752,-0.004402646794915199,0.07546965032815933,0.06402560323476791,-0.04458025097846985,0.0004015333252027631,0.0278178658336401,-0.009897450916469097,-0.03195922449231148,0.020823638886213303,-0.05593850463628769,-0.01604379154741764,0.07012764364480972,-0.04773145914077759,0.08893780410289764,-0.003531527006998658,0.023292705416679382,0.03842810541391373,-0.010417038574814796,-0.030614949762821198,-0.026001382619142532,-0.023265233263373375,0.013884061947464943,0.01401469949632883,0.011908815242350101,-0.014961599372327328,-0.016221918165683746,-0.009579910896718502,-0.011409714818000793,0.03467155247926712,0.026358740404248238,-0.00481051579117775,-0.05573970824480057,-0.11961046606302261,0.01028013601899147,-0.008650533854961395,0.060107432305812836,-0.016880078241229057,0.042242102324962616,-0.017720939591526985,0.011031626723706722,0.02578461356461048,0.027522727847099304,-0.013744909316301346,-0.002365147229284048,-0.02372800000011921,0.0061322725377976894,-0.033171746879816055,0.06804928183555603,0.013566739857196808,-0.033957790583372116,-0.005208079237490892,0.02969721145927906,0.025580892339348793,-0.03754435107111931,0.010957234539091587,-0.0012024760944768786,0.05731937661767006,-0.0194273479282856,0.035213664174079895,-0.031264543533325195,-0.01951179839670658,0.025070713832974434,0.04401927441358566,-0.034765422344207764,-0.04365076124668121,-0.010197272524237633,-0.06421485543251038,0.0690884217619896,0.007158391177654266,-0.02584938332438469,-0.013533971272408962,0.061649106442928314,0.0242637787014246,-0.033345889300107956,0.005916193127632141,-0.007075093220919371,0.027730388566851616,0.016831843182444572,0.06609808653593063,0.009146626107394695,0.01087168324738741,0.0032182272989302874,0.016625111922621727,0.018239127472043037,-0.026782406494021416,0.04651050269603729,-0.03927067667245865,-0.015462955459952354,0.0031321533024311066,0.03697014972567558,-0.027851462364196777,-0.00273015140555799,0.011986701749265194,-0.0475798100233078,-0.04334086552262306,0.03229284659028053,0.02069440670311451,-0.003790822811424732,0.011797172017395496,-0.06184137985110283,0.03870119899511337,-0.05133729428052902,0.0026075884234160185,0.08386872708797455,0.03775326907634735,-0.036572445183992386,-0.0390961728990078,-0.010732420720160007,0.048834651708602905,-5.8109802834991595e-33,-0.018403278663754463,-0.013257298618555069,-0.028680669143795967,-0.0030381607357412577,-0.043865423649549484,-0.04433060809969902,-0.027158698067069054,-0.0735771581530571,0.05077800154685974,-0.03593812137842178,-0.006789361126720905,-0.03166205435991287,-0.0088213374838233,-0.021103190258145332,-0.0006253780447877944,-0.019671237096190453,0.016463827341794968,-0.0021453865338116884,-0.027696797624230385,0.06225918233394623,0.036426786333322525,0.008427521213889122,0.008732542395591736,0.02536325342953205,-0.07945150882005692,0.02567484974861145,0.007654963526874781,0.06409776955842972,-0.10506448894739151,0.04793460667133331,0.014466967433691025,0.02985077165067196,-0.018728498369455338,-0.022576946765184402,-0.009107774123549461,-0.003689525881782174,-0.0024204172659665346,-0.00520982313901186,-0.005559371318668127,-0.05997684597969055,0.04617457091808319,-0.03265237435698509,0.03990743309259415,0.03215998038649559,0.02383524551987648,0.04881536215543747,0.007817596197128296,0.028652066364884377,-0.020484134554862976,0.020651478320360184,-0.020006578415632248,0.024308376014232635,-0.031849343329668045,0.07335580885410309,-0.05192939564585686,0.04543343931436539,0.04787728935480118,0.040741659700870514,-0.00466596195474267,-0.022193558514118195,0.009360033087432384,0.03352324292063713,-0.0325937420129776,0.05183519423007965,0.05527203902602196,-0.03814008831977844,-0.013462189584970474,0.05473720654845238,-0.03173315152525902,-0.008398449048399925,0.031016044318675995,-0.06368302553892136,0.006951820105314255,0.0345667228102684,0.00447439681738615,0.012155882082879543,-0.032745715230703354,0.007182035595178604,-0.03274627774953842,0.04106537252664566,-0.029884295538067818,0.07890773564577103,0.054864551872015,0.01220905501395464,-0.044461145997047424,-0.0007724786410108209,0.011896106414496899,0.03763040900230408,-0.04874765872955322,0.024296581745147705,-0.034615859389305115,0.007267668377608061,-0.013660005293786526,0.059504833072423935,0.04159419983625412,-0.09083665162324905,0.03216277435421944,0.019568782299757004,0.019343318417668343,0.009090744890272617,0.05468611791729927,-0.02553282491862774,0.013645343482494354,-0.04745805263519287,0.003446709830313921,-0.0042113978415727615,-0.03841120004653931,0.03643646091222763,-0.04551171511411667,0.03208320215344429,-0.0035941179376095533,0.004624306224286556,-0.03341864049434662,-0.005419611465185881,0.03238297253847122,0.012227397412061691,0.03243422880768776,-0.016665389761328697,0.02153749018907547,0.07494360953569412,0.013850373215973377,-0.024474114179611206,0.02219698391854763,0.0277042705565691,0.00362262106500566,-0.006116355769336224,-0.04326181858778,0.01696188747882843,0.059267815202474594,-0.03786442428827286,-0.0011416026391088963,0.010145749896764755,2.2603727245495975e-7,-0.012274895794689655,0.04327266290783882,-0.016765743494033813,-0.03171725198626518,0.0650162324309349,-0.042055096477270126,-0.018500763922929764,-0.03725258260965347,0.011057383380830288,-0.01599109172821045,0.008378877304494381,-0.02709283120930195,0.06484497338533401,0.014715278521180153,-0.011436818167567253,-0.078594870865345,-0.0486593022942543,0.02072417363524437,-0.028884798288345337,-0.04062794893980026,0.009321165271103382,0.04871175065636635,0.0729919895529747,0.018989156931638718,0.013899827376008034,0.07036244124174118,0.045525822788476944,0.01991846226155758,-0.0014485388528555632,-0.021748458966612816,0.03226122260093689,-0.038014885038137436,-0.02477874420583248,0.003534633433446288,-0.015886610373854637,0.009241808205842972,-0.041320499032735825,0.0025431341491639614,-0.004833931569010019,-0.000938283686991781,0.04045609012246132,0.02825181744992733,-0.050466347485780716,-0.018209271132946014,0.029196778312325478,-0.04775497317314148,0.017856169492006302,0.002102311933413148,-0.004403089638799429,0.0020442393142729998,-0.003586366306990385,-0.0075494046323001385,-0.03445519134402275,0.01665191724896431,-0.021386491134762764,0.028969954699277878,0.02675325982272625,0.012959779240190983,0.022621726617217064,-0.02051485702395439,-0.03738691657781601,-0.04178142547607422,-0.019008111208677292,-0.02033521793782711,0.047376155853271484,-0.0044021918438375,-0.04034384712576866,2.788627085165636e-34,-0.04071608930826187,-0.03321680799126625,-0.0093606011942029,-0.021502265706658363,0.006684805732220411,-0.04116704687476158,-0.06636755913496017,0.014514927752315998,0.024002574384212494,-0.04361503943800926,-0.03111444227397442]'
SET
  @HasCustomProps_8f81fda4 = 0
SET
  @HasCustomEvents_8f81fda4 = 0
SET
  @RequiresData_8f81fda4 = 0
SET
  @DependencyCount_8f81fda4 = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_8f81fda4 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_8f81fda4 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_8f81fda4 = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_8f81fda4,
  @Namespace = @Namespace_8f81fda4,
  @Name = @Name_8f81fda4,
  @Version = @Version_8f81fda4,
  @VersionSequence = @VersionSequence_8f81fda4,
  @Title = @Title_8f81fda4,
  @Description = @Description_8f81fda4,
  @Type = @Type_8f81fda4,
  @Status = @Status_8f81fda4,
  @DeveloperName = @DeveloperName_8f81fda4,
  @DeveloperEmail = @DeveloperEmail_8f81fda4,
  @DeveloperOrganization = @DeveloperOrganization_8f81fda4,
  @SourceRegistryID = @SourceRegistryID_8f81fda4,
  @ReplicatedAt = @ReplicatedAt_8f81fda4,
  @LastSyncedAt = @LastSyncedAt_8f81fda4,
  @Specification = @Specification_8f81fda4,
  @FunctionalRequirements = @FunctionalRequirements_8f81fda4,
  @TechnicalDesign = @TechnicalDesign_8f81fda4,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_8f81fda4,
  @TechnicalDesignVector = @TechnicalDesignVector_8f81fda4,
  @HasCustomProps = @HasCustomProps_8f81fda4,
  @HasCustomEvents = @HasCustomEvents_8f81fda4,
  @RequiresData = @RequiresData_8f81fda4,
  @DependencyCount = @DependencyCount_8f81fda4,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_8f81fda4,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_8f81fda4,
  @HasRequiredCustomProps = @HasRequiredCustomProps_8f81fda4;

-- Save MJ: Components (core SP call only)
DECLARE @ID_106bd37b UNIQUEIDENTIFIER,
@Namespace_106bd37b NVARCHAR(MAX),
@Name_106bd37b NVARCHAR(500),
@Version_106bd37b NVARCHAR(50),
@VersionSequence_106bd37b INT,
@Title_106bd37b NVARCHAR(1000),
@Description_106bd37b NVARCHAR(MAX),
@Type_106bd37b NVARCHAR(255),
@Status_106bd37b NVARCHAR(50),
@DeveloperName_106bd37b NVARCHAR(255),
@DeveloperEmail_106bd37b NVARCHAR(255),
@DeveloperOrganization_106bd37b NVARCHAR(255),
@SourceRegistryID_106bd37b UNIQUEIDENTIFIER,
@ReplicatedAt_106bd37b DATETIMEOFFSET,
@LastSyncedAt_106bd37b DATETIMEOFFSET,
@Specification_106bd37b NVARCHAR(MAX),
@FunctionalRequirements_106bd37b NVARCHAR(MAX),
@TechnicalDesign_106bd37b NVARCHAR(MAX),
@FunctionalRequirementsVector_106bd37b NVARCHAR(MAX),
@TechnicalDesignVector_106bd37b NVARCHAR(MAX),
@HasCustomProps_106bd37b BIT,
@HasCustomEvents_106bd37b BIT,
@RequiresData_106bd37b BIT,
@DependencyCount_106bd37b INT,
@TechnicalDesignVectorEmbeddingModelID_106bd37b NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_106bd37b NVARCHAR(MAX),
@HasRequiredCustomProps_106bd37b BIT
SET
  @ID_106bd37b = '913fc220-be2b-4ee6-aff5-8dd9b4c6c7e4'
SET
  @Namespace_106bd37b = N'AI/Analytics'
SET
  @Name_106bd37b = N'AIPromptsCluster'
SET
  @Version_106bd37b = N'1.0.0'
SET
  @VersionSequence_106bd37b = 1
SET
  @Title_106bd37b = N'AI Prompts Cluster Visualization'
SET
  @Description_106bd37b = N'Interactive clustering visualization of AI prompts using semantic embeddings to discover patterns and relationships'
SET
  @Type_106bd37b = N'Dashboard'
SET
  @Status_106bd37b = N'Published'
SET
  @Specification_106bd37b = N'{"name":"AIPromptsCluster","title":"AI Prompts Cluster Visualization","description":"Interactive clustering visualization of AI prompts using semantic embeddings to discover patterns and relationships","type":"dashboard","location":"embedded","code":"function AIPromptsCluster({ \n  utilities, \n  styles, \n  components, \n  callbacks, \n  savedUserSettings, \n  onSaveUserSettings,\n  data \n}) {\n  // Load sub-components\n  const ClusterGraph = components[''AIPromptsClusterGraph''];\n  const ClusterControls = components[''AIPromptsClusterControls''];\n  const ClusterDetails = components[''AIPromptsClusterDetails''];\n\n  // State management\n  const [prompts, setPrompts] = useState([]);\n  const [embeddings, setEmbeddings] = useState({});\n  const [clusters, setClusters] = useState([]);\n  const [selectedPrompt, setSelectedPrompt] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '''',\n    category: null,\n    type: null,\n    status: ''Active'',\n    role: null\n  });\n  const [clusterCount, setClusterCount] = useState(5);\n  const [similarityThreshold, setSimilarityThreshold] = useState(0.7);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [highlightCluster, setHighlightCluster] = useState(null);\n  const [clusterNames, setClusterNames] = useState({});\n\n  // Load AI Prompts data on mount\n  useEffect(() => {\n    loadPrompts();\n  }, []);\n\n  // Load prompts from database\n  const loadPrompts = async () => {\n    try {\n      setIsProcessing(true);\n      setError(null);\n      \n      const result = await utilities.rv.RunView({\n        EntityName: ''AI Prompts'',\n        OrderBy: ''Name'',\n        ResultType: ''entity_object''\n      });\n      \n      if (result.Success && result.Results) {\n        setPrompts(result.Results);\n        // Load saved embeddings if available\n        const savedEmbeddings = savedUserSettings?.embeddings || {};\n        setEmbeddings(savedEmbeddings);\n      } else {\n        setError(''Failed to load AI Prompts'');\n      }\n    } catch (err) {\n      setError(`Error loading prompts: $' + '{err.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Generate embeddings for prompts that don''t have them\n  const generateEmbeddings = async () => {\n    try {\n      setIsProcessing(true);\n      setError(null);\n      \n      // Filter prompts that need embeddings\n      const promptsNeedingEmbeddings = filteredPrompts.filter(\n        p => !embeddings[p.ID] && p.TemplateText && p.TemplateText.length > 0\n      );\n      \n      if (promptsNeedingEmbeddings.length === 0) {\n        // All prompts already have embeddings\n        performClustering();\n        return;\n      }\n      \n      // Batch process embeddings\n      const batchSize = 10;\n      const newEmbeddings = { ...embeddings };\n      \n      for (let i = 0; i < promptsNeedingEmbeddings.length; i += batchSize) {\n        const batch = promptsNeedingEmbeddings.slice(i, i + batchSize);\n        const texts = batch.map(p => p.TemplateText);\n        \n        try {\n          const result = await utilities.ai.EmbedText({\n            textToEmbed: texts,\n            modelSize: ''small''\n          });\n          \n          // Store embeddings\n          batch.forEach((prompt, idx) => {\n            newEmbeddings[prompt.ID] = result.result[idx];\n          });\n          \n          // Update state incrementally\n          setEmbeddings(newEmbeddings);\n        } catch (err) {\n          console.error(''Error generating embeddings for batch:'', err);\n        }\n      }\n      \n      // Save embeddings to user settings\n      onSaveUserSettings({\n        ...savedUserSettings,\n        embeddings: newEmbeddings\n      });\n      \n      // Perform clustering with new embeddings\n      performClustering(newEmbeddings);\n      \n    } catch (err) {\n      setError(`Error generating embeddings: $' + '{err.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Perform clustering on embeddings\n  const performClustering = (embeddingsToUse = embeddings) => {\n    try {\n      const promptsWithEmbeddings = filteredPrompts.filter(\n        p => embeddingsToUse[p.ID]\n      );\n      \n      if (promptsWithEmbeddings.length < 2) {\n        setError(''Need at least 2 prompts with embeddings to perform clustering'');\n        return;\n      }\n      \n      // Prepare data for clustering\n      const vectors = promptsWithEmbeddings.map(p => embeddingsToUse[p.ID]);\n      const vectorService = utilities.ai.VectorService;\n      \n      // Perform k-means clustering\n      // First load vectors into the service\n      const vectorMap = new Map();\n      promptsWithEmbeddings.forEach((prompt, idx) => {\n        vectorMap.set(prompt.ID, embeddingsToUse[prompt.ID]);\n      });\n      vectorService.LoadVectors(vectorMap);\n      \n      // Then perform clustering\n      const clusterResult = vectorService.KMeansCluster(\n        Math.min(clusterCount, promptsWithEmbeddings.length),\n        100, // max iterations\n        ''cosine'' // distance metric\n      );\n      \n      // Map cluster assignments back to prompts\n      const clusteredPrompts = promptsWithEmbeddings.map((prompt) => {\n        // Find which cluster this prompt belongs to\n        let assignedCluster = 0;\n        clusterResult.clusters.forEach((members, clusterId) => {\n          if (members.includes(prompt.ID)) {\n            assignedCluster = clusterId;\n          }\n        });\n        \n        // Store the original prompt entity along with cluster data\n        return {\n          entity: prompt,  // Keep the original entity object\n          cluster: assignedCluster,\n          embedding: embeddingsToUse[prompt.ID],\n          // Expose commonly used properties for convenience\n          ID: prompt.ID,\n          Name: prompt.Name,\n          Category: prompt.Category,\n          Type: prompt.Type,\n          Description: prompt.Description,\n          Status: prompt.Status,\n          TemplateText: prompt.TemplateText\n        };\n      });\n      \n      setClusters(clusteredPrompts);\n      \n      // Generate names for clusters\n      generateClusterNames(clusteredPrompts);\n      \n    } catch (err) {\n      setError(`Error performing clustering: $' + '{err.message}`);\n    }\n  };\n  \n  // Generate AI-powered names for clusters\n  const generateClusterNames = async (clusteredPrompts) => {\n    try {\n      // Group prompts by cluster\n      const clusterGroups = {};\n      clusteredPrompts.forEach(prompt => {\n        if (!clusterGroups[prompt.cluster]) {\n          clusterGroups[prompt.cluster] = [];\n        }\n        clusterGroups[prompt.cluster].push(prompt);\n      });\n      \n      // Prepare cluster summaries for AI\n      const clusterSummaries = {};\n      Object.entries(clusterGroups).forEach(([clusterId, prompts]) => {\n        // Get unique categories and types\n        const categories = [...new Set(prompts.map(p => p.Category).filter(Boolean))];\n        const types = [...new Set(prompts.map(p => p.Type).filter(Boolean))];\n        \n        // Sample prompt names (up to 5)\n        const sampleNames = prompts.slice(0, 5).map(p => p.Name);\n        \n        // Sample template texts (first 150 chars, up to 3 prompts)\n        const templateSamples = prompts\n          .slice(0, 3)\n          .map(p => p.TemplateText ? p.TemplateText.substring(0, 150) + ''...'' : '''')\n          .filter(Boolean);\n        \n        clusterSummaries[clusterId] = {\n          promptCount: prompts.length,\n          sampleNames,\n          categories,\n          types,\n          templateSamples\n        };\n      });\n      \n      // Create a single prompt for all clusters\n      const namingPrompt = `Analyze these clusters of AI prompts and generate concise, descriptive names (2-4 words) for each cluster based on their common themes or purposes.\n\n$' + '{Object.entries(clusterSummaries).map(([id, summary]) => `\nCluster $' + '{parseInt(id) + 1}:\n- $' + '{summary.promptCount} prompts total\n- Sample names: $' + '{summary.sampleNames.join('', '')}\n- Categories: $' + '{summary.categories.length > 0 ? summary.categories.join('', '') : ''Various''}\n- Types: $' + '{summary.types.length > 0 ? summary.types.join('', '') : ''Various''}\n- Template samples: $' + '{summary.templateSamples.length > 0 ? summary.templateSamples[0].substring(0, 100) : ''N/A''}\n`).join(''\\n'')}\n\nReturn a JSON object with cluster numbers as keys and descriptive names as values. Example format:\n{\n  \"0\": \"Data Analysis Tools\",\n  \"1\": \"User Communication\",\n  \"2\": \"System Administration\"\n}\n\nOnly return the JSON object, nothing else.`;\n      \n      // Call AI to generate names using ExecutePrompt\n      const result = await utilities.ai.ExecutePrompt({\n        systemPrompt: namingPrompt,\n        modelPower: ''lowest'' // This is a simple task, use the cheapest/fastest model\n      });\n      \n      if (result && result.success && result.result) {\n        try {\n          // Parse the JSON response - ExecutePrompt may already parse it for us\n          const names = result.resultObject || JSON.parse(result.result);\n          setClusterNames(names);\n          \n          // Optionally save to user settings\n          if (onSaveUserSettings) {\n            onSaveUserSettings({\n              ...savedUserSettings,\n              clusterNames: names\n            });\n          }\n        } catch (parseErr) {\n          console.error(''Failed to parse cluster names:'', parseErr);\n          // Fall back to numbered clusters\n          const fallbackNames = {};\n          Object.keys(clusterSummaries).forEach(id => {\n            fallbackNames[id] = `Cluster $' + '{parseInt(id) + 1}`;\n          });\n          setClusterNames(fallbackNames);\n        }\n      }\n    } catch (err) {\n      console.error(''Error generating cluster names:'', err);\n      // Don''t let this break the clustering - just use numbers\n    }\n  };\n\n  // Filter prompts based on current filters\n  const filteredPrompts = useMemo(() => {\n    return prompts.filter(prompt => {\n      // Search filter\n      if (filters.search) {\n        const searchLower = filters.search.toLowerCase();\n        const matchesSearch = \n          prompt.Name?.toLowerCase().includes(searchLower) ||\n          prompt.Description?.toLowerCase().includes(searchLower) ||\n          prompt.TemplateText?.toLowerCase().includes(searchLower);\n        if (!matchesSearch) return false;\n      }\n      \n      // Category filter\n      if (filters.category && prompt.CategoryID !== filters.category) {\n        return false;\n      }\n      \n      // Type filter\n      if (filters.type && prompt.TypeID !== filters.type) {\n        return false;\n      }\n      \n      // Status filter\n      if (filters.status && prompt.Status !== filters.status) {\n        return false;\n      }\n      \n      // Role filter\n      if (filters.role && prompt.PromptRole !== filters.role) {\n        return false;\n      }\n      \n      return true;\n    });\n  }, [prompts, filters]);\n\n  // Get unique categories and types for filters\n  const categories = useMemo(() => {\n    const uniqueCategories = new Map();\n    prompts.forEach(p => {\n      if (p.CategoryID && p.Category) {\n        uniqueCategories.set(p.CategoryID, p.Category);\n      }\n    });\n    return Array.from(uniqueCategories, ([id, name]) => ({ id, name }));\n  }, [prompts]);\n\n  const types = useMemo(() => {\n    const uniqueTypes = new Map();\n    prompts.forEach(p => {\n      if (p.TypeID && p.Type) {\n        uniqueTypes.set(p.TypeID, p.Type);\n      }\n    });\n    return Array.from(uniqueTypes, ([id, name]) => ({ id, name }));\n  }, [prompts]);\n\n  // Calculate similar prompts for selected prompt\n  const similarPrompts = useMemo(() => {\n    if (!selectedPrompt || !embeddings[selectedPrompt.ID]) return [];\n    \n    const selectedEmbedding = embeddings[selectedPrompt.ID];\n    const vectorService = utilities.ai.VectorService;\n    \n    // Calculate similarities to all other prompts with embeddings\n    const similarities = filteredPrompts\n      .filter(p => p.ID !== selectedPrompt.ID && embeddings[p.ID])\n      .map(prompt => {\n        // Use CalculateDistance with cosine metric and convert to similarity\n        const distance = vectorService.CalculateDistance(\n          selectedEmbedding,\n          embeddings[prompt.ID],\n          ''cosine''\n        );\n        return {\n          prompt,\n          similarity: 1 - distance // Convert distance to similarity\n        };\n      })\n      .sort((a, b) => b.similarity - a.similarity)\n      .slice(0, 5); // Top 5 similar prompts\n    \n    return similarities;\n  }, [selectedPrompt, embeddings, filteredPrompts]);\n\n  // Get cluster info for selected prompt\n  const clusterInfo = useMemo(() => {\n    if (!selectedPrompt || clusters.length === 0) return null;\n    \n    const clusteredPrompt = clusters.find(p => p.ID === selectedPrompt.ID);\n    if (!clusteredPrompt) return null;\n    \n    const clusterMembers = clusters.filter(p => p.cluster === clusteredPrompt.cluster);\n    \n    return {\n      clusterIndex: clusteredPrompt.cluster,\n      clusterSize: clusterMembers.length,\n      clusterMembers: clusterMembers.slice(0, 10).map(member => ({\n        ...member,\n        // Ensure entity is available for navigation\n        entity: member.entity\n      }))\n    };\n  }, [selectedPrompt, clusters]);\n\n  // Event handlers\n  const handlePromptSelect = (promptOrClusteredPrompt) => {\n    // If it''s a clustered prompt object, extract the entity\n    // Otherwise use the prompt as-is\n    const prompt = promptOrClusteredPrompt?.entity || promptOrClusteredPrompt;\n    setSelectedPrompt(prompt);\n    setHighlightCluster(null);\n  };\n\n  const handleClusterSelect = (clusterIndex) => {\n    setHighlightCluster(clusterIndex);\n    setSelectedPrompt(null);\n  };\n\n  const handleRecalculate = () => {\n    generateEmbeddings();\n  };\n\n  const handleExport = () => {\n    // Create export data\n    const exportData = clusters.map(prompt => ({\n      ID: prompt.ID,\n      Name: prompt.Name,\n      Category: prompt.Category,\n      Type: prompt.Type,\n      Cluster: prompt.cluster\n    }));\n    \n    // Convert to CSV\n    const headers = [''ID'', ''Name'', ''Category'', ''Type'', ''Cluster''];\n    const csv = [\n      headers.join('',''),\n      ...exportData.map(row => \n        headers.map(h => `\"$' + '{row[h] || ''''}\"`).join('','')\n      )\n    ].join(''\\n'');\n    \n    // Download file\n    const blob = new Blob([csv], { type: ''text/csv'' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(''a'');\n    a.href = url;\n    a.download = `ai-prompts-clusters-$' + '{new Date().toISOString().split(''T'')[0]}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleEditPrompt = (promptId) => {\n    callbacks.OpenEntityRecord(''AI Prompts'', [\n      { FieldName: ''ID'', Value: promptId }\n    ]);\n  };\n\n  // Render component\n  return (\n    <div style={{\n      display: ''flex'',\n      flexDirection: ''column'',\n      height: ''100%'',\n      padding: styles.spacing?.md || ''16px'',\n      backgroundColor: styles.colors?.background || ''#f5f5f5'',\n      fontFamily: styles.fonts?.body || ''system-ui, -apple-system, sans-serif''\n    }}>\n      {/* Header */}\n      <div style={{\n        marginBottom: styles.spacing?.md || ''16px''\n      }}>\n        <h2 style={{\n          fontSize: styles.fonts?.sizes?.xl || ''24px'',\n          fontWeight: ''bold'',\n          color: styles.colors?.text?.primary || ''#333'',\n          margin: 0\n        }}>\n          AI Prompts Cluster Analysis\n        </h2>\n        <p style={{\n          fontSize: styles.fonts?.sizes?.sm || ''14px'',\n          color: styles.colors?.text?.secondary || ''#666'',\n          marginTop: styles.spacing?.xs || ''4px''\n        }}>\n          Discover patterns and relationships in your AI prompts through semantic clustering\n        </p>\n      </div>\n\n      {/* Error display */}\n      {error && (\n        <div style={{\n          padding: styles.spacing?.sm || ''8px'',\n          backgroundColor: ''#fee'',\n          color: ''#c00'',\n          borderRadius: styles.borders?.radius || ''4px'',\n          marginBottom: styles.spacing?.md || ''16px''\n        }}>\n          {error}\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div style={{\n        display: ''flex'',\n        flex: 1,\n        gap: styles.spacing?.md || ''16px'',\n        overflow: ''hidden''\n      }}>\n        {/* Left panel - Controls */}\n        <div style={{\n          width: ''280px'',\n          display: ''flex'',\n          flexDirection: ''column'',\n          gap: styles.spacing?.sm || ''8px''\n        }}>\n          <ClusterControls\n            categories={categories}\n            types={types}\n            currentFilters={filters}\n            clusterCount={clusterCount}\n            similarityThreshold={similarityThreshold}\n            isProcessing={isProcessing}\n            onSearchChange={(search) => setFilters({ ...filters, search })}\n            onFilterChange={setFilters}\n            onClusterCountChange={setClusterCount}\n            onSimilarityThresholdChange={setSimilarityThreshold}\n            onRecalculate={handleRecalculate}\n            onExport={handleExport}\n            utilities={utilities}\n            styles={styles}\n            components={components}\n            callbacks={callbacks}\n            savedUserSettings={savedUserSettings}\n            onSaveUserSettings={onSaveUserSettings}\n          />\n        </div>\n\n        {/* Center - Graph */}\n        <div style={{\n          flex: 1,\n          backgroundColor: styles.colors?.surface || ''white'',\n          borderRadius: styles.borders?.radius || ''4px'',\n          padding: styles.spacing?.sm || ''8px'',\n          position: ''relative''\n        }}>\n          {clusters.length > 0 ? (\n            <ClusterGraph\n              prompts={clusters}\n              clusters={clusters}\n              clusterNames={clusterNames}\n              selectedPromptId={selectedPrompt?.ID}\n              similarityThreshold={similarityThreshold}\n              highlightCluster={highlightCluster}\n              onNodeClick={handlePromptSelect}\n              onNodeHover={() => {}}\n              onClusterSelect={handleClusterSelect}\n              utilities={utilities}\n              styles={styles}\n              components={components}\n              callbacks={callbacks}\n              savedUserSettings={savedUserSettings}\n              onSaveUserSettings={onSaveUserSettings}\n            />\n          ) : (\n            <div style={{\n              display: ''flex'',\n              alignItems: ''center'',\n              justifyContent: ''center'',\n              height: ''100%'',\n              color: styles.colors?.text?.secondary || ''#666''\n            }}>\n              {isProcessing ? (\n                <div>Generating embeddings and clustering...</div>\n              ) : (\n                <div style={{\n                  textAlign: ''center''\n                }}>\n                  <div style={{\n                    marginBottom: styles.spacing?.sm || ''8px''\n                  }}>\n                    No clusters generated yet\n                  </div>\n                  <div style={{\n                    fontSize: styles.fonts?.sizes?.sm || ''14px''\n                  }}>\n                    Use the \"Generate Clusters\" button in the controls panel to begin\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Right panel - Details */}\n        <div style={{\n          width: ''320px'',\n          backgroundColor: styles.colors?.surface || ''white'',\n          borderRadius: styles.borders?.radius || ''4px'',\n          padding: styles.spacing?.md || ''16px'',\n          overflowY: ''auto''\n        }}>\n          <ClusterDetails\n            selectedPrompt={selectedPrompt}\n            allPrompts={filteredPrompts}\n            clusterInfo={clusterInfo}\n            similarPrompts={similarPrompts}\n            onPromptNavigate={(promptId) => {\n              const prompt = prompts.find(p => p.ID === promptId);\n              if (prompt) handlePromptSelect(prompt);\n            }}\n            onEditPrompt={handleEditPrompt}\n            utilities={utilities}\n            styles={styles}\n            components={components}\n            callbacks={callbacks}\n            savedUserSettings={savedUserSettings}\n            onSaveUserSettings={onSaveUserSettings}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}","functionalRequirements":"Load all AI prompts, generate embeddings from TemplateText, perform clustering analysis, visualize clusters in interactive graph, show prompt details on selection, provide filtering and search capabilities","technicalDesign":"Main orchestrator that loads AI prompts data, manages embeddings generation and caching, coordinates sub-components for visualization and interaction, uses D3.js for graph rendering and SimpleVectorService for clustering","dataRequirements":{"mode":"views","entities":[{"name":"AI Prompts","displayFields":["Name","Description","TemplateText","CategoryID","Category","TypeID","Type","Status","PromptRole","ResponseFormat","Template"],"filterFields":["Status","CategoryID","TypeID","PromptRole"],"sortFields":["Name","CreatedAt","UpdatedAt"],"permissions":["read"]}]},"properties":[],"events":[{"name":"onPromptSelect","description":"Fired when a prompt is selected in the visualization","parameters":[{"name":"prompt","type":"object","description":"The selected AI prompt entity"}]}],"dependencies":[{"name":"AIPromptsClusterGraph","title":"AI Prompts Cluster Graph","description":"D3.js force-directed graph visualization showing prompt clusters based on semantic similarity","type":"chart","location":"embedded","code":"function AIPromptsClusterGraph({\n  prompts,\n  clusters,\n  clusterNames = {},\n  selectedPromptId,\n  similarityThreshold = 0.7,\n  highlightCluster,\n  onNodeClick,\n  onNodeHover,\n  onClusterSelect,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const currentTransform = useRef(null);\n  \n  // Initialize zoom behavior once, outside useEffect\n  const zoomBehavior = useRef(null);\n  if (!zoomBehavior.current && typeof d3 !== ''undefined'') {\n    zoomBehavior.current = d3.zoom()\n      .scaleExtent([0.1, 10])\n      .on(''zoom'', (event) => {\n        currentTransform.current = event.transform;\n        if (containerRef.current) {\n          containerRef.current.attr(''transform'', event.transform);\n        }\n      });\n  }\n  \n  // Modern gradient color palette for clusters\n  const clusterColors = [\n    ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n    ''linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'',\n    ''linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'',\n    ''linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)'',\n    ''linear-gradient(135deg, #fa709a 0%, #fee140 100%)'',\n    ''linear-gradient(135deg, #30cfd0 0%, #330867 100%)'',\n    ''linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)'',\n    ''linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)'',\n    ''linear-gradient(135deg, #fbc2eb 0%, #a6c1ee 100%)'',\n    ''linear-gradient(135deg, #fdcbf1 0%, #e6dee9 100%)''\n  ];\n  \n  // Solid colors for D3 (gradients will be defined in defs)\n  const solidColors = [\n    ''#667eea'', ''#f093fb'', ''#4facfe'', ''#43e97b'', ''#fa709a'',\n    ''#30cfd0'', ''#a8edea'', ''#ff9a9e'', ''#fbc2eb'', ''#fdcbf1''\n  ];\n\n  // Update dimensions on mount and resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (svgRef.current && svgRef.current.parentElement) {\n        const { width, height } = svgRef.current.parentElement.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n\n    updateDimensions();\n    window.addEventListener(''resize'', updateDimensions);\n    return () => window.removeEventListener(''resize'', updateDimensions);\n  }, []);\n\n  // Create D3 visualization\n  useEffect(() => {\n    if (!prompts || prompts.length === 0 || !svgRef.current) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(''*'').remove(); // Clear previous visualization\n\n    const width = dimensions.width;\n    const height = dimensions.height;\n\n    // Create container for zoom/pan first\n    const container = svg.append(''g'');\n    containerRef.current = container;\n    \n    // Apply zoom behavior to svg (it''s already initialized in component)\n    if (zoomBehavior.current) {\n      // Update the zoom handler to use the new container\n      zoomBehavior.current.on(''zoom'', (event) => {\n        currentTransform.current = event.transform;\n        container.attr(''transform'', event.transform);\n      });\n      \n      svg.call(zoomBehavior.current);\n    }\n    \n    // Apply saved transform if it exists\n    if (currentTransform.current) {\n      svg.call(zoomBehavior.current.transform, currentTransform.current);\n      container.attr(''transform'', currentTransform.current);\n    }\n    \n    // Add gradient definitions\n    const defs = svg.append(''defs'');\n    \n    // Create gradients for each cluster\n    solidColors.forEach((color, i) => {\n      const gradient = defs.append(''radialGradient'')\n        .attr(''id'', `cluster-gradient-$' + '{i}`)\n        .attr(''cx'', ''30%'')\n        .attr(''cy'', ''30%'');\n      \n      gradient.append(''stop'')\n        .attr(''offset'', ''0%'')\n        .attr(''stop-color'', color)\n        .attr(''stop-opacity'', 0.8);\n      \n      gradient.append(''stop'')\n        .attr(''offset'', ''100%'')\n        .attr(''stop-color'', d3.color(color).darker(0.5))\n        .attr(''stop-opacity'', 1);\n    });\n    \n    // Add glow filter\n    const filter = defs.append(''filter'')\n      .attr(''id'', ''glow'');\n    \n    filter.append(''feGaussianBlur'')\n      .attr(''stdDeviation'', ''3'')\n      .attr(''result'', ''coloredBlur'');\n    \n    const feMerge = filter.append(''feMerge'');\n    feMerge.append(''feMergeNode'')\n      .attr(''in'', ''coloredBlur'');\n    feMerge.append(''feMergeNode'')\n      .attr(''in'', ''SourceGraphic'');\n    \n    // Add strong glow for selection\n    const selectionFilter = defs.append(''filter'')\n      .attr(''id'', ''selection-glow'')\n      .attr(''width'', ''300%'')\n      .attr(''height'', ''300%'')\n      .attr(''x'', ''-100%'')\n      .attr(''y'', ''-100%'');\n    \n    selectionFilter.append(''feGaussianBlur'')\n      .attr(''stdDeviation'', ''8'')\n      .attr(''result'', ''coloredBlur'');\n    \n    const selectionMerge = selectionFilter.append(''feMerge'');\n    selectionMerge.append(''feMergeNode'')\n      .attr(''in'', ''coloredBlur'');\n    selectionMerge.append(''feMergeNode'')\n      .attr(''in'', ''SourceGraphic'');\n\n    // Calculate similarities between all nodes\n    const links = [];\n    const vectorService = utilities.ai.VectorService;\n    \n    // Load vectors into the service for similarity calculations\n    const vectorMap = new Map();\n    prompts.forEach(prompt => {\n      if (prompt.embedding) {\n        vectorMap.set(prompt.ID, prompt.embedding);\n      }\n    });\n    vectorService.LoadVectors(vectorMap);\n    \n    for (let i = 0; i < prompts.length; i++) {\n      for (let j = i + 1; j < prompts.length; j++) {\n        if (prompts[i].embedding && prompts[j].embedding) {\n          // Use CalculateDistance with cosine metric (returns distance, so we need to convert to similarity)\n          const distance = vectorService.CalculateDistance(\n            prompts[i].embedding,\n            prompts[j].embedding,\n            ''cosine''\n          );\n          const similarity = 1 - distance; // Convert distance to similarity\n          \n          if (similarity >= similarityThreshold) {\n            links.push({\n              source: prompts[i].ID,\n              target: prompts[j].ID,\n              value: similarity\n            });\n          }\n        }\n      }\n    }\n\n    // Create force simulation\n    const simulation = d3.forceSimulation(prompts)\n      .force(''link'', d3.forceLink(links)\n        .id(d => d.ID)\n        .distance(d => 100 * (1 - d.value)) // Distance inversely proportional to similarity\n        .strength(d => d.value * 0.5))\n      .force(''charge'', d3.forceManyBody()\n        .strength(-200)\n        .distanceMax(300))\n      .force(''center'', d3.forceCenter(width / 2, height / 2))\n      .force(''collision'', d3.forceCollide().radius(25))\n      .force(''cluster'', forceCluster()); // Custom clustering force\n\n    // Custom force to pull nodes toward their cluster center\n    function forceCluster() {\n      const strength = 0.2;\n      let nodes;\n      \n      function force(alpha) {\n        const centroids = d3.rollup(\n          nodes,\n          v => ({\n            x: d3.mean(v, d => d.x),\n            y: d3.mean(v, d => d.y),\n            count: v.length\n          }),\n          d => d.cluster\n        );\n        \n        nodes.forEach(node => {\n          const centroid = centroids.get(node.cluster);\n          if (centroid && centroid.count > 1) {\n            node.vx -= (node.x - centroid.x) * strength * alpha;\n            node.vy -= (node.y - centroid.y) * strength * alpha;\n          }\n        });\n      }\n      \n      force.initialize = function(_) {\n        nodes = _;\n      };\n      \n      return force;\n    }\n\n    // Draw links with modern styling\n    const link = container.append(''g'')\n      .attr(''class'', ''links'')\n      .selectAll(''line'')\n      .data(links)\n      .enter().append(''line'')\n      .attr(''stroke'', ''url(#link-gradient)'')\n      .attr(''stroke-opacity'', d => d.value * 0.2)\n      .attr(''stroke-width'', d => Math.max(0.5, d.value * 2))\n      .attr(''stroke-linecap'', ''round'');\n    \n    // Add gradient for links\n    const linkGradient = defs.append(''linearGradient'')\n      .attr(''id'', ''link-gradient'')\n      .attr(''gradientUnits'', ''userSpaceOnUse'');\n    \n    linkGradient.append(''stop'')\n      .attr(''offset'', ''0%'')\n      .attr(''stop-color'', ''#e0e0e0'')\n      .attr(''stop-opacity'', 0.3);\n    \n    linkGradient.append(''stop'')\n      .attr(''offset'', ''50%'')\n      .attr(''stop-color'', ''#c0c0c0'')\n      .attr(''stop-opacity'', 0.5);\n    \n    linkGradient.append(''stop'')\n      .attr(''offset'', ''100%'')\n      .attr(''stop-color'', ''#e0e0e0'')\n      .attr(''stop-opacity'', 0.3);\n\n    // Create node groups\n    const node = container.append(''g'')\n      .attr(''class'', ''nodes'')\n      .selectAll(''g'')\n      .data(prompts)\n      .enter().append(''g'')\n      .attr(''cursor'', ''pointer'')\n      .call(d3.drag()\n        .on(''start'', dragstarted)\n        .on(''drag'', dragged)\n        .on(''end'', dragended));\n\n    // Add shadow circles\n    node.append(''circle'')\n      .attr(''r'', d => {\n        const textLength = d.TemplateText?.length || 0;\n        return Math.min(25, Math.max(12, Math.sqrt(textLength / 40))) + 2;\n      })\n      .attr(''fill'', ''black'')\n      .attr(''opacity'', 0.1)\n      .attr(''transform'', ''translate(2, 2)'');\n    \n    // Add main circles for nodes with modern styling\n    node.append(''circle'')\n      .attr(''class'', ''node-circle'')\n      .attr(''r'', d => {\n        // Size based on template text length\n        const textLength = d.TemplateText?.length || 0;\n        return Math.min(25, Math.max(12, Math.sqrt(textLength / 40)));\n      })\n      .attr(''fill'', d => {\n        if (highlightCluster !== null && d.cluster !== highlightCluster) {\n          return ''#f5f5f5'';\n        }\n        return `url(#cluster-gradient-$' + '{d.cluster % solidColors.length})`;\n      })\n      .attr(''stroke'', d => {\n        if (d.ID === selectedPromptId) return ''#00ff88''; // Neon green for selection\n        if (d.ID === hoveredNode) return solidColors[d.cluster % solidColors.length];\n        return ''white'';\n      })\n      .attr(''stroke-width'', d => {\n        if (d.ID === selectedPromptId) return 5;\n        if (d.ID === hoveredNode) return 3;\n        return 2;\n      })\n      .attr(''opacity'', d => {\n        if (highlightCluster !== null && d.cluster !== highlightCluster) {\n          return 0.2;\n        }\n        return 1;\n      })\n      .attr(''filter'', d => {\n        if (d.ID === selectedPromptId) return ''url(#selection-glow)'';\n        if (d.ID === hoveredNode) return ''url(#glow)'';\n        return null;\n      })\n      .style(''transition'', ''all 0.3s ease'');\n\n    // Add labels with modern typography\n    const labels = node.append(''foreignObject'')\n      .attr(''x'', -45)\n      .attr(''y'', -40)\n      .attr(''width'', 90)\n      .attr(''height'', 28)\n      .attr(''pointer-events'', ''none'');\n    \n    labels.append(''xhtml:div'')\n      .style(''text-align'', ''center'')\n      .style(''font-size'', ''12px'')\n      .style(''font-weight'', ''500'')\n      .style(''color'', ''#2d3748'')\n      .style(''line-height'', ''14px'')\n      .style(''overflow'', ''hidden'')\n      .style(''text-overflow'', ''ellipsis'')\n      .style(''display'', ''-webkit-box'')\n      .style(''-webkit-line-clamp'', ''2'')\n      .style(''-webkit-box-orient'', ''vertical'')\n      .style(''text-shadow'', ''0 1px 2px rgba(255,255,255,0.8)'')\n      .text(d => d.Name || ''Unnamed'');\n\n    // Add modern tooltips\n    const tooltip = d3.select(''body'').append(''div'')\n      .attr(''class'', ''graph-tooltip'')\n      .style(''opacity'', 0)\n      .style(''position'', ''absolute'')\n      .style(''padding'', ''12px'')\n      .style(''background'', ''linear-gradient(135deg, rgba(255,255,255,0.98) 0%, rgba(249,250,251,0.98) 100%)'')\n      .style(''color'', ''#2d3748'')\n      .style(''border-radius'', ''12px'')\n      .style(''pointer-events'', ''none'')\n      .style(''font-size'', ''13px'')\n      .style(''max-width'', ''320px'')\n      .style(''box-shadow'', ''0 10px 40px rgba(0,0,0,0.15), 0 2px 10px rgba(0,0,0,0.1)'')\n      .style(''border'', ''1px solid rgba(255,255,255,0.8)'')\n      .style(''backdrop-filter'', ''blur(10px)'');\n\n    // Node interactions\n    node\n      .on(''click'', (event, d) => {\n        event.stopPropagation();\n        onNodeClick(d);\n      })\n      .on(''mouseover'', (event, d) => {\n        setHoveredNode(d.ID);\n        onNodeHover(d);\n        \n        tooltip.transition()\n          .duration(200)\n          .style(''opacity'', .9);\n        \n        tooltip.html(`\n          <div style=\"font-weight: 600; margin-bottom: 8px; color: #1a202c; font-size: 14px;\">$' + '{d.Name}</div>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px; margin-bottom: 8px;\">\n            <span style=\"padding: 2px 8px; background: #edf2f7; border-radius: 4px; font-size: 11px;\">\n              $' + '{d.Category || ''No Category''}\n            </span>\n            <span style=\"padding: 2px 8px; background: #edf2f7; border-radius: 4px; font-size: 11px;\">\n              $' + '{d.Type || ''No Type''}\n            </span>\n            <span style=\"padding: 2px 8px; background: $' + '{solidColors[d.cluster % solidColors.length]}20; border-radius: 4px; font-size: 11px; color: $' + '{solidColors[d.cluster % solidColors.length]};\">\n              Cluster $' + '{d.cluster + 1}\n            </span>\n          </div>\n          $' + '{d.Description ? `<div style=\"font-size: 12px; color: #4a5568; line-height: 1.4;\">$' + '{d.Description.substring(0, 120)}$' + '{d.Description.length > 120 ? ''...'' : ''''}</div>` : ''''}\n        `)\n          .style(''left'', (event.pageX + 10) + ''px'')\n          .style(''top'', (event.pageY - 28) + ''px'');\n      })\n      .on(''mouseout'', () => {\n        setHoveredNode(null);\n        tooltip.transition()\n          .duration(500)\n          .style(''opacity'', 0);\n      });\n\n    // Click on background to deselect\n    svg.on(''click'', () => {\n      onNodeClick(null);\n    });\n\n    // Update positions on simulation tick\n    simulation.on(''tick'', () => {\n      link\n        .attr(''x1'', d => d.source.x)\n        .attr(''y1'', d => d.source.y)\n        .attr(''x2'', d => d.target.x)\n        .attr(''y2'', d => d.target.y);\n\n      node.attr(''transform'', d => `translate($' + '{d.x},$' + '{d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Cleanup on unmount\n    return () => {\n      simulation.stop();\n      tooltip.remove();\n    };\n  }, [prompts, clusters, selectedPromptId, similarityThreshold, highlightCluster, dimensions]);\n\n  // Zoom control functions - don''t use useCallback to ensure we have current refs\n  const handleZoomIn = () => {\n    if (!svgRef.current || !zoomBehavior.current) {\n      console.warn(''Zoom in - refs not ready'');\n      return;\n    }\n    \n    const svg = d3.select(svgRef.current);\n    const currentZoom = currentTransform.current ? currentTransform.current.k : 1;\n    const newZoom = Math.min(currentZoom * 1.5, 10);\n    \n    svg.transition()\n      .duration(300)\n      .call(zoomBehavior.current.scaleTo, newZoom);\n  };\n  \n  const handleZoomOut = () => {\n    if (!svgRef.current || !zoomBehavior.current) {\n      console.warn(''Zoom out - refs not ready'');\n      return;\n    }\n    \n    const svg = d3.select(svgRef.current);\n    const currentZoom = currentTransform.current ? currentTransform.current.k : 1;\n    const newZoom = Math.max(currentZoom / 1.5, 0.1);\n    \n    svg.transition()\n      .duration(300)\n      .call(zoomBehavior.current.scaleTo, newZoom);\n  };\n  \n  const handleResetZoom = () => {\n    if (!svgRef.current || !zoomBehavior.current) {\n      console.warn(''Reset zoom - refs not ready'');\n      return;\n    }\n    \n    const svg = d3.select(svgRef.current);\n    svg.transition()\n      .duration(300)\n      .call(zoomBehavior.current.transform, d3.zoomIdentity);\n    currentTransform.current = d3.zoomIdentity;\n  };\n  \n  // Cluster legend\n  const uniqueClusters = useMemo(() => {\n    if (!clusters || clusters.length === 0) return [];\n    const clusterSet = new Set(clusters.map(p => p.cluster));\n    return Array.from(clusterSet).sort((a, b) => a - b);\n  }, [clusters]);\n\n  return (\n    <div style={{ \n      width: ''100%'', \n      height: ''100%'', \n      position: ''relative'',\n      background: ''linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)'',\n      borderRadius: ''16px'',\n      overflow: ''hidden''\n    }}>\n      <svg\n        ref={svgRef}\n        width={dimensions.width}\n        height={dimensions.height}\n        style={{ width: ''100%'', height: ''100%'' }}\n      />\n      \n      {/* Modern Zoom Controls */}\n      <div style={{\n        position: ''absolute'',\n        top: ''20px'',\n        left: ''20px'',\n        display: ''flex'',\n        flexDirection: ''column'',\n        gap: ''8px'',\n        zIndex: 10\n      }}>\n        <button\n          onClick={handleZoomIn}\n          style={{\n            width: ''40px'',\n            height: ''40px'',\n            borderRadius: ''10px'',\n            border: ''none'',\n            backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n            color: ''#4a5568'',\n            cursor: ''pointer'',\n            fontSize: ''18px'',\n            display: ''flex'',\n            alignItems: ''center'',\n            justifyContent: ''center'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.1)'',\n            transition: ''all 0.2s ease''\n          }}\n          onMouseEnter={e => e.currentTarget.style.transform = ''scale(1.1)''}\n          onMouseLeave={e => e.currentTarget.style.transform = ''scale(1)''}\n          title=\"Zoom In\"\n        >\n          <i className=\"fa-solid fa-plus\"></i>\n        </button>\n        \n        <button\n          onClick={handleZoomOut}\n          style={{\n            width: ''40px'',\n            height: ''40px'',\n            borderRadius: ''10px'',\n            border: ''none'',\n            backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n            color: ''#4a5568'',\n            cursor: ''pointer'',\n            fontSize: ''18px'',\n            display: ''flex'',\n            alignItems: ''center'',\n            justifyContent: ''center'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.1)'',\n            transition: ''all 0.2s ease''\n          }}\n          onMouseEnter={e => e.currentTarget.style.transform = ''scale(1.1)''}\n          onMouseLeave={e => e.currentTarget.style.transform = ''scale(1)''}\n          title=\"Zoom Out\"\n        >\n          <i className=\"fa-solid fa-minus\"></i>\n        </button>\n        \n        <button\n          onClick={handleResetZoom}\n          style={{\n            width: ''40px'',\n            height: ''40px'',\n            borderRadius: ''10px'',\n            border: ''none'',\n            backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n            color: ''#4a5568'',\n            cursor: ''pointer'',\n            fontSize: ''16px'',\n            display: ''flex'',\n            alignItems: ''center'',\n            justifyContent: ''center'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.1)'',\n            transition: ''all 0.2s ease''\n          }}\n          onMouseEnter={e => e.currentTarget.style.transform = ''scale(1.1)''}\n          onMouseLeave={e => e.currentTarget.style.transform = ''scale(1)''}\n          title=\"Reset View\"\n        >\n          <i className=\"fa-solid fa-expand\"></i>\n        </button>\n      </div>\n      \n      {/* Modern Cluster Legend */}\n      <div style={{\n        position: ''absolute'',\n        top: ''20px'',\n        right: ''20px'',\n        backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n        padding: ''16px'',\n        borderRadius: ''12px'',\n        fontSize: ''13px'',\n        boxShadow: ''0 4px 12px rgba(0,0,0,0.08)'',\n        backdropFilter: ''blur(10px)'',\n        minWidth: ''200px'',\n        maxWidth: ''280px''\n      }}>\n        <div style={{ \n          fontWeight: ''600'', \n          marginBottom: ''12px'',\n          color: ''#2d3748'',\n          fontSize: ''14px''\n        }}>\n          Clusters\n        </div>\n        {uniqueClusters.map(cluster => {\n          const clusterName = clusterNames[cluster] || `Cluster $' + '{cluster + 1}`;\n          return (\n            <div\n              key={cluster}\n              style={{\n                display: ''flex'',\n                alignItems: ''flex-start'',\n                marginBottom: ''10px'',\n                cursor: ''pointer'',\n                opacity: highlightCluster !== null && highlightCluster !== cluster ? 0.4 : 1,\n                transition: ''all 0.2s ease'',\n                padding: ''6px 8px'',\n                borderRadius: ''6px'',\n                backgroundColor: highlightCluster === cluster ? `$' + '{solidColors[cluster % solidColors.length]}15` : ''transparent''\n              }}\n              onClick={() => onClusterSelect(cluster)}\n              onMouseEnter={e => e.currentTarget.style.backgroundColor = `$' + '{solidColors[cluster % solidColors.length]}10`}\n              onMouseLeave={e => e.currentTarget.style.backgroundColor = highlightCluster === cluster ? `$' + '{solidColors[cluster % solidColors.length]}15` : ''transparent''}\n              title={clusterName}\n            >\n              <div\n                style={{\n                  width: ''16px'',\n                  height: ''16px'',\n                  background: `linear-gradient(135deg, $' + '{solidColors[cluster % solidColors.length]} 0%, $' + '{d3.color(solidColors[cluster % solidColors.length]).darker(0.3)} 100%)`,\n                  marginRight: ''10px'',\n                  marginTop: ''2px'',\n                  borderRadius: ''50%'',\n                  border: ''2px solid white'',\n                  boxShadow: ''0 2px 4px rgba(0,0,0,0.1)'',\n                  flexShrink: 0\n                }}\n              />\n              <span style={{ \n                color: ''#4a5568'', \n                fontWeight: ''500'',\n                display: ''block'',\n                lineHeight: ''1.3'',\n                wordWrap: ''break-word'',\n                whiteSpace: ''normal''\n              }}>\n                {clusterName}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n      \n      {/* Modern Instructions */}\n      <div style={{\n        position: ''absolute'',\n        bottom: ''20px'',\n        left: ''50%'',\n        transform: ''translateX(-50%)'',\n        backgroundColor: ''rgba(255, 255, 255, 0.95)'',\n        padding: ''8px 16px'',\n        borderRadius: ''20px'',\n        fontSize: ''12px'',\n        color: ''#718096'',\n        boxShadow: ''0 2px 8px rgba(0,0,0,0.08)'',\n        backdropFilter: ''blur(10px)'',\n        display: ''flex'',\n        gap: ''16px'',\n        alignItems: ''center''\n      }}>\n        <span><i className=\"fa-solid fa-hand\" style={{ marginRight: ''4px'' }}></i>Drag to pan</span>\n        <span>•</span>\n        <span><i className=\"fa-solid fa-magnifying-glass\" style={{ marginRight: ''4px'' }}></i>Scroll to zoom</span>\n        <span>•</span>\n        <span><i className=\"fa-solid fa-pointer\" style={{ marginRight: ''4px'' }}></i>Click to select</span>\n      </div>\n    </div>\n  );\n}","functionalRequirements":"Render interactive force-directed graph with prompts as nodes, display clusters with different colors, show similarity connections between prompts, support zoom/pan navigation, highlight on hover, animate transitions","technicalDesign":"Uses D3.js force simulation for node positioning, implements clustering visualization with color coding, draws edges based on similarity threshold, handles mouse interactions for selection and tooltips","properties":[{"name":"prompts","type":"array","required":true,"description":"Array of AI prompt entities with embeddings"},{"name":"clusters","type":"array","required":true,"description":"Array of cluster assignments from clustering algorithm"},{"name":"selectedPromptId","type":"string","required":false,"description":"ID of currently selected prompt"},{"name":"similarityThreshold","type":"number","required":false,"description":"Threshold for showing similarity connections (0-1)"},{"name":"highlightCluster","type":"number","required":false,"description":"Cluster index to highlight"}],"events":[{"name":"onNodeClick","description":"Fired when a node is clicked","parameters":[{"name":"prompt","type":"object","description":"The clicked prompt entity"}]},{"name":"onNodeHover","description":"Fired when hovering over a node","parameters":[{"name":"prompt","type":"object","description":"The hovered prompt entity"}]},{"name":"onClusterSelect","description":"Fired when a cluster is selected","parameters":[{"name":"clusterIndex","type":"number","description":"Index of the selected cluster"}]}],"libraries":[{"name":"d3","version":"7.8.5","globalVariable":"d3"}],"usageExample":"<AIPromptsClusterGraph prompts={prompts} clusters={clusters} />","version":"1.0.0"},{"name":"AIPromptsClusterControls","title":"AI Prompts Cluster Controls","description":"Control panel for filtering, searching, and adjusting clustering parameters","type":"panel","location":"embedded","code":"function AIPromptsClusterControls({\n  categories,\n  types,\n  currentFilters,\n  clusterCount,\n  similarityThreshold,\n  isProcessing,\n  onSearchChange,\n  onFilterChange,\n  onClusterCountChange,\n  onSimilarityThresholdChange,\n  onRecalculate,\n  onExport,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  const [localSearch, setLocalSearch] = useState(currentFilters.search || '''');\n  const searchTimeout = useRef(null);\n\n  // Debounce search input\n  const handleSearchChange = (value) => {\n    setLocalSearch(value);\n    \n    if (searchTimeout.current) {\n      clearTimeout(searchTimeout.current);\n    }\n    \n    searchTimeout.current = setTimeout(() => {\n      onSearchChange(value);\n    }, 300);\n  };\n\n  // Modern style helpers\n  const inputStyle = {\n    width: ''100%'',\n    padding: ''10px 12px'',\n    fontSize: ''14px'',\n    border: ''2px solid transparent'',\n    borderRadius: ''10px'',\n    backgroundColor: ''rgba(255, 255, 255, 0.9)'',\n    backdropFilter: ''blur(10px)'',\n    transition: ''all 0.3s ease'',\n    outline: ''none'',\n    color: ''#2d3748''\n  };\n\n  const labelStyle = {\n    display: ''block'',\n    marginBottom: ''6px'',\n    fontSize: ''13px'',\n    fontWeight: ''600'',\n    color: ''#4a5568'',\n    letterSpacing: ''0.025em'',\n    textTransform: ''uppercase''\n  };\n\n  const sectionStyle = {\n    marginBottom: ''20px'',\n    padding: ''16px'',\n    background: ''linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(249,250,251,0.95) 100%)'',\n    borderRadius: ''16px'',\n    boxShadow: ''0 4px 12px rgba(0,0,0,0.05)'',\n    backdropFilter: ''blur(10px)'',\n    border: ''1px solid rgba(255,255,255,0.8)''\n  };\n\n  const buttonStyle = {\n    width: ''100%'',\n    padding: ''12px 16px'',\n    fontSize: ''14px'',\n    fontWeight: ''600'',\n    border: ''none'',\n    borderRadius: ''12px'',\n    cursor: isProcessing ? ''not-allowed'' : ''pointer'',\n    transition: ''all 0.3s ease'',\n    background: ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n    color: ''white'',\n    boxShadow: ''0 4px 12px rgba(102, 126, 234, 0.3)''\n  };\n\n  return (\n    <div style={{ height: ''100%'', overflowY: ''auto'' }}>\n      {/* Search */}\n      <div style={sectionStyle}>\n        <label style={labelStyle}>\n          <i className=\"fa-solid fa-magnifying-glass\" style={{ marginRight: ''6px'' }}></i>\n          Search\n        </label>\n        <div style={{ position: ''relative'' }}>\n          <input\n            type=\"text\"\n            value={localSearch}\n            onChange={(e) => handleSearchChange(e.target.value)}\n            placeholder=\"Search prompts...\"\n            style={{\n              ...inputStyle,\n              paddingLeft: ''40px''\n            }}\n            onFocus={(e) => {\n              e.target.style.borderColor = ''#667eea'';\n              e.target.style.boxShadow = ''0 0 0 3px rgba(102, 126, 234, 0.1)'';\n            }}\n            onBlur={(e) => {\n              e.target.style.borderColor = ''transparent'';\n              e.target.style.boxShadow = ''none'';\n            }}\n            disabled={isProcessing}\n          />\n          <i className=\"fa-solid fa-magnifying-glass\" style={{\n            position: ''absolute'',\n            left: ''14px'',\n            top: ''50%'',\n            transform: ''translateY(-50%)'',\n            color: ''#a0aec0'',\n            fontSize: ''14px''\n          }}></i>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div style={sectionStyle}>\n        <h4 style={{\n          margin: ''0 0 16px 0'',\n          fontSize: ''15px'',\n          fontWeight: ''600'',\n          color: ''#2d3748'',\n          display: ''flex'',\n          alignItems: ''center''\n        }}>\n          <i className=\"fa-solid fa-filter\" style={{ marginRight: ''8px'', color: ''#667eea'' }}></i>\n          Filters\n        </h4>\n\n        {/* Category filter */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={labelStyle}>Category</label>\n          <select\n            value={currentFilters.category || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              category: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map(cat => (\n              <option key={cat.id} value={cat.id}>{cat.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Type filter */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={labelStyle}>Type</label>\n          <select\n            value={currentFilters.type || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              type: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Types</option>\n            {types.map(type => (\n              <option key={type.id} value={type.id}>{type.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Status filter */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={labelStyle}>Status</label>\n          <select\n            value={currentFilters.status || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              status: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Pending\">Pending</option>\n            <option value=\"Disabled\">Disabled</option>\n          </select>\n        </div>\n\n        {/* Role filter */}\n        <div>\n          <label style={labelStyle}>Prompt Role</label>\n          <select\n            value={currentFilters.role || ''''}\n            onChange={(e) => onFilterChange({\n              ...currentFilters,\n              role: e.target.value || null\n            })}\n            style={inputStyle}\n            disabled={isProcessing}\n          >\n            <option value=\"\">All Roles</option>\n            <option value=\"System\">System</option>\n            <option value=\"User\">User</option>\n            <option value=\"Assistant\">Assistant</option>\n            <option value=\"SystemOrUser\">System or User</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Clustering Parameters */}\n      <div style={sectionStyle}>\n        <h4 style={{\n          margin: ''0 0 16px 0'',\n          fontSize: ''15px'',\n          fontWeight: ''600'',\n          color: ''#2d3748'',\n          display: ''flex'',\n          alignItems: ''center''\n        }}>\n          <i className=\"fa-solid fa-diagram-project\" style={{ marginRight: ''8px'', color: ''#667eea'' }}></i>\n          Clustering\n        </h4>\n\n        {/* Number of clusters */}\n        <div style={{ marginBottom: styles.spacing?.sm || ''8px'' }}>\n          <label style={{...labelStyle, display: ''flex'', justifyContent: ''space-between'', marginBottom: ''10px''}}>\n            <span>Clusters</span>\n            <span style={{\n              background: ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n              color: ''white'',\n              padding: ''2px 8px'',\n              borderRadius: ''6px'',\n              fontSize: ''12px'',\n              fontWeight: ''600''\n            }}>{clusterCount}</span>\n          </label>\n          <input\n            type=\"range\"\n            min=\"2\"\n            max=\"15\"\n            value={clusterCount}\n            onChange={(e) => onClusterCountChange(parseInt(e.target.value))}\n            style={{ width: ''100%'' }}\n            disabled={isProcessing}\n          />\n          <div style={{\n            display: ''flex'',\n            justifyContent: ''space-between'',\n            fontSize: styles.fonts?.sizes?.xs || ''10px'',\n            color: styles.colors?.text?.secondary || ''#666''\n          }}>\n            <span>2</span>\n            <span>15</span>\n          </div>\n        </div>\n\n        {/* Similarity threshold */}\n        <div>\n          <label style={{...labelStyle, display: ''flex'', justifyContent: ''space-between'', marginBottom: ''10px''}}>\n            <span>Similarity</span>\n            <span style={{\n              background: ''linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'',\n              color: ''white'',\n              padding: ''2px 8px'',\n              borderRadius: ''6px'',\n              fontSize: ''12px'',\n              fontWeight: ''600''\n            }}>{(similarityThreshold * 100).toFixed(0)}%</span>\n          </label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={similarityThreshold * 100}\n            onChange={(e) => onSimilarityThresholdChange(parseInt(e.target.value) / 100)}\n            style={{ width: ''100%'' }}\n            disabled={isProcessing}\n          />\n          <div style={{\n            display: ''flex'',\n            justifyContent: ''space-between'',\n            fontSize: styles.fonts?.sizes?.xs || ''10px'',\n            color: styles.colors?.text?.secondary || ''#666''\n          }}>\n            <span>0%</span>\n            <span>100%</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Actions */}\n      <div style={sectionStyle}>\n        <button\n          onClick={onRecalculate}\n          disabled={isProcessing}\n          style={{\n            ...buttonStyle,\n            opacity: isProcessing ? 0.6 : 1,\n            marginBottom: ''12px''\n          }}\n          onMouseEnter={e => !isProcessing && (e.currentTarget.style.transform = ''translateY(-2px)'')}\n          onMouseLeave={e => e.currentTarget.style.transform = ''translateY(0)''}\n        >\n          {isProcessing ? (\n            <>\n              <i className=\"fa-solid fa-spinner fa-spin\" style={{ marginRight: ''8px'' }}></i>\n              Processing...\n            </>\n          ) : (\n            <>\n              <i className=\"fa-solid fa-wand-magic-sparkles\" style={{ marginRight: ''8px'' }}></i>\n              Generate Clusters\n            </>\n          )}\n        </button>\n\n        <button\n          onClick={onExport}\n          disabled={isProcessing}\n          style={{\n            ...buttonStyle,\n            background: ''linear-gradient(135deg, #ffffff 0%, #f9fafb 100%)'',\n            color: ''#4a5568'',\n            border: ''2px solid #e2e8f0'',\n            boxShadow: ''0 2px 8px rgba(0,0,0,0.05)''\n          }}\n          onMouseEnter={e => !isProcessing && (e.currentTarget.style.transform = ''translateY(-2px)'')}\n          onMouseLeave={e => e.currentTarget.style.transform = ''translateY(0)''}\n        >\n          <i className=\"fa-solid fa-download\" style={{ marginRight: ''8px'' }}></i>\n          Export CSV\n        </button>\n      </div>\n\n      {/* Statistics */}\n      <div style={{\n        ...sectionStyle,\n        fontSize: styles.fonts?.sizes?.xs || ''12px'',\n        color: styles.colors?.text?.secondary || ''#666''\n      }}>\n        <h4 style={{\n          margin: `0 0 $' + '{styles.spacing?.xs || ''4px''} 0`,\n          fontSize: styles.fonts?.sizes?.sm || ''14px'',\n          color: styles.colors?.text?.primary || ''#333''\n        }}>\n          Statistics\n        </h4>\n        <div>Categories: {categories.length}</div>\n        <div>Types: {types.length}</div>\n        <div>Active Filters: {\n          Object.values(currentFilters).filter(v => v).length\n        }</div>\n      </div>\n    </div>\n  );\n}","functionalRequirements":"Provide search input for finding prompts, filter by category/type/status, adjust clustering parameters, control similarity threshold, toggle view options, export cluster assignments","technicalDesign":"React component with controlled inputs for various filters and parameters, emits change events to parent component for re-clustering or re-filtering","properties":[{"name":"categories","type":"array","required":true,"description":"Available prompt categories for filtering"},{"name":"types","type":"array","required":true,"description":"Available prompt types for filtering"},{"name":"currentFilters","type":"object","required":true,"description":"Current filter state"},{"name":"clusterCount","type":"number","required":true,"description":"Number of clusters to generate"},{"name":"similarityThreshold","type":"number","required":true,"description":"Current similarity threshold"},{"name":"isProcessing","type":"boolean","required":true,"description":"Whether embeddings are being generated"}],"events":[{"name":"onSearchChange","description":"Fired when search text changes","parameters":[{"name":"searchText","type":"string","description":"The search query"}]},{"name":"onFilterChange","description":"Fired when filters are updated","parameters":[{"name":"filters","type":"object","description":"Updated filter object"}]},{"name":"onClusterCountChange","description":"Fired when cluster count is adjusted","parameters":[{"name":"count","type":"number","description":"New cluster count"}]},{"name":"onSimilarityThresholdChange","description":"Fired when similarity threshold changes","parameters":[{"name":"threshold","type":"number","description":"New threshold value"}]},{"name":"onRecalculate","description":"Fired when user requests recalculation","parameters":[]},{"name":"onExport","description":"Fired when user wants to export clusters","parameters":[]}],"libraries":[],"usageExample":"<AIPromptsClusterControls categories={categories} onFilterChange={handleFilterChange} />","version":"1.0.0"},{"name":"AIPromptsClusterDetails","title":"AI Prompts Cluster Details","description":"Detail panel showing selected prompt information and similar prompts","type":"panel","location":"embedded","code":"function AIPromptsClusterDetails({\n  selectedPrompt,\n  allPrompts,\n  clusterInfo,\n  similarPrompts,\n  onPromptNavigate,\n  onEditPrompt,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  const [expandedSection, setExpandedSection] = useState(''details'');\n  const [showFullTemplate, setShowFullTemplate] = useState(false);\n\n  // Modern style helpers\n  const sectionStyle = {\n    marginBottom: ''20px'',\n    padding: ''16px'',\n    background: ''linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(249,250,251,0.95) 100%)'',\n    borderRadius: ''16px'',\n    boxShadow: ''0 4px 12px rgba(0,0,0,0.05)'',\n    backdropFilter: ''blur(10px)'',\n    border: ''1px solid rgba(255,255,255,0.8)''\n  };\n\n  const headerStyle = {\n    fontSize: ''15px'',\n    fontWeight: ''600'',\n    color: ''#2d3748'',\n    marginBottom: ''12px'',\n    cursor: ''pointer'',\n    display: ''flex'',\n    alignItems: ''center'',\n    justifyContent: ''space-between'',\n    padding: ''8px'',\n    borderRadius: ''8px'',\n    transition: ''all 0.2s ease''\n  };\n\n  const labelStyle = {\n    fontSize: ''12px'',\n    fontWeight: ''600'',\n    color: ''#718096'',\n    marginBottom: ''6px'',\n    textTransform: ''uppercase'',\n    letterSpacing: ''0.025em''\n  };\n\n  const valueStyle = {\n    fontSize: ''14px'',\n    color: ''#2d3748'',\n    marginBottom: ''12px'',\n    lineHeight: ''1.5''\n  };\n\n  const badgeStyle = {\n    display: ''inline-block'',\n    padding: ''4px 10px'',\n    fontSize: ''12px'',\n    fontWeight: ''600'',\n    borderRadius: ''8px'',\n    marginRight: ''8px''\n  };\n\n  // Format template text with basic syntax highlighting\n  const formatTemplateText = (text) => {\n    if (!text) return ''No template text'';\n    \n    // Truncate if needed\n    const displayText = showFullTemplate \n      ? text \n      : text.length > 500 ? text.substring(0, 500) + ''...'' : text;\n    \n    // Basic syntax highlighting for variables\n    const highlighted = displayText.replace(\n      /\\{\\{([^}]+)\\}\\}/g,\n      ''<span style=\"color: #0066cc; font-weight: bold;\">{{$1}}</span>''\n    );\n    \n    return (\n      <div style={{ position: ''relative'' }}>\n        <pre style={{\n          whiteSpace: ''pre-wrap'',\n          wordWrap: ''break-word'',\n          fontFamily: ''monospace'',\n          fontSize: styles.fonts?.sizes?.xs || ''12px'',\n          backgroundColor: styles.colors?.surface || ''white'',\n          padding: styles.spacing?.sm || ''8px'',\n          borderRadius: styles.borders?.radius || ''4px'',\n          border: `1px solid $' + '{styles.colors?.border || ''#ddd''}`,\n          maxHeight: showFullTemplate ? ''none'' : ''200px'',\n          overflow: ''hidden''\n        }} dangerouslySetInnerHTML={{ __html: highlighted }} />\n        \n        {text.length > 500 && (\n          <button\n            onClick={() => setShowFullTemplate(!showFullTemplate)}\n            style={{\n              marginTop: styles.spacing?.xs || ''4px'',\n              padding: `2px 8px`,\n              fontSize: styles.fonts?.sizes?.xs || ''12px'',\n              backgroundColor: styles.colors?.primary || ''#007bff'',\n              color: ''white'',\n              border: ''none'',\n              borderRadius: styles.borders?.radius || ''4px'',\n              cursor: ''pointer''\n            }}\n          >\n            {showFullTemplate ? ''Show Less'' : ''Show More''}\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  if (!selectedPrompt) {\n    return (\n      <div style={{\n        display: ''flex'',\n        alignItems: ''center'',\n        justifyContent: ''center'',\n        height: ''100%'',\n        color: styles.colors?.text?.secondary || ''#666'',\n        fontSize: styles.fonts?.sizes?.sm || ''14px'',\n        textAlign: ''center''\n      }}>\n        Select a prompt from the graph to view details\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {/* Modern Header */}\n      <div style={{\n        marginBottom: ''24px'',\n        padding: ''20px'',\n        background: ''linear-gradient(135deg, #667eea 0%, #764ba2 100%)'',\n        borderRadius: ''16px'',\n        boxShadow: ''0 8px 24px rgba(102, 126, 234, 0.2)'',\n        position: ''relative''\n      }}>\n        <div style={{\n          display: ''flex'',\n          justifyContent: ''space-between'',\n          alignItems: ''flex-start''\n        }}>\n          <div style={{ flex: 1 }}>\n            <h3 style={{\n              fontSize: ''20px'',\n              fontWeight: ''600'',\n              color: ''white'',\n              margin: 0,\n              marginBottom: ''8px''\n            }}>\n              {selectedPrompt.Name}\n            </h3>\n            <div style={{ display: ''flex'', gap: ''8px'', flexWrap: ''wrap'' }}>\n              {selectedPrompt.Category && (\n                <span style={{\n                  padding: ''3px 10px'',\n                  background: ''rgba(255,255,255,0.2)'',\n                  borderRadius: ''6px'',\n                  fontSize: ''12px'',\n                  color: ''white'',\n                  fontWeight: ''500''\n                }}>\n                  {selectedPrompt.Category}\n                </span>\n              )}\n              {selectedPrompt.Type && (\n                <span style={{\n                  padding: ''3px 10px'',\n                  background: ''rgba(255,255,255,0.2)'',\n                  borderRadius: ''6px'',\n                  fontSize: ''12px'',\n                  color: ''white'',\n                  fontWeight: ''500''\n                }}>\n                  {selectedPrompt.Type}\n                </span>\n              )}\n              {selectedPrompt.Status && (\n                <span style={{\n                  padding: ''3px 10px'',\n                  background: selectedPrompt.Status === ''Active'' \n                    ? ''rgba(72, 187, 120, 0.3)'' \n                    : ''rgba(255,255,255,0.2)'',\n                  borderRadius: ''6px'',\n                  fontSize: ''12px'',\n                  color: ''white'',\n                  fontWeight: ''500''\n                }}>\n                  {selectedPrompt.Status}\n                </span>\n              )}\n            </div>\n          </div>\n          \n          {/* Action button */}\n          <button\n            onClick={() => onEditPrompt(selectedPrompt.ID)}\n            style={{\n              width: ''40px'',\n              height: ''40px'',\n              backgroundColor: ''rgba(255,255,255,0.2)'',\n              backdropFilter: ''blur(10px)'',\n              color: ''white'',\n              fontSize: ''16px'',\n              border: ''none'',\n              borderRadius: ''10px'',\n              cursor: ''pointer'',\n              display: ''flex'',\n              alignItems: ''center'',\n              justifyContent: ''center'',\n              transition: ''all 0.2s ease''\n            }}\n            onMouseEnter={e => {\n              e.currentTarget.style.backgroundColor = ''rgba(255,255,255,0.3)'';\n              e.currentTarget.style.transform = ''scale(1.05)'';\n            }}\n            onMouseLeave={e => {\n              e.currentTarget.style.backgroundColor = ''rgba(255,255,255,0.2)'';\n              e.currentTarget.style.transform = ''scale(1)'';\n            }}\n            title=\"Open Prompt Record\"\n          >\n            <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\n          </button>\n        </div>\n      </div>\n\n      {/* Prompt Details */}\n      <div style={sectionStyle}>\n        <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''details'' ? null : ''details'')}>\n          <span>Prompt Details</span>\n          <span>{expandedSection === ''details'' ? ''▼'' : ''▶''}</span>\n        </div>\n        \n        {expandedSection === ''details'' && (\n          <div>\n            {selectedPrompt.Description && (\n              <>\n                <div style={labelStyle}>Description</div>\n                <div style={valueStyle}>{selectedPrompt.Description}</div>\n              </>\n            )}\n            \n            <div style={{ display: ''flex'', gap: styles.spacing?.md || ''16px'' }}>\n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Category</div>\n                <div style={valueStyle}>{selectedPrompt.Category || ''None''}</div>\n              </div>\n              \n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Type</div>\n                <div style={valueStyle}>{selectedPrompt.Type || ''None''}</div>\n              </div>\n            </div>\n            \n            <div style={{ display: ''flex'', gap: styles.spacing?.md || ''16px'' }}>\n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Status</div>\n                <div style={{\n                  ...badgeStyle,\n                  backgroundColor: selectedPrompt.Status === ''Active'' \n                    ? ''#d4edda'' \n                    : selectedPrompt.Status === ''Disabled'' \n                    ? ''#f8d7da'' \n                    : ''#fff3cd'',\n                  color: selectedPrompt.Status === ''Active'' \n                    ? ''#155724'' \n                    : selectedPrompt.Status === ''Disabled'' \n                    ? ''#721c24'' \n                    : ''#856404''\n                }}>\n                  {selectedPrompt.Status}\n                </div>\n              </div>\n              \n              <div style={{ flex: 1 }}>\n                <div style={labelStyle}>Role</div>\n                <div style={valueStyle}>{selectedPrompt.PromptRole || ''None''}</div>\n              </div>\n            </div>\n            \n            <div style={labelStyle}>Response Format</div>\n            <div style={valueStyle}>{selectedPrompt.ResponseFormat || ''Text''}</div>\n          </div>\n        )}\n      </div>\n\n      {/* Template Text */}\n      <div style={sectionStyle}>\n        <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''template'' ? null : ''template'')}>\n          <span>Template Text</span>\n          <span>{expandedSection === ''template'' ? ''▼'' : ''▶''}</span>\n        </div>\n        \n        {expandedSection === ''template'' && (\n          <div>\n            {formatTemplateText(selectedPrompt.TemplateText)}\n          </div>\n        )}\n      </div>\n\n      {/* Cluster Information */}\n      {clusterInfo && (\n        <div style={sectionStyle}>\n          <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''cluster'' ? null : ''cluster'')}>\n            <span>Cluster Information</span>\n            <span>{expandedSection === ''cluster'' ? ''▼'' : ''▶''}</span>\n          </div>\n          \n          {expandedSection === ''cluster'' && (\n            <div>\n              <div style={labelStyle}>Cluster</div>\n              <div style={valueStyle}>\n                Cluster {clusterInfo.clusterIndex + 1} ({clusterInfo.clusterSize} members)\n              </div>\n              \n              <div style={labelStyle}>Other Members</div>\n              <div style={{\n                maxHeight: ''150px'',\n                overflowY: ''auto'',\n                fontSize: styles.fonts?.sizes?.sm || ''14px''\n              }}>\n                {clusterInfo.clusterMembers\n                  .filter(p => p.ID !== selectedPrompt.ID)\n                  .map(prompt => (\n                    <div\n                      key={prompt.ID}\n                      style={{\n                        padding: styles.spacing?.xs || ''4px'',\n                        marginBottom: ''2px'',\n                        backgroundColor: styles.colors?.surface || ''white'',\n                        borderRadius: styles.borders?.radius || ''4px'',\n                        cursor: ''pointer'',\n                        '':hover'': {\n                          backgroundColor: styles.colors?.hover || ''#f0f0f0''\n                        }\n                      }}\n                      onClick={() => onPromptNavigate(prompt.ID)}\n                    >\n                      {prompt.Name}\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Similar Prompts */}\n      {similarPrompts && similarPrompts.length > 0 && (\n        <div style={sectionStyle}>\n          <div style={headerStyle} onClick={() => setExpandedSection(expandedSection === ''similar'' ? null : ''similar'')}>\n            <span>Similar Prompts</span>\n            <span>{expandedSection === ''similar'' ? ''▼'' : ''▶''}</span>\n          </div>\n          \n          {expandedSection === ''similar'' && (\n            <div>\n              {similarPrompts.map(({ prompt, similarity }) => (\n                <div\n                  key={prompt.ID}\n                  style={{\n                    display: ''flex'',\n                    justifyContent: ''space-between'',\n                    alignItems: ''center'',\n                    padding: styles.spacing?.xs || ''4px'',\n                    marginBottom: ''2px'',\n                    backgroundColor: styles.colors?.surface || ''white'',\n                    borderRadius: styles.borders?.radius || ''4px'',\n                    cursor: ''pointer''\n                  }}\n                  onClick={() => onPromptNavigate(prompt.ID)}\n                >\n                  <div>\n                    <div style={{ fontSize: styles.fonts?.sizes?.sm || ''14px'' }}>\n                      {prompt.Name}\n                    </div>\n                    <div style={{\n                      fontSize: styles.fonts?.sizes?.xs || ''12px'',\n                      color: styles.colors?.text?.secondary || ''#666''\n                    }}>\n                      {prompt.Category || ''No category''}\n                    </div>\n                  </div>\n                  <div style={{\n                    ...badgeStyle,\n                    backgroundColor: similarity > 0.9 ? ''#d4edda'' \n                      : similarity > 0.7 ? ''#fff3cd'' \n                      : ''#f8f8f8'',\n                    color: similarity > 0.9 ? ''#155724'' \n                      : similarity > 0.7 ? ''#856404'' \n                      : ''#666''\n                  }}>\n                    {(similarity * 100).toFixed(0)}%\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}","functionalRequirements":"Display selected prompt details including name, description, template text, show similar prompts based on vector similarity, display cluster membership info, provide navigation to prompt editor","technicalDesign":"React component that displays prompt entity details, calculates and shows top similar prompts using vector service, formats template text with syntax highlighting","properties":[{"name":"selectedPrompt","type":"object","required":false,"description":"Currently selected prompt entity"},{"name":"allPrompts","type":"array","required":true,"description":"All prompts for similarity calculation"},{"name":"clusterInfo","type":"object","required":false,"description":"Cluster information for selected prompt"},{"name":"similarPrompts","type":"array","required":false,"description":"List of similar prompts with similarity scores"}],"events":[{"name":"onPromptNavigate","description":"Fired when user wants to navigate to a prompt","parameters":[{"name":"promptId","type":"string","description":"ID of prompt to navigate to"}]},{"name":"onEditPrompt","description":"Fired when user wants to edit the prompt","parameters":[{"name":"promptId","type":"string","description":"ID of prompt to edit"}]}],"libraries":[],"usageExample":"<AIPromptsClusterDetails selectedPrompt={prompt} allPrompts={prompts} />","version":"1.0.0"}],"libraries":[{"name":"d3","version":"7.8.5","globalVariable":"d3"},{"name":"lodash","version":"4.17.21","globalVariable":"_"}],"usageExample":"<AIPromptsCluster />","version":"1.0.0"}'
SET
  @FunctionalRequirements_106bd37b = N'Load all AI prompts, generate embeddings from TemplateText, perform clustering analysis, visualize clusters in interactive graph, show prompt details on selection, provide filtering and search capabilities'
SET
  @TechnicalDesign_106bd37b = N'Main orchestrator that loads AI prompts data, manages embeddings generation and caching, coordinates sub-components for visualization and interaction, uses D3.js for graph rendering and SimpleVectorService for clustering'
SET
  @FunctionalRequirementsVector_106bd37b = N'[-0.004244554787874222,-0.04344490170478821,-0.03652302920818329,-0.04865433648228645,0.011556217446923256,0.005743979010730982,0.047427695244550705,-0.00015924812760204077,0.045152872800827026,0.008994841948151588,-0.002214152365922928,0.03703438863158226,0.009325794875621796,0.08945076167583466,-0.008880415931344032,-0.0665559321641922,-0.0026057036593556404,-0.02315664291381836,0.0280894972383976,-0.021416250616312027,-0.03004479594528675,0.01294723991304636,-0.0070998091250658035,0.017161432653665543,-0.02415972389280796,-0.03344093635678291,-0.034113019704818726,-0.019525114446878433,0.05428424850106239,-0.03725589066743851,-0.06894727051258087,0.04717474430799484,0.00044726350461132824,-0.0022182392422109842,0.00000181453333425452,-0.06192007288336754,-0.03609997779130936,0.02934376895427704,-0.055215321481227875,0.022498376667499542,0.11483531445264816,0.04928926005959511,0.046591419726610184,0.001191278686746955,-0.036338403820991516,0.022631045430898666,0.017012525349855423,-0.011621282435953617,0.035690754652023315,-0.016285501420497894,-0.0025179290678352118,0.06328072398900986,-0.019208554178476334,-0.011685773730278015,-0.032458968460559845,0.004772876854985952,-0.010586784221231937,-0.04211398959159851,0.0837453082203865,-0.003429869655519724,0.007597758900374174,0.004055307246744633,0.00040796148823574185,-0.02654450200498104,0.058468807488679886,0.05265074595808983,-0.00958765298128128,-0.08348965644836426,0.0280048456043005,0.030384555459022522,0.09154577553272247,0.0040030525997281075,-0.005193512886762619,-0.023971814662218094,-0.009601837024092674,0.007899312302470207,-0.03397652879357338,-0.0047220452688634396,-0.02483683079481125,-0.009574285708367825,0.028918994590640068,-0.0024937321431934834,-0.01636769436299801,-0.03387947753071785,-0.0413120873272419,0.04980432987213135,0.010436822660267353,-0.04991612955927849,-0.022221188992261887,0.002160710748285055,0.013142709620296955,-0.00040680886013433337,0.023695070296525955,0.007372832391411066,-0.11713103204965591,-0.023799527436494827,0.015997670590877533,-0.02098255231976509,0.0025720272678881884,0.06599438190460205,0.09656655788421631,0.03714338690042496,0.011696608737111092,0.03998120501637459,0.020763978362083435,0.02841668762266636,0.020793557167053223,-0.016338175162672997,-0.02470529079437256,0.009891447611153126,-0.043485693633556366,-0.011065295897424221,-0.043303098529577255,0.02539239265024662,-0.010271950624883175,-0.013947511091828346,0.00018601029296405613,0.05825669318437576,-0.03376567363739014,0.033837515860795975,0.036001481115818024,0.019101856276392937,-0.009625193662941456,0.05981897935271263,-0.0024198342580348253,-0.05504404753446579,-0.07552246749401093,-0.009811402298510075,-0.009608350694179535,-0.01858755573630333,-0.0017413515597581863,0.026121463626623154,0.015327224507927895,-0.006873947102576494,-0.0047357999719679356,-0.0043225400149822235,0.0264299176633358,-0.028155533596873283,-0.013014103285968304,-0.020927557721734047,0.03480693697929382,-0.01782155968248844,-0.010744626633822918,-0.01659732684493065,0.02147603966295719,0.009681780822575092,-0.01767764985561371,0.03920063376426697,-0.02269251085817814,0.010950434021651745,-0.033224672079086304,0.04796886444091797,0.00019827384676318616,0.015919797122478485,-0.006828015670180321,-0.043036047369241714,-0.0008390721632167697,0.03213776648044586,-0.048744190484285355,0.03406282886862755,0.04051591455936432,0.0032800158951431513,0.027351491153240204,0.01872759684920311,-0.021905288100242615,0.0027378443628549576,-0.06749606132507324,0.013396660797297955,-0.014880788512527943,0.0073343850672245026,-0.0038543965201824903,-0.03209026902914047,-0.023171421140432358,0.022453997284173965,-0.02318922057747841,0.12180302292108536,0.0544406995177269,0.0046926625072956085,0.04661553353071213,0.011165657080709934,0.039712704718112946,-0.018827170133590698,-0.014950990676879883,0.0180586576461792,-0.022738493978977203,-0.01672728918492794,0.0202631838619709,0.049478501081466675,-0.005719443783164024,0.0032141897827386856,0.012694546021521091,0.020959563553333282,-0.002902056323364377,0.002729833358898759,0.030317699536681175,-0.004686357919126749,0.006657536141574383,-0.09081532806158066,0.029096780344843864,-0.01700032316148281,-0.025353237986564636,-0.0033596756402403116,0.035198163241147995,0.06877383589744568,0.0641167014837265,-0.047017160803079605,-0.005632758606225252,0.006165211088955402,-0.022951805964112282,0.00684193754568696,0.04421567544341087,-0.020509283989667892,-0.05189163610339165,0.0014007430290803313,-0.05515259504318237,0.0023473617620766163,-0.00912339985370636,0.022245202213525772,-0.054698288440704346,0.019210994243621826,-0.03628595918416977,-0.007259013131260872,-0.030517734587192535,0.012062249705195427,0.039024583995342255,-0.007719120476394892,0.030516600236296654,0.023787133395671844,0.036403920501470566,0.04282474145293236,-0.026968345046043396,-0.010350829921662807,0.06123587489128113,0.011271628551185131,-0.00021607763483189046,0.02789643593132496,-0.00042699225014075637,-0.0007337767165154219,-0.03419068455696106,-0.02036443166434765,-0.016944460570812225,-0.04136018827557564,-0.021305933594703674,-0.009948186576366425,-0.026359936222434044,-0.047587800770998,0.032599590718746185,0.005497137550264597,0.019015632569789886,-0.026697177439928055,0.004006102681159973,-0.03288721665740013,0.05304466187953949,0.0029390621930360794,0.005252343602478504,0.09973714500665665,0.022370101884007454,-0.017893731594085693,-0.10794806480407715,0.06089837849140167,0.0056809489615261555,0.000010150814887310844,-0.007597268559038639,0.002327751135453582,0.015302789397537708,-0.0031696795485913754,0.039505939930677414,-0.13136449456214905,-0.04745182394981384,-0.009439483284950256,-0.014098184183239937,0.016411155462265015,0.008087349124252796,-0.005451392848044634,-0.02138473652303219,0.03357890620827675,0.008685837499797344,-0.02398480847477913,0.024575883522629738,-0.013313931412994862,-0.009180919267237186,0.026379257440567017,0.00020737263548653573,0.004112365189939737,-0.05019516125321388,0.024170247837901115,0.07845859974622726,-0.012575100176036358,-0.010637436993420124,0.013587388209998608,0.005050725769251585,0.013598580844700336,0.030146747827529907,0.02631743997335434,0.006555237807333469,-0.014385423623025417,-0.013054725714027882,0.13130539655685425,-0.027279667556285858,0.06406009942293167,-0.008535698987543583,0.03835586830973625,-0.01706762984395027,0.02330702915787697,-0.017633723095059395,0.1010083556175232,0.034876998513936996,0.019306262955069542,0.05254140496253967,-0.008244256488978863,0.012523651123046875,0.0013178737135604024,-0.025039365515112877,0.006628484930843115,-0.011503943242132664,-0.04256979748606682,-0.05892552062869072,-0.032697517424821854,-0.03093934990465641,0.06915228068828583,0.0022119858767837286,-0.03840320557355881,0.056646090000867844,-0.013462451286613941,-0.014691218733787537,-0.043879102915525436,-0.05555952340364456,0.0008184752077795565,-0.040349312126636505,0.023158153519034386,0.02880125492811203,-0.03496018797159195,-0.010047439485788345,-0.014385126531124115,0.043877795338630676,0.005525116343051195,-0.012154086492955685,-0.0049081649631261826,0.014846869744360447,-0.03583504259586334,0.015318055637180805,-0.008136183954775333,-0.023868123069405556,0.0025299754925072193,0.02125805802643299,0.021528827026486397,0.04350828006863594,-0.0564221628010273,-0.0557393915951252,0.0046815695241093636,0.03267534449696541,0.038304079324007034,-0.026652004569768906,-0.010511117987334728,0.013745786622166634,0.021831588819622993,-0.004594770260155201,0.011015700176358223,-0.04176349565386772,-0.020411115139722824,0.0346938855946064,0.02090691588819027,0.02658129669725895,-0.02649475634098053,-0.00812061782926321,0.043179139494895935,0.009257117286324501,-0.05590411648154259,-0.028747349977493286,-0.0038461056537926197,-0.021646909415721893,0.005601505283266306,0.01112041063606739,0.07097499072551727,0.039675530046224594,-0.1231275349855423,-0.003063655225560069,-0.050437621772289276,-0.020508887246251106,0.006302318535745144,0.04629375413060188,-0.026591602712869644,0.050246596336364746,0.020004771649837494,0.0468534380197525,-0.016609815880656242,-0.02470099739730358,0.03127901256084442,-0.09283778071403503,0.06918002665042877,-0.009679491631686687,-0.05955017730593681,-0.004652082454413176,-0.06327662616968155,-0.0187752153724432,-0.04807458817958832,-0.04846828430891037,-0.006506037898361683,-0.02717878855764866,0.03468836471438408,-0.002125212224200368,0.01357976719737053,0.0010845258366316557,0.0009486036142334342,0.015580370090901852,0.001723665976896882,0.053259119391441345,0.05648023262619972,-0.010397532023489475,-0.03026673011481762,-0.048004571348428726,0.040666352957487106,0.013129291124641895,-0.07351360470056534,0.04054185003042221,-0.012037712149322033,-0.005646350793540478,-0.003955841530114412,0.03710595518350601,0.0385085865855217,0.0005627128412015736,-0.0060548316687345505,0.09515420347452164,-0.02168331667780876,0.00615842267870903,-0.019918978214263916,-0.004597481805831194,-0.020619714632630348,0.013371845707297325,0.02605951763689518,-0.02300507016479969,0.0489899180829525,-0.033969905227422714,0.022391516715288162,0.03939099609851837,-0.02317516691982746,-0.021623173728585243,-0.014081623405218124,0.02346566691994667,-0.030702345073223114,-0.044136956334114075,0.08303071558475494,0.10195677727460861,0.010914755053818226,-0.027142975479364395,-0.05093979462981224,-0.011880571022629738,-0.054342109709978104,0.02114425227046013,-0.020391376689076424,0.005642967764288187,-0.004946460481733084,-0.01121160201728344,0.01799999736249447,0.0036981317680329084,-0.04994067922234535,-0.03860054537653923,0.09018411487340927,-0.05631440877914429,0.011062201112508774,0.010780228301882744,0.03372712805867195,0.006797103676944971,-0.04459523782134056,-0.033344801515340805,0.1324574053287506,-0.007434477563947439,-0.020041048526763916,-0.013837961480021477,-0.020484767854213715,-0.0004401137412060052,-0.0007949640275910497,-0.011792697012424469,-0.024939337745308876,0.0015498230932280421,-0.0028479385655373335,-0.02387368492782116,0.025731932371854782,-0.07410477101802826,0.00014122037100605667,0.08704149723052979,0.010515496134757996,0.028418712317943573,-0.07052245736122131,-0.025785518810153008,0.033105719834566116,0.006497681140899658,0.00732245622202754,-0.0008005965501070023,0.04808533936738968,-0.029449300840497017,0.002436179667711258,0.025187835097312927,0.022940276190638542,-0.01782405748963356,-0.015592108480632305,-0.10019869357347488,0.010448931716382504,0.01179528795182705,0.03778521716594696,0.019194480031728745,-0.0030380378011614084,-0.00978593435138464,-0.026299044489860535,0.0021472161170095205,0.04316040873527527,0.006518804933875799,0.033910997211933136,-0.008264726027846336,0.02174997329711914,-0.0019546395633369684,0.02786671370267868,-0.05302504822611809,-0.05549495667219162,-0.011566237546503544,0.027878277003765106,-0.028804918751120567,-0.00859825685620308,-0.04084094986319542,-0.03542807325720787,0.0013987936545163393,0.01359361782670021,-0.011527699418365955,0.03201964497566223,0.03838106617331505,0.006623575929552317,0.04401513561606407,-0.0087906364351511,0.01116126962006092,0.05315543711185455,-0.054002221673727036,0.036346010863780975,0.01222472358494997,-0.022096918895840645,-0.06481369584798813,-0.012142032384872437,0.05905952677130699,0.07094138860702515,-0.007733186706900597,0.018284769728779793,-0.010170375928282738,-0.03613923862576485,0.013008087873458862,-0.04160553216934204,-0.06790343672037125,-0.04081097990274429,0.030886532738804817,0.01889471709728241,0.017558228224515915,0.03668773174285889,-0.002452189102768898,-0.02017849311232567,-0.08151540905237198,-0.038399770855903625,-0.01944664679467678,-6.1057259410762476e-33,-0.02704242803156376,-0.04831662029027939,-0.011615735478699207,-0.028781594708561897,-0.027294641360640526,-0.04315279796719551,0.02051687240600586,0.0058338455855846405,-0.0007907442050054669,0.02868042327463627,-0.04771046340465546,-0.024038447067141533,0.013020787388086319,-0.008158295415341854,-0.011507104150950909,0.03392073139548302,0.02899479866027832,0.004357054829597473,-0.02412448264658451,0.046585895121097565,0.022639570757746696,0.04175087437033653,-0.04983561486005783,-0.006960396654903889,-0.006332915276288986,0.05786053091287613,0.04739638790488243,0.010529118590056896,-0.047637999057769775,0.03631691262125969,-0.016475167125463486,0.004252840299159288,-0.01337690930813551,0.0016314872773364186,-0.008299052715301514,0.015643540769815445,-0.014410530216991901,-0.06854283809661865,0.025518089532852173,-0.007673160172998905,-0.008664402179419994,-0.051806505769491196,0.004568784032016993,-0.008062710054218769,-0.006075494922697544,0.04529116675257683,0.059883736073970795,0.011458306573331356,-0.040835727006196976,0.02405339479446411,-0.059119999408721924,0.014072064310312271,-0.0012339695822447538,0.06589818745851517,0.025419479236006737,0.07580765336751938,0.01284726895391941,0.06203603744506836,-0.02428048849105835,0.009766376577317715,-0.010954683646559715,-0.005536707118153572,0.028179632499814034,-0.010855309665203094,0.0525205172598362,0.007581834681332111,-0.031119506806135178,-0.034644994884729385,-0.044308844953775406,-0.04787643253803253,0.0034955742303282022,0.06076566502451897,0.011682586744427681,-0.06062225252389908,-0.07204446941614151,0.007415688596665859,0.03274979069828987,0.014899523928761482,0.005141646601259708,0.032498374581336975,0.04060899838805199,-0.001585177262313664,-0.045213483273983,-0.013928445056080818,-0.012181391008198261,-0.08329420536756516,-0.05104450508952141,-0.0009815660305321217,0.0045966338366270065,0.003517181146889925,-0.08304549753665924,-0.043274227529764175,-0.02536717802286148,-0.0029668372590094805,0.07987679541110992,-0.0012839857954531908,0.0261358842253685,0.01973080448806286,0.0282882172614336,0.005520686972886324,-0.03001842275261879,0.002284088172018528,0.0016966009279713035,-0.015532261691987514,0.03461111709475517,-0.0013997094938531518,-0.022835930809378624,-0.004923162516206503,-0.06707983464002609,-0.013495631515979767,-0.0007671497296541929,-0.01193444337695837,0.003896725131198764,-0.019644614309072495,0.0519963763654232,-0.006803268101066351,-0.0005916113150306046,0.027602043002843857,0.038363829255104065,0.014242587611079216,0.005284944083541632,-0.017214586958289146,-0.006707631051540375,-0.039869844913482666,-0.020135585218667984,0.008385981433093548,-0.03473731130361557,-0.0017233553808182478,0.05608585104346275,0.008505431935191154,-0.02414519526064396,-0.0031328992918133736,2.4883632931960165e-7,-0.011604543775320053,0.07298018038272858,-0.03643353283405304,-0.02462770789861679,0.03211783617734909,-0.001638706075027585,0.021418238058686256,-0.023051217198371887,0.0279096569865942,0.014081604778766632,0.04032107815146446,0.027922959998250008,0.02191760577261448,0.030091388151049614,-0.05654596537351608,0.005307568237185478,-0.013335000723600388,0.000995025155134499,-0.07006552070379257,0.0035178917460143566,0.0247364304959774,0.057979878038167953,-0.004856540821492672,0.01764555089175701,0.028674902394413948,-0.07429302483797073,-0.02669363282620907,0.0022481330670416355,0.022879965603351593,-0.040835749357938766,0.011580049060285091,0.024225592613220215,-0.02065693587064743,0.050304148346185684,-0.02097533643245697,0.02360633574426174,-0.03098803199827671,0.020058205351233482,0.020161466673016548,0.009719629772007465,0.05738876387476921,-0.03442857414484024,0.015907350927591324,-0.04436609521508217,0.05735451355576515,-0.05780617892742157,-0.03728627413511276,-0.024663904681801796,0.022411420941352844,-0.04980923607945442,0.0025064123328775167,-0.031173069030046463,0.06115734204649925,0.004643005784600973,-0.0026233065873384476,-0.007732168771326542,-0.008462410420179367,-0.015298216603696346,0.02545890398323536,-0.021129107102751732,-0.03380598500370979,-0.07101539522409439,0.0012082625180482864,0.0330781415104866,0.0682135596871376,-0.015121053904294968,0.02051638811826706,3.431911317700844e-34,0.038172587752342224,0.022616256028413773,0.029833899810910225,0.04766323044896126,0.013248251751065254,-0.027070220559835434,-0.053503233939409256,0.009008028544485569,0.07018773257732391,-0.15694038569927216,-0.019814912229776382]'
SET
  @TechnicalDesignVector_106bd37b = N'[0.002090536057949066,-0.06863752752542496,-0.031085945665836334,-0.03823060542345047,0.024490999057888985,0.013093551620841026,0.05924415960907936,-0.01240526419132948,0.006409179884940386,-0.0131445974111557,0.03063809871673584,0.03283477574586868,0.016223926097154617,0.1356956511735916,0.000866025104187429,-0.039938367903232574,0.007223542779684067,-0.009813100099563599,-0.02718953788280487,-0.02328425832092762,0.013408147729933262,-0.02710922248661518,0.014295336790382862,-0.03044508770108223,-0.033604416996240616,-0.013202015310525894,-0.05511854216456413,0.011060339398682117,0.02195199392735958,-0.04063168913125992,-0.006069163326174021,0.0202726311981678,-0.007062676828354597,0.043978918343782425,0.0000020056368157383986,-0.001447078539058566,-0.02675868384540081,0.007663946133106947,0.019198736175894737,0.015547486022114754,0.062493257224559784,-0.05378995090723038,0.02889770269393921,-0.018301410600543022,-0.00850007589906454,-0.008552376180887222,0.04754507169127464,0.003779704449698329,0.06344437599182129,-0.04449967294931412,-0.007270519156008959,0.04688359797000885,-0.03656892478466034,0.03621158376336098,-0.10013118386268616,0.08937466889619827,-0.00906355306506157,0.060838647186756134,0.04273897409439087,0.006497121881693602,-0.04432088881731033,-0.0003680057998280972,0.00976246502250433,-0.01864556036889553,0.10112231224775314,0.030738452449440956,-0.0019623073749244213,-0.07097992300987244,-0.000771791790612042,0.029566070064902306,0.11152604222297668,0.01996334083378315,0.03304063901305199,0.0005453912308439612,-0.03996706008911133,-0.011216264218091965,-0.03484056890010834,-0.02356971800327301,0.02348981238901615,-0.029788175597786903,0.02995864674448967,0.010680997744202614,-0.029211897403001785,-0.04905164986848831,0.0007489528506994247,0.01165375579148531,0.02945202961564064,-0.005572027526795864,-0.07207810878753662,-0.010592312552034855,0.01117047481238842,-0.02751055546104908,0.011089540086686611,-0.0015625995583832264,-0.07145719975233078,-0.03135677054524422,-0.0023681435268372297,-0.06505747139453888,0.011347622610628605,0.039343781769275665,0.05499650910496712,0.01407868042588234,0.004158943425863981,0.043111760169267654,0.06309159845113754,0.04183698818087578,-0.0145730497315526,-0.04201676324009895,0.018943853676319122,0.013777163811028004,-0.02100694365799427,-0.006988853681832552,-0.0033514341339468956,0.04431510344147682,-0.013153034262359142,-0.0331214964389801,-0.00994952954351902,0.05784713476896286,-0.008059249259531498,0.008063966408371925,0.03413309529423714,0.029361605644226074,0.015406152233481407,0.06252628564834595,0.012561424635350704,0.00369473360478878,-0.03424208238720894,-0.00737062469124794,0.013967123813927174,-0.027907488867640495,0.005673577077686787,0.010846287943422794,0.02819119207561016,0.004205020610243082,-0.007957437075674534,0.006693995092064142,0.06500587612390518,0.001834916532970965,0.008548512123525143,-0.03416503220796585,0.04765136539936066,-0.04437482729554176,-0.05303814262151718,-0.020912906154990196,0.01584043726325035,-0.017638836055994034,-0.003016205271705985,0.04298800975084305,-0.002048959955573082,-0.02887529693543911,-0.021482447162270546,-0.009668770246207714,-0.07471031695604324,0.011233269236981869,-0.02532939426600933,-0.001226718071848154,0.0587572380900383,0.01260044053196907,-0.021064842119812965,0.007701387163251638,0.025650527328252792,0.0032594159711152315,0.04884754866361618,0.015643460676074028,-0.024539124220609665,0.02729617804288864,0.014185036532580853,0.010855510830879211,-0.0786878764629364,0.011121828109025955,0.005008109845221043,0.004343092441558838,-0.03277246281504631,-0.011041182093322277,0.034246720373630524,0.06371534615755081,0.04477247595787048,-0.007331886328756809,-0.0014501105761155486,0.011311111971735954,0.0447118766605854,-0.04939824715256691,-0.017433037981390953,0.05136778578162193,0.07794567942619324,-0.00828823633491993,-0.026862792670726776,0.07098562270402908,-0.0043161953799426556,0.00042266337550245225,0.0008312046993523836,-0.011366686783730984,-0.020597875118255615,-0.017968351021409035,0.03736495599150658,-0.011879312805831432,-0.038350507616996765,-0.09334458410739899,0.0026817715261131525,-0.02034735679626465,-0.02171308360993862,0.019697468727827072,0.004201886244118214,0.04100249707698822,0.055685777217149734,-0.0026308491360396147,-0.07497093826532364,-0.0009041886660270393,0.012557091191411018,0.029338687658309937,0.037523575127124786,-0.006590175908058882,-0.022796321660280228,0.00747524481266737,-0.03381059691309929,-0.007256062235683203,0.031633082777261734,0.02617417834699154,-0.06358630210161209,-0.012612679973244667,-0.08367592841386795,0.0027084045577794313,0.011312440037727356,-0.0003010575019288808,-0.02861175127327442,0.029182877391576767,-0.013180608861148357,-0.010208142921328545,0.022442998364567757,0.035707734525203705,-0.0299682579934597,-0.021190067753195763,0.04660855606198311,0.039946429431438446,0.023699074983596802,0.07099435478448868,0.05335932970046997,0.04484078660607338,-0.008886788971722126,0.03658456727862358,0.008794998750090599,-0.020977353677153587,-0.02208903804421425,-0.03473343327641487,0.04906419664621353,-0.04189196601510048,-0.007277659140527248,0.022840159013867378,-0.009898493997752666,-0.03332379832863808,0.04540801793336868,0.02205861173570156,-0.005507888272404671,-0.05943004786968231,-0.02401389554142952,0.0054748025722801685,0.008957275189459324,0.03138537332415581,-0.037855543196201324,0.04853222146630287,-0.0006864861934445798,-0.011571935378015041,-0.0031921672634780407,-0.012361506000161171,-0.007007427513599396,-0.027886666357517242,0.08885142207145691,-0.0886375829577446,-0.020395677536725998,0.009396523237228394,0.013940504752099514,0.029978159815073013,0.03304382786154747,0.010029248893260956,-0.018007250502705574,0.047686781734228134,0.04110870882868767,0.008287125267088413,0.0009687034762464464,-0.02556445635855198,-0.039926063269376755,-0.04130140319466591,0.012747606262564659,-0.0006584572256542742,-0.013622635044157505,0.02764475904405117,0.03201358765363693,-0.024325791746377945,0.022657277062535286,-0.0440855547785759,-0.03582078590989113,0.01766081340610981,0.019919056445360184,-0.03646305948495865,-0.01475654635578394,0.021500088274478912,0.004466483369469643,0.10805061459541321,-0.04712095856666565,0.0668402686715126,-0.0104334382340312,-0.05285027623176575,0.003394646104425192,-0.018968839198350906,-0.033091649413108826,0.07718067616224289,-0.025124046951532364,0.010680249892175198,-0.0021624902728945017,0.05117064341902733,0.03295561298727989,0.0021229013800621033,-0.02349884994328022,-0.004893945064395666,0.0011316068703308702,-0.003519879886880517,0.004127375781536102,-0.03485274314880371,-0.03941171243786812,0.08856721967458725,-0.0066235605627298355,-0.011120175011456013,0.03009319119155407,-0.019459843635559082,-0.032379183918237686,0.008814417757093906,-0.0485168881714344,-0.03059319220483303,-0.060980528593063354,-0.021649103611707687,0.017991619184613228,-0.06689044088125229,-0.023819273337721825,-0.007241431623697281,0.029387185350060463,0.011240188032388687,-0.04458172246813774,-0.10640858858823776,0.030701857060194016,-0.043530210852622986,0.004425164312124252,-0.02299761027097702,-0.012027746997773647,0.11229310184717178,0.012052864767611027,0.00021163008932489902,-0.0014198903227224946,-0.025976868346333504,-0.07284141331911087,-0.00014565588207915425,0.0389891192317009,0.047438845038414,-0.024950820952653885,-0.0024073165841400623,-0.009905814193189144,0.041783060878515244,-0.030705036595463753,0.04066813364624977,-0.03067546710371971,-0.03783133998513222,0.06255622953176498,0.026419246569275856,0.011659163981676102,-0.045653149485588074,-0.06565719842910767,0.021305454894900322,0.03530785068869591,-0.00863213837146759,-0.029942959547042847,-0.02329227142035961,0.01654784567654133,0.006699923891574144,0.0019598398357629776,0.014697964303195477,-0.011432358995079994,-0.07389068603515625,0.0204064529389143,0.012992320582270622,-0.023636890575289726,0.028872817754745483,0.054453831166028976,-0.07523715496063232,0.04824666306376457,0.00020206444605719298,0.06591980904340744,-0.03546362370252609,-0.02309475839138031,0.02637244388461113,-0.022030480206012726,0.1017727479338646,0.0013336521806195378,-0.04244041442871094,0.0003685837727971375,-0.06466946750879288,0.003850863315165043,-0.047983791679143906,-0.0379490852355957,-0.005792984738945961,0.0042447191663086414,0.015528491698205471,0.013918766751885414,0.013826243579387665,-0.011873878538608551,-0.04281861335039139,-0.0075100259855389595,0.018726257607340813,0.0012743024853989482,0.02327987365424633,-0.00100097490940243,0.01726352982223034,-0.0071823978796601295,0.08149891346693039,-0.021377775818109512,-0.04344361647963524,-0.010828224010765553,-0.0035831958521157503,0.0037877014838159084,-0.03626816347241402,0.022945795208215714,0.01408736128360033,0.01016581617295742,-0.026423728093504906,0.05440047010779381,-0.027067523449659348,0.024739157408475876,-0.03785714507102966,0.0036221477203071117,-0.010698435828089714,-0.015436430461704731,0.011171371676027775,-0.006906719412654638,-0.005735922604799271,0.017867732793092728,0.03568757697939873,0.03614689037203789,-0.04600288346409798,-0.014428936876356602,-0.0023150495253503323,0.0058274585753679276,-0.022812645882368088,-0.004775387234985828,0.0017521368572488427,0.07684387266635895,0.030784694477915764,-0.006119659636169672,-0.0214331466704607,-0.0407349169254303,-0.04857886582612991,-0.01381779182702303,0.03987405449151993,0.03061981499195099,0.013648118823766708,-0.0039216941222548485,-0.0095260851085186,-0.03355041518807411,-0.02862556092441082,-0.059140633791685104,0.004790411796420813,-0.04192236438393593,0.09627057611942291,0.050764620304107666,0.03621092811226845,-0.0022404154296964407,0.01805144175887108,-0.028222432360053062,0.06607759743928909,0.060145653784275055,-0.08322221040725708,0.03168870881199837,-0.03580061346292496,-0.00520637771114707,-0.014412692748010159,-0.02287488617002964,-0.029227837920188904,0.026120495051145554,0.017552223056554794,-0.01800243742763996,0.016023987904191017,0.027586985379457474,-0.019977208226919174,0.04894570633769035,0.011256115511059761,0.014809091575443745,-0.03350048512220383,-0.009548215195536613,-0.011466283351182938,-0.012175659649074078,-0.0009053868125192821,-0.026646025478839874,0.03458638861775398,-0.03730568662285805,-0.011473754420876503,0.024801844730973244,0.11008785665035248,0.0703863725066185,-0.015926511958241463,-0.023204978555440903,0.011609180830419064,0.03880496323108673,-0.03900843858718872,0.010098302736878395,0.026478812098503113,0.012662200257182121,0.01714688166975975,-0.018990930169820786,0.033192284405231476,-0.01632101833820343,-0.030797308310866356,0.0021536697167903185,-0.03308617323637009,-0.008341317065060139,-0.0016170792514458299,-0.056654516607522964,-0.0035688914358615875,-0.0018448494374752045,0.0021908441558480263,-0.035341985523700714,0.056173499673604965,0.045187413692474365,-0.04232899844646454,0.013134797103703022,0.007038072682917118,0.005567176267504692,-0.02627391554415226,0.07363837957382202,-0.019841810688376427,0.020169012248516083,0.006119573954492807,0.0500335656106472,0.012969808652997017,0.02587902545928955,0.004987066145986319,-0.021929709240794182,-0.03806784376502037,-0.04439552128314972,0.04824333265423775,0.044145066291093826,0.10344401001930237,-0.018964573740959167,-0.018556125462055206,-0.0500420406460762,-0.022579466924071312,-0.0517503060400486,0.006244273856282234,-0.020970670506358147,-0.03209199756383896,-0.01449933834373951,-0.029264124110341072,0.059235021471977234,0.01574154756963253,0.010096891783177853,-0.02244452014565468,-0.1367940902709961,-0.055121347308158875,0.056430328637361526,-6.840104649150948e-33,0.0010598043445497751,-0.0569809228181839,0.02033896930515766,-0.044756535440683365,-0.08203921467065811,0.023223809897899628,0.0054578520357608795,-0.02235308289527893,-0.006195741705596447,-0.002776838606223464,0.0016424382338300347,0.009835515171289444,0.005599696189165115,-0.008620266802608967,-0.01372372917830944,0.05415952950716019,0.011693079955875874,-0.015070305205881596,-0.04204203933477402,0.036640480160713196,0.01033874787390232,0.0419820137321949,-0.050572719424963,-0.02982363849878311,-0.014125030487775803,-0.002567601390182972,0.03484518453478813,0.013102211989462376,-0.06166180223226547,0.03148765116930008,-0.029864517971873283,-0.008442115038633347,-0.030696803703904152,0.06354531645774841,0.0065689547918736935,-0.0005256662261672318,-0.05642368644475937,-0.01958511769771576,0.03504583239555359,0.008493093773722649,-0.044370315968990326,-0.01480791624635458,0.025785863399505615,-0.02836320362985134,-0.0006302039255388081,-0.004537992645055056,0.03354696184396744,0.021816708147525787,-0.04176628217101097,0.000841316010337323,-0.018977370113134384,0.02068847417831421,-0.024720491841435432,0.08054786175489426,0.052631452679634094,0.00894477404654026,0.02629994973540306,0.045193303376436234,-0.046214304864406586,0.03279365599155426,-0.10863099992275238,-0.06657152622938156,-0.000747060461435467,0.01818244718015194,0.043686557561159134,0.031648900359869,-0.021032271906733513,0.028446007519960403,-0.04080592095851898,0.0022000472526997328,-0.0018197284080088139,0.06670117378234863,0.016996055841445923,-0.07344276458024979,-0.06552895158529282,0.02824615128338337,0.041784435510635376,-0.026951903477311134,-0.018468430265784264,0.00016884869546629488,0.004091221839189529,-0.009831779636442661,-0.0005858354852534831,-0.0036796380300074816,0.01145358756184578,-0.0797860249876976,-0.017234548926353455,-0.012572082690894604,0.017274875193834305,0.01098706852644682,-0.05304655432701111,-0.008053245954215527,-0.012490453198552132,-0.041111771017313004,0.08806739747524261,0.016114724799990654,0.011981342919170856,0.027571910992264748,0.0035320480819791555,-0.014735032804310322,0.014427248388528824,0.009167877957224846,-0.03774041309952736,-0.007602549623697996,0.015630275011062622,-0.022239800542593002,-0.01070394180715084,-0.005810528062283993,-0.029290691018104553,0.020796243101358414,0.008338802494108677,0.022338896989822388,0.003926515579223633,-0.043890148401260376,0.001136760343797505,-0.011383919976651669,0.021775778383016586,-0.005325873848050833,0.054537683725357056,0.06145462021231651,0.04337713122367859,-0.05001465603709221,-0.03323404863476753,-0.010404102504253387,-0.007905155420303345,0.02135651558637619,-0.05985988304018974,0.03002350963652134,0.02026829868555069,0.0023933856282383204,-0.017328813672065735,-0.004174755420535803,2.7306094807499903e-7,-0.04222062975168228,0.09436627477407455,-0.012698831968009472,-0.04513437673449516,0.03146466612815857,-0.0163279939442873,0.026954349130392075,-0.016689734533429146,-0.010547541081905365,0.03260941058397293,0.0030246993992477655,0.03541489318013191,0.02861439809203148,0.00765950046479702,-0.02255364879965782,0.005156099796295166,-0.035694919526576996,-0.03415866568684578,-0.05119062587618828,-0.011683231219649315,-0.025570610538125038,0.023497572168707848,0.0676804929971695,0.0009176506428048015,0.005923005752265453,-0.009070809930562973,-0.011525971814990044,0.05387814715504646,0.017033006995916367,-0.03127829730510712,0.006355527322739363,0.04673467203974724,-0.022297143936157227,-0.0033156685531139374,-0.01025021355599165,-0.0005776557954959571,-0.05453391373157501,-0.03438691422343254,-0.001386944204568863,0.06264656782150269,0.07150429487228394,-0.03810115531086922,-0.03183594346046448,0.001402208348736167,0.021159127354621887,-0.022210177034139633,-0.05146602913737297,0.0017223197501152754,-0.017629623413085938,-0.045540954917669296,-0.004363212734460831,-0.03932485729455948,0.021600715816020966,-0.0076415883377194405,-0.02450631372630596,-0.03057152032852173,0.012004509568214417,0.04421414062380791,0.04661862552165985,0.007254393305629492,0.001740007777698338,-0.08782205730676651,0.01144592184573412,0.08950815349817276,0.06598208844661713,0.011951695196330547,-0.013864550739526749,3.6256814595293207e-34,0.03630221635103226,-0.015003262087702751,0.004022917244583368,0.06513942778110504,0.012355023063719273,-0.05414979159832001,-0.0012839436531066895,-0.018741589039564133,0.02537745237350464,-0.10047098249197006,-0.025848286226391792]'
SET
  @HasCustomProps_106bd37b = 0
SET
  @HasCustomEvents_106bd37b = 0
SET
  @RequiresData_106bd37b = 0
SET
  @DependencyCount_106bd37b = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_106bd37b = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_106bd37b = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_106bd37b = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_106bd37b,
  @Namespace = @Namespace_106bd37b,
  @Name = @Name_106bd37b,
  @Version = @Version_106bd37b,
  @VersionSequence = @VersionSequence_106bd37b,
  @Title = @Title_106bd37b,
  @Description = @Description_106bd37b,
  @Type = @Type_106bd37b,
  @Status = @Status_106bd37b,
  @DeveloperName = @DeveloperName_106bd37b,
  @DeveloperEmail = @DeveloperEmail_106bd37b,
  @DeveloperOrganization = @DeveloperOrganization_106bd37b,
  @SourceRegistryID = @SourceRegistryID_106bd37b,
  @ReplicatedAt = @ReplicatedAt_106bd37b,
  @LastSyncedAt = @LastSyncedAt_106bd37b,
  @Specification = @Specification_106bd37b,
  @FunctionalRequirements = @FunctionalRequirements_106bd37b,
  @TechnicalDesign = @TechnicalDesign_106bd37b,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_106bd37b,
  @TechnicalDesignVector = @TechnicalDesignVector_106bd37b,
  @HasCustomProps = @HasCustomProps_106bd37b,
  @HasCustomEvents = @HasCustomEvents_106bd37b,
  @RequiresData = @RequiresData_106bd37b,
  @DependencyCount = @DependencyCount_106bd37b,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_106bd37b,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_106bd37b,
  @HasRequiredCustomProps = @HasRequiredCustomProps_106bd37b;


-- End of SQL Logging Session
-- Session ID: 4367d742-e129-40c5-bbe8-c79e3edd8d75
-- Completed: 2025-08-24T02:45:08.519Z
-- Duration: 7409ms
-- Total Statements: 4
