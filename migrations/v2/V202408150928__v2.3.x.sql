-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Run API Logs
-- Item: spCreateCompanyIntegrationRunAPILog
-- Generated: 8/15/2024, 9:14:48 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR CompanyIntegrationRunAPILog
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [${flyway:defaultSchema}].[spCreateCompanyIntegrationRunAPILog]
GO

CREATE PROCEDURE [${flyway:defaultSchema}].[spCreateCompanyIntegrationRunAPILog]
    @CompanyIntegrationRunID uniqueidentifier,
    @ExecutedAt datetime,
    @IsSuccess bit,
    @RequestMethod nvarchar(12),
    @URL nvarchar(MAX),
    @Parameters nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @InsertedRow TABLE ([ID] UNIQUEIDENTIFIER)
    INSERT INTO 
    [${flyway:defaultSchema}].[CompanyIntegrationRunAPILog]
        (
            [CompanyIntegrationRunID],
            [ExecutedAt],
            [IsSuccess],
            [RequestMethod],
            [URL],
            [Parameters]
        )
    OUTPUT INSERTED.[ID] INTO @InsertedRow
    VALUES
        (
            @CompanyIntegrationRunID,
            @ExecutedAt,
            @IsSuccess,
            @RequestMethod,
            @URL,
            @Parameters
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [${flyway:defaultSchema}].[vwCompanyIntegrationRunAPILogs] WHERE [ID] = (SELECT [ID] FROM @InsertedRow)
END
GO
GRANT EXECUTE ON [${flyway:defaultSchema}].[spCreateCompanyIntegrationRunAPILog] TO [cdp_Developer], [cdp_Integration]
    