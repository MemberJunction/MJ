-- SQL Logging Session
-- Session ID: 95ed5996-c37b-4f95-8eaf-b676e978e0b6
-- Started: 2025-09-10T21:57:25.813Z
-- Description: MetadataSync push operation
-- Format: Migration-ready with Flyway schema placeholders
-- Generated by MemberJunction SQLServerDataProvider

-- Save MJ: Components (core SP call only)
DECLARE @Namespace_1d265dfd NVARCHAR(MAX),
@Name_1d265dfd NVARCHAR(500),
@Version_1d265dfd NVARCHAR(50),
@VersionSequence_1d265dfd INT,
@Title_1d265dfd NVARCHAR(1000),
@Description_1d265dfd NVARCHAR(MAX),
@Type_1d265dfd NVARCHAR(255),
@Status_1d265dfd NVARCHAR(50),
@DeveloperName_1d265dfd NVARCHAR(255),
@DeveloperEmail_1d265dfd NVARCHAR(255),
@DeveloperOrganization_1d265dfd NVARCHAR(255),
@SourceRegistryID_1d265dfd UNIQUEIDENTIFIER,
@ReplicatedAt_1d265dfd DATETIMEOFFSET,
@LastSyncedAt_1d265dfd DATETIMEOFFSET,
@Specification_1d265dfd NVARCHAR(MAX),
@FunctionalRequirements_1d265dfd NVARCHAR(MAX),
@TechnicalDesign_1d265dfd NVARCHAR(MAX),
@FunctionalRequirementsVector_1d265dfd NVARCHAR(MAX),
@TechnicalDesignVector_1d265dfd NVARCHAR(MAX),
@HasCustomProps_1d265dfd BIT,
@HasCustomEvents_1d265dfd BIT,
@RequiresData_1d265dfd BIT,
@DependencyCount_1d265dfd INT,
@TechnicalDesignVectorEmbeddingModelID_1d265dfd NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_1d265dfd NVARCHAR(MAX),
@HasRequiredCustomProps_1d265dfd BIT,
@ID_1d265dfd UNIQUEIDENTIFIER
SET
  @Namespace_1d265dfd = N'Generic/UI/Table'
SET
  @Name_1d265dfd = N'DataGrid'
SET
  @Version_1d265dfd = N'1.0.0'
SET
  @VersionSequence_1d265dfd = 1
SET
  @Title_1d265dfd = N'Data Grid'
SET
  @Description_1d265dfd = N'A flexible, MJ-aware data grid component wrapping Ant Design Table with sorting, filtering, paging, and selection capabilities'
SET
  @Type_1d265dfd = N'Table'
SET
  @Status_1d265dfd = N'Published'
SET
  @Specification_1d265dfd = N'{"name":"DataGrid","title":"Data Grid","description":"A flexible, MJ-aware data grid component wrapping Ant Design Table with sorting, filtering, paging, and selection capabilities","type":"table","location":"embedded","functionalRequirements":"## Generic Reusable Data Grid for Drill-Down Scenarios\n\n### Core Purpose\n- **Generic, reusable table component** suitable for any application needing tabular data display\n- **Ideal for drill-down interfaces** where users need to explore, filter, and select records for detailed inspection\n- **Master-detail pattern support** through row selection events that trigger detail views or navigation\n- **Universal data grid** that works with any entity type or data structure\n\n### Key Capabilities\n- Display any entity or record collection in a configurable table format\n- Support drill-down workflows through row selection and event emission\n- Enable exploratory data analysis with sorting, filtering, and paging\n- Provide multiple selection patterns for bulk operations or single-record drill-down\n- Text-based search with highlighting to quickly locate records of interest\n- Emit comprehensive events for integration with parent components and navigation\n- Responsive design adapts to any container or screen size\n- Loading states for async data and empty states with contextual messages\n- Real-time filter match counting for user feedback\n\n### Reusability Features\n- Completely data-agnostic - works with any array of objects\n- Configurable column selection through simple fields array\n- All features toggleable via props for different use cases\n- Standard event interface for easy integration\n- No hard dependencies on specific data structures","technicalDesign":"## Generic Reusable Component Architecture\n\n### Design Philosophy\n- **Fully generic and reusable** - no coupling to specific entities or schemas\n- **Drill-down optimized** - events and selection modes designed for master-detail patterns\n- **Composable** - easily embedded in dashboards, forms, or standalone pages\n- **Framework-agnostic data model** - accepts any array of objects\n\n### Component Structure\n- Single, self-contained component wrapping Ant Design Table\n- Zero assumptions about data structure beyond array of objects\n- React hooks for local state management - no external state required\n- Debounced filter input for performance with large datasets\n- Memoized data processing prevents unnecessary re-renders\n\n### Drill-Down Support\n1. Row selection triggers events with full record data\n2. Parent components can navigate or show details based on selection\n3. Multiple selection modes support different drill-down patterns\n4. Filter and sort state can be persisted for return navigation\n5. Events provide all context needed for drill-down actions\n\n### Integration Patterns\n- **Master-Detail**: Use with detail panels for record exploration\n- **Navigation**: Selection events trigger route changes\n- **Modal Details**: Open detail modals on row selection\n- **Bulk Operations**: Multi-select for batch processing\n- **Report Tables**: Display-only mode for read-only data\n- **Search Results**: Filterable, sortable result sets\n\n### Key Technical Features\n- Dynamic column generation from any field array\n- Smart type detection for sort comparisons\n- Highlight filter matches across all visible cells\n- Configurable debounce prevents filter thrashing\n- Row selection supports checkbox, radio, or row-click patterns\n- Events include full context (selected data, filter state, page info)","dataRequirements":{"mode":"views","description":"Component is data-agnostic and works with any entity data passed via props"},"properties":[{"name":"entityName","type":"string","description":"Name of the entity being displayed","required":true},{"name":"data","type":"Array<object>","description":"Array of entity objects to display","required":true},{"name":"fields","type":"Array<string>","description":"Array of field names to display as columns, in order. If not provided, all fields will be displayed.","required":false},{"name":"sorting","type":"boolean","description":"Enable/disable column sorting","required":false,"defaultValue":true},{"name":"paging","type":"boolean","description":"Enable/disable pagination","required":false,"defaultValue":true},{"name":"pageSize","type":"number","description":"Number of rows per page when paging is enabled","required":false,"defaultValue":10},{"name":"filtering","type":"boolean","description":"Enable/disable text filtering","required":false,"defaultValue":true},{"name":"highlightFilterMatches","type":"boolean","description":"Highlight matching text when filtering","required":false,"defaultValue":true},{"name":"filterFields","type":"Array<string>","description":"Fields to search when filtering. If not specified, searches all fields","required":false},{"name":"filterDebounceTime","type":"number","description":"Debounce time in ms for filter input","required":false,"defaultValue":300},{"name":"selectionMode","type":"''none'' | ''checkbox'' | ''radio'' | ''row''","description":"Row selection mode: ''none'', ''checkbox'', ''radio'', or ''row''","required":false,"defaultValue":"none","possibleValues":["none","checkbox","radio","row"]},{"name":"longTextDisplay","type":"''truncate'' | ''expand'' | ''tooltip'' | ''wrap'' | ''none''","description":"How to display long text that exceeds the threshold: ''truncate'' shows ellipsis, ''expand'' allows click to expand/collapse, ''tooltip'' shows full text on hover, ''wrap'' shows all text with wrapping, ''none'' uses default behavior","required":false,"defaultValue":"expand","possibleValues":["truncate","expand","tooltip","wrap","none"]},{"name":"longTextThreshold","type":"number","description":"Number of characters before long text display behavior is triggered","required":false,"defaultValue":100},{"name":"autoFitColumns","type":"boolean","description":"When true, columns auto-fit to container width. When false, columns use fixed widths with horizontal scrolling","required":false,"defaultValue":true}],"events":[{"name":"selectionChanged","description":"Fired when row selection changes","parameters":[{"name":"selectedRows","type":"Array<object>","description":"Array of selected entity objects"}]},{"name":"pageChanged","description":"Fired when page changes","parameters":[{"name":"pageNumber","type":"number","description":"Current page number (0-based)"},{"name":"visibleRows","type":"Array<object>","description":"Array of entity objects visible on current page"}]},{"name":"sortChanged","description":"Fired when sort configuration changes","parameters":[{"name":"sortState","type":"{column: string, direction: ''asc'' | ''desc''}","description":"Object with ''column'' and ''direction'' properties"}]},{"name":"filterChanged","description":"Fired when filter changes","parameters":[{"name":"filterValue","type":"string","description":"Current filter text"},{"name":"matchingData","type":"Array<object>","description":"Array of all matching entity objects"}]}],"libraries":[{"name":"antd","version":"5.12.0","globalVariable":"antd"}],"dependencies":[],"code":"function DataGrid({ \n  entityName,\n  data,\n  fields,\n  sorting = true,\n  paging = true,\n  pageSize = 10,\n  filtering = true,  // Changed default to true\n  highlightFilterMatches = true,\n  filterFields,\n  filterDebounceTime = 300,\n  selectionMode = ''none'',\n  longTextDisplay = ''expand'', // Options: ''truncate'', ''expand'', ''tooltip'', ''wrap'', ''none''\n  longTextThreshold = 100, // Characters before truncation\n  autoFitColumns = true, // Auto-fit columns to container width vs fixed widths with scroll\n  onSelectionChanged,\n  onPageChanged,\n  onSortChanged,\n  onFilterChanged,\n  utilities, \n  styles, \n  components, \n  callbacks, \n  savedUserSettings, \n  onSaveUserSettings \n}) {\n  // Always use the MJ unwrapLibraryComponents function to get components from global libraries like antd, this ensures\n  // that various library build/package formats are handled correctly and transparently for your code!\n  const { Table, Input, Space, Typography, Tag, Tooltip } = unwrapLibraryComponents(antd, ''Table'', ''Input'', ''Space'', ''Typography'', ''Tag'', ''Tooltip'');\n  const { Search } = Input;\n  const { Text } = Typography;\n  const [filterText, setFilterText] = React.useState('''');\n  const [debouncedFilter, setDebouncedFilter] = React.useState('''');\n  const [selectedRowKeys, setSelectedRowKeys] = React.useState([]);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [sortConfig, setSortConfig] = React.useState(null);\n  const [entityInfo, setEntityInfo] = React.useState(null);\n  const [expandedCells, setExpandedCells] = React.useState({}); // Track which cells are expanded\n\n  \n  // Load entity metadata if we have an entity name\n  React.useEffect(() => {\n    if (entityName && utilities?.md?.Entities) {\n      const entity = utilities.md.Entities.find(e => e.Name === entityName);\n      setEntityInfo(entity || null);\n    }\n  }, [entityName, utilities]);\n  \n  // Helper function to format dates\n  const formatDate = (value) => {\n    if (!value) return ''-'';\n    try {\n      const date = new Date(value);\n      if (isNaN(date.getTime())) return value; // Invalid date, return as-is\n      // Format as YYYY-MM-DD HH:MM\n      return date.toLocaleString(''en-US'', {\n        year: ''numeric'',\n        month: ''2-digit'',\n        day: ''2-digit'',\n        hour: ''2-digit'',\n        minute: ''2-digit''\n      });\n    } catch {\n      return value;\n    }\n  };\n  \n  // Color mapping for common status values (darker for better contrast with white text)\n  const statusColorMap = {\n    // Green colors for positive states\n    active: ''#389e0d'',      // darker green\n    approved: ''#52c41a'',    // green\n    complete: ''#237804'',    // dark green\n    completed: ''#135200'',   // very dark green\n    success: ''#3f6600'',     // olive green\n    successful: ''#5b8c00'',  // light olive\n    enabled: ''#7cb305'',     // lime\n    published: ''#a0d911'',   // light lime\n    \n    // Red colors for negative states\n    inactive: ''#cf1322'',    // darker red\n    rejected: ''#f5222d'',    // red\n    failed: ''#a8071a'',      // dark red\n    error: ''#820014'',       // very dark red\n    disabled: ''#ff4d4f'',    // light red\n    cancelled: ''#ff7875'',   // salmon\n    canceled: ''#ff9c9c'',    // light salmon\n    terminated: ''#873800'',  // burnt orange\n    expired: ''#ad4e00'',     // dark orange\n    deprecated: ''#d4380d'',  // rust orange\n    \n    // Yellow/Orange for pending states\n    pending: ''#d48806'',     // darker orange\n    paused: ''#fa8c16'',      // orange\n    temporary: ''#faad14'',   // gold\n    draft: ''#d4b106'',       // dark gold\n    review: ''#ad8b00'',      // darker gold\n    waiting: ''#ffc53d'',     // light gold\n    \n    // Blue for informational states\n    processing: ''#096dd9'',  // darker blue\n    running: ''#1890ff'',     // blue\n    inprogress: ''#0050b3'',  // dark blue\n    ''in progress'': ''#003a8c'', // very dark blue\n    ''in-progress'': ''#40a9ff'' // light blue\n  };\n  \n  // 50 distinct colors for value lists (excluding colors used in statusColorMap)\n  // These are carefully selected to be visually distinct from each other\n  const fallbackColors = [\n    ''#722ed1'', // purple\n    ''#9254de'', // light purple\n    ''#531dab'', // dark purple\n    ''#391085'', // very dark purple\n    ''#b37feb'', // lavender\n    \n    ''#c41d7f'', // magenta\n    ''#eb2f96'', // pink\n    ''#f759ab'', // light pink\n    ''#9e1068'', // dark magenta\n    ''#780650'', // very dark magenta\n    \n    ''#08979c'', // teal\n    ''#13c2c2'', // cyan\n    ''#006d75'', // dark teal\n    ''#36cfc9'', // light cyan\n    ''#5cdbd3'', // pale cyan\n    \n    ''#1d39c4'', // indigo\n    ''#2f54eb'', // royal blue\n    ''#597ef7'', // periwinkle\n    ''#10239e'', // dark indigo\n    ''#061178'', // navy\n    \n    ''#fa541c'', // vermillion\n    ''#ff7a45'', // coral\n    ''#ff9c6e'', // peach\n    ''#d4380d'', // rust (if not used above)\n    ''#ad2102'', // brick red\n    \n    ''#8c8c8c'', // gray\n    ''#595959'', // dark gray\n    ''#bfbfbf'', // light gray\n    ''#434343'', // charcoal\n    ''#262626'', // near black\n    \n    ''#614700'', // brown\n    ''#874d00'', // tan\n    ''#a8730f'', // amber\n    ''#c79816'', // mustard\n    ''#d4a017'', // goldenrod\n    \n    ''#00474f'', // dark cyan\n    ''#006064'', // petrol\n    ''#004851'', // dark petrol\n    ''#1a535c'', // ocean\n    ''#2c5f2d'', // forest green\n    \n    ''#4a7c59'', // sage\n    ''#6b8e23'', // olive drab\n    ''#556b2f'', // dark olive\n    ''#8fbc8f'', // dark sea green\n    ''#3cb371'', // medium sea green\n    \n    ''#cd5c5c'', // indian red\n    ''#bc8f8f'', // rosy brown\n    ''#daa520'', // goldenrod\n    ''#b8860b'', // dark goldenrod\n    ''#ff6347''  // tomato\n  ];\n  \n  // Get color for a value in a value list - ensures unique colors for all values\n  const getValueColor = (value, possibleValues) => {\n    if (!value) return null;\n    \n    const normalized = value.toString().toLowerCase().trim();\n    \n    // Build a complete color assignment map for this column\n    const colorAssignments = new Map();\n    let nextColorIndex = 0;\n    \n    // First, assign colors to all possible values in order\n    if (possibleValues && Array.isArray(possibleValues)) {\n      possibleValues.forEach(pv => {\n        const pvValue = (pv.Value || pv.Code || '''').toLowerCase().trim();\n        if (pvValue && !colorAssignments.has(pvValue)) {\n          // Check if this value has a predefined color in statusColorMap\n          if (statusColorMap[pvValue]) {\n            colorAssignments.set(pvValue, statusColorMap[pvValue]);\n          } else {\n            // Assign next available fallback color\n            colorAssignments.set(pvValue, fallbackColors[nextColorIndex % fallbackColors.length]);\n            nextColorIndex++;\n          }\n        }\n      });\n    }\n    \n    // Return the assigned color for this value\n    if (colorAssignments.has(normalized)) {\n      return colorAssignments.get(normalized);\n    }\n    \n    // If value wasn''t in possibleValues, check statusColorMap first\n    if (statusColorMap[normalized]) {\n      return statusColorMap[normalized];\n    }\n    \n    // Otherwise assign a fallback color based on hash\n    // This ensures consistency even for unexpected values\n    let hash = 0;\n    for (let i = 0; i < normalized.length; i++) {\n      hash = normalized.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return fallbackColors[Math.abs(hash) % fallbackColors.length];\n  };\n  \n  // Debounce filter input\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilter(filterText);\n    }, filterDebounceTime);\n    return () => clearTimeout(timer);\n  }, [filterText, filterDebounceTime]);\n  \n  // Determine fields to display - use provided fields or extract from data\n  // This handles both explicit field lists and auto-discovery from data\n  const displayFields = React.useMemo(() => {\n    // If fields are explicitly provided, use them\n    if (fields && fields.length > 0) {\n      return fields;\n    }\n    \n    // If no fields specified, try to extract all unique keys from data\n    // But gracefully handle null/undefined/empty data\n    if (data && Array.isArray(data) && data.length > 0) {\n      const allKeys = new Set();\n      data.forEach(row => {\n        if (row && typeof row === ''object'') {\n          Object.keys(row).forEach(key => {\n            // Skip internal keys like ''key'' that we add for row selection\n            if (key !== ''key'') {\n              allKeys.add(key);\n            }\n          });\n        }\n      });\n      return Array.from(allKeys);\n    }\n    \n    // Return empty array if no fields and no data to extract from\n    return [];\n  }, [fields, data]);\n  \n  // Build columns from fields with metadata-aware formatting\n  const columns = React.useMemo(() => {\n    return displayFields.map(fieldName => {\n      // Get field metadata if available\n      const fieldInfo = entityInfo?.Fields?.find(f => f.Name === fieldName);\n      const fieldType = fieldInfo?.Type?.toLowerCase() || '''';\n      const hasValueList = fieldInfo?.ValueListType === ''List'' || fieldInfo?.ValueListType === ''ListOrUserEntry'';\n      const possibleValues = fieldInfo?.EntityFieldValues;\n      \n      \n      // Determine alignment based on field type\n      let align = ''left'';\n      if (fieldType.includes(''int'') || fieldType.includes(''decimal'') || \n          fieldType.includes(''float'') || fieldType.includes(''numeric'') || \n          fieldType.includes(''money'') || fieldType === ''bit'') {\n        align = ''right'';\n      }\n      \n      // Set column width based on field metadata (type and length)\n      // In autoFit mode, we don''t set widths (let table auto-size)\n      // In fixed mode, set proper widths for all columns with horizontal scroll\n      let columnWidth = autoFitColumns ? undefined : 150; // Default width or auto\n      const fieldLength = fieldInfo?.Length;\n      \n      // Determine if this is a long text field based on SQL type\n      // Note: SQL Server returns length = -1 for max fields (varchar(max), nvarchar(max))\n      const isLongTextField = fieldType.includes(''text'') || // text, ntext types\n                              (fieldType.includes(''varchar'') && fieldLength === -1) || // varchar(max) or nvarchar(max)\n                              (fieldType.includes(''char'') && fieldLength === -1) || // char(max) or nchar(max)\n                              (fieldType.includes(''varchar'') && fieldLength && fieldLength > 200) ||\n                              (fieldType.includes(''char'') && fieldLength && fieldLength > 200);\n      \n      \n      // Set appropriate widths based on data type (only when not auto-fitting)\n      if (!autoFitColumns) {\n        if (fieldType.includes(''uniqueidentifier'')) {\n          columnWidth = 280; // GUIDs need space\n        } else if (isLongTextField) {\n          columnWidth = 400; // Generous width for long text fields\n        } else if (fieldType.includes(''varchar'') || fieldType.includes(''char'')) {\n          // Scale width based on field length\n          if (fieldLength && fieldLength <= 50) {\n            columnWidth = Math.min(200, Math.max(100, fieldLength * 3));\n          } else if (fieldLength && fieldLength <= 100) {\n            columnWidth = 250;\n          } else if (fieldLength && fieldLength <= 200) {\n            columnWidth = 300;\n          } else {\n            columnWidth = 350; // Default for varchar without length\n          }\n        } else if (fieldType.includes(''date'') || fieldType.includes(''time'')) {\n          columnWidth = 160;\n        } else if (fieldType === ''bit'') {\n          columnWidth = 80;\n        } else if (fieldType.includes(''int'')) {\n          columnWidth = 100;\n        } else if (fieldType.includes(''decimal'') || fieldType.includes(''numeric'')) {\n          columnWidth = 120;\n        } else if (fieldType.includes(''money'')) {\n          columnWidth = 130;\n        }\n      }\n      \n      // If no metadata available, use default width\n      // We don''t make assumptions based on field names\n      \n      \n      // Enable ellipsis for long text fields\n      const useEllipsis = isLongTextField;\n      \n      // Handle special __mj fields display names\n      let displayName = fieldInfo?.DisplayName || fieldName;\n      if (fieldName === ''__mj_CreatedAt'') {\n        displayName = ''Created At'';\n      } else if (fieldName === ''__mj_UpdatedAt'') {\n        displayName = ''Updated At'';\n      } else if (fieldName === ''__mj_DeletedAt'') {\n        displayName = ''Deleted At'';\n      }\n      \n      return {\n        title: displayName,\n        dataIndex: fieldName,\n        key: fieldName,\n        align: align,\n        width: columnWidth,\n        ellipsis: false, // We''ll handle ellipsis manually for click expansion\n        sorter: sorting ? (a, b) => {\n          const valA = a[fieldName];\n          const valB = b[fieldName];\n          if (valA == null) return 1;\n          if (valB == null) return -1;\n          if (typeof valA === ''string'') {\n            return valA.localeCompare(valB);\n          }\n          return valA - valB;\n        } : false,\n        render: (value, record) => {\n          if (value == null) return ''-'';\n          \n          // Create a unique key for this cell\n          const cellKey = `$' + '{record.key || record.ID || record.id}_$' + '{fieldName}`;\n          const isExpanded = expandedCells[cellKey];\n          \n          // Format based on field type\n          let displayValue = value;\n          let formattedContent = null;\n          \n          // Handle date/time fields\n          if (fieldType.includes(''date'') || fieldType.includes(''time'')) {\n            displayValue = formatDate(value);\n            formattedContent = displayValue;\n          }\n          // Handle boolean fields\n          else if (fieldType === ''bit'') {\n            displayValue = value ? ''Yes'' : ''No'';\n            formattedContent = displayValue;\n          }\n          // Handle fields with value lists - render as tags\n          else if (hasValueList && possibleValues) {\n            const color = getValueColor(value, possibleValues);\n            formattedContent = (\n              <Tag \n                color={color}\n                style={{ \n                  borderRadius: ''12px'',\n                  fontSize: ''12px'',\n                  padding: ''2px 8px''\n                }}\n              >\n                {value}\n              </Tag>\n            );\n          }\n          // Handle numeric fields with formatting\n          else if (fieldType.includes(''money'')) {\n            displayValue = typeof value === ''number'' \n              ? new Intl.NumberFormat(''en-US'', { style: ''currency'', currency: ''USD'' }).format(value)\n              : value;\n            formattedContent = displayValue;\n          }\n          else if (fieldType.includes(''decimal'') || fieldType.includes(''float'')) {\n            displayValue = typeof value === ''number'' \n              ? value.toLocaleString(''en-US'', { maximumFractionDigits: 2 })\n              : value;\n            formattedContent = displayValue;\n          }\n          else if (fieldType.includes(''int'')) {\n            displayValue = typeof value === ''number'' \n              ? value.toLocaleString(''en-US'')\n              : value;\n            formattedContent = displayValue;\n          }\n          else {\n            formattedContent = displayValue;\n          }\n          \n          // Handle long text fields based on longTextDisplay mode\n          if (useEllipsis && typeof displayValue === ''string'' && displayValue.length > longTextThreshold && !hasValueList) {\n            const shouldTruncate = displayValue.length > longTextThreshold;\n            \n            // Mode: truncate - simple ellipsis\n            if (longTextDisplay === ''truncate'') {\n              const truncated = displayValue.substring(0, longTextThreshold) + ''...'';\n              return (\n                <div style={{ whiteSpace: ''nowrap'', overflow: ''hidden'', textOverflow: ''ellipsis'' }}>\n                  {truncated}\n                </div>\n              );\n            }\n            \n            // Mode: tooltip - show full text on hover\n            if (longTextDisplay === ''tooltip'') {\n              const truncated = displayValue.substring(0, longTextThreshold) + ''...'';\n              return (\n                <Tooltip title={displayValue} placement=\"topLeft\">\n                  <div style={{ whiteSpace: ''nowrap'', overflow: ''hidden'', textOverflow: ''ellipsis'' }}>\n                    {truncated}\n                  </div>\n                </Tooltip>\n              );\n            }\n            \n            // Mode: wrap - show all text with wrapping\n            if (longTextDisplay === ''wrap'') {\n              return (\n                <div style={{ whiteSpace: ''normal'', wordBreak: ''break-word'' }}>\n                  {displayValue}\n                </div>\n              );\n            }\n            \n            // Mode: expand (default) - click to expand/collapse\n            if (longTextDisplay === ''expand'') {\n              const shouldTruncate = !isExpanded && displayValue.length > longTextThreshold;\n              const displayText = shouldTruncate \n                ? displayValue.substring(0, longTextThreshold) \n                : displayValue;\n              \n              // Apply highlight for filter matches\n              let finalContent = displayText;\n              if (filtering && highlightFilterMatches && debouncedFilter) {\n                const str = String(displayText);\n                const searchTerm = debouncedFilter.toLowerCase();\n                const index = str.toLowerCase().indexOf(searchTerm);\n                if (index >= 0) {\n                  finalContent = (\n                    <span>\n                      {str.substring(0, index)}\n                      <Text mark>{str.substring(index, index + searchTerm.length)}</Text>\n                      {str.substring(index + searchTerm.length)}\n                    </span>\n                  );\n                }\n              }\n              \n              return (\n                <div \n                  style={{ \n                    cursor: shouldTruncate ? ''pointer'' : ''default'',\n                    whiteSpace: isExpanded ? ''normal'' : ''nowrap'',\n                    wordBreak: isExpanded ? ''break-word'' : ''normal''\n                  }}\n                  onClick={() => {\n                    if (displayValue.length > longTextThreshold) {\n                      setExpandedCells(prev => ({\n                        ...prev,\n                        [cellKey]: !prev[cellKey]\n                      }));\n                    }\n                  }}\n                >\n                  {finalContent}\n                  {shouldTruncate && (\n                    <Text type=\"secondary\" style={{ marginLeft: 2 }}>\n                      ... <Text type=\"link\">[show more]</Text>\n                    </Text>\n                  )}\n                  {isExpanded && displayValue.length > longTextThreshold && (\n                    <Text type=\"link\" style={{ marginLeft: 4 }}>\n                      [show less]\n                    </Text>\n                  )}\n                </div>\n              );\n            }\n            \n            // Mode: none - no special handling\n            // Falls through to regular display\n          }\n          \n          // Apply highlight for filter matches (for non-expandable content)\n          if (filtering && highlightFilterMatches && debouncedFilter && !hasValueList) {\n            const str = String(displayValue);\n            const index = str.toLowerCase().indexOf(debouncedFilter.toLowerCase());\n            if (index >= 0) {\n              return (\n                <span>\n                  {str.substring(0, index)}\n                  <Text mark>{str.substring(index, index + debouncedFilter.length)}</Text>\n                  {str.substring(index + debouncedFilter.length)}\n                </span>\n              );\n            }\n          }\n          \n          return formattedContent;\n        }\n      };\n    });\n  }, [displayFields, entityInfo, sorting, filtering, highlightFilterMatches, debouncedFilter, expandedCells]);\n  \n  // Filter data based on search term\n  // Handles null/undefined data gracefully and returns appropriate defaults\n  const filteredData = React.useMemo(() => {\n    // If data is null/undefined, return empty array\n    if (!data || !Array.isArray(data)) {\n      return [];\n    }\n    \n    // If filtering is disabled or no filter text, return original data\n    if (!filtering || !debouncedFilter) {\n      return data;\n    }\n    \n    // Determine which fields to search - use specified fields or all display fields\n    const searchFields = filterFields || displayFields;\n    const searchTerm = debouncedFilter.toLowerCase();\n    \n    // Filter rows that match the search term in any of the specified fields\n    return data.filter(row => {\n      // Skip null/undefined rows\n      if (!row || typeof row !== ''object'') return false;\n      \n      return searchFields.some(field => {\n        const value = row[field];\n        if (value == null) return false;\n        return String(value).toLowerCase().includes(searchTerm);\n      });\n    });\n  }, [data, displayFields, filtering, filterFields, debouncedFilter]);\n  \n  // Handle filter change\n  React.useEffect(() => {\n    if (onFilterChanged && filtering) {\n      onFilterChanged({ filterValue: debouncedFilter, matchingData: filteredData });\n    }\n  }, [debouncedFilter, filteredData, onFilterChanged, filtering]);\n  \n  // Selection configuration\n  const rowSelection = selectionMode !== ''none'' ? {\n    type: selectionMode === ''radio'' ? ''radio'' : ''checkbox'',\n    selectedRowKeys,\n    onChange: (keys, rows) => {\n      setSelectedRowKeys(keys);\n      if (onSelectionChanged) {\n        onSelectionChanged({ selectedRows: rows });\n      }\n    },\n    ...(selectionMode === ''row'' ? {\n      onSelect: (record) => {\n        const key = record.key || record.ID || record.id;\n        const isSelected = selectedRowKeys.includes(key);\n        const newKeys = isSelected \n          ? selectedRowKeys.filter(k => k !== key)\n          : [...selectedRowKeys, key];\n        setSelectedRowKeys(newKeys);\n        if (onSelectionChanged) {\n          const rows = filteredData.filter(r => \n            newKeys.includes(r.key || r.ID || r.id)\n          );\n          onSelectionChanged({ selectedRows: rows });\n        }\n      }\n    } : {})\n  } : undefined;\n  \n  // Pagination configuration\n  const pagination = paging ? {\n    current: currentPage,\n    pageSize: pageSize,\n    total: filteredData.length,\n    showSizeChanger: false,\n    showTotal: (total, range) => `$' + '{range[0]}-$' + '{range[1]} of $' + '{total}`,\n    onChange: (page) => {\n      setCurrentPage(page);\n      if (onPageChanged) {\n        const startIdx = (page - 1) * pageSize;\n        const endIdx = Math.min(startIdx + pageSize, filteredData.length);\n        onPageChanged({ \n          pageNumber: page - 1,\n          visibleRows: filteredData.slice(startIdx, endIdx)\n        });\n      }\n    }\n  } : false;\n  \n  // Handle table sort change\n  const handleTableChange = (pag, filters, sorter) => {\n    if (sorter && onSortChanged) {\n      setSortConfig(sorter);\n      onSortChanged({ \n        sortState: {\n          column: sorter.field,\n          direction: sorter.order === ''ascend'' ? ''asc'' : ''desc''\n        }\n      });\n    }\n  };\n  \n  // Add keys to data for row selection\n  // React tables need a unique key for each row to track selection state\n  const dataWithKeys = React.useMemo(() => {\n    // Handle empty/null data gracefully\n    if (!filteredData || !Array.isArray(filteredData)) {\n      return [];\n    }\n    \n    return filteredData.map((row, index) => ({\n      ...row,\n      // Use existing key, ID fields, or fall back to index\n      key: row?.key || row?.ID || row?.id || index\n    }));\n  }, [filteredData]);\n  \n  return (\n    <div className=\"data-grid-component\" style={{ width: ''100%'' }}>\n      {filtering && (\n        <Space direction=\"vertical\" style={{ width: ''100%'', marginBottom: 16 }}>\n          <div style={{ position: ''relative'' }}>\n            <Search\n              placeholder={`Search in $' + '{filterFields ? filterFields.join('', '') : ''all fields''}`}\n              value={filterText}\n              onChange={e => setFilterText(e.target.value)}\n              allowClear\n              onClear={() => setFilterText('''')}\n              style={{ width: ''100%'' }}  // Full width to match grid\n            />\n            <style>{`\n              .data-grid-component .ant-btn.ant-input-search-button {\n                margin-top: -1px;\n              }\n            `}</style>\n          </div>\n          {debouncedFilter && (\n            <Text type=\"secondary\">\n              Found {filteredData.length} matching records\n            </Text>\n          )}\n        </Space>\n      )}\n      \n      <Table\n        columns={columns}\n        dataSource={dataWithKeys}\n        rowSelection={rowSelection}\n        pagination={pagination}\n        onChange={handleTableChange}\n        scroll={autoFitColumns ? undefined : { x: ''max-content'' }}  // Enable horizontal scrolling only when not auto-fitting\n        loading={data === null}  // Only show loading when data is explicitly null (not yet loaded)\n        locale={{\n          emptyText: `No $' + '{entityName || ''records''} found`\n        }}\n        size=\"middle\"\n      />\n    </div>\n  );\n} ","exampleUsage":"<DataGrid\n  entityName=\"Products\"\n  data={products}\n  fields={[''Name'', ''SKU'', ''Price'', ''Category'', ''InStock'']}\n  sorting={true}\n  paging={true}\n  pageSize={20}\n  filtering={true}\n  filterFields={[''Name'', ''SKU'', ''Category'']}\n  selectionMode=\"checkbox\"\n  onSelectionChanged={handleSelection}\n  onPageChanged={handlePageChange}\n  onSortChanged={handleSortChange}\n  onFilterChanged={handleFilterChange}\n/>"}'
SET
  @FunctionalRequirements_1d265dfd = N'Generic reusable data grid ideal for drill-down interfaces where users explore, filter, and select records for detailed inspection; Master-detail pattern support through row selection events; Universal table component working with any entity type or data structure; Display any record collection with configurable columns; Support drill-down workflows through comprehensive event emission; Enable exploratory data analysis with sorting, filtering, paging; Multiple selection patterns for bulk operations or single-record drill-down; Text search with highlighting to quickly locate records; Completely data-agnostic and reusable across any application; All features toggleable via props for different use cases'
SET
  @TechnicalDesign_1d265dfd = N'Fully generic and reusable component with no coupling to specific entities; Drill-down optimized with events and selection modes for master-detail patterns; Composable for embedding in dashboards, forms, or standalone pages; Framework-agnostic accepting any array of objects; Row selection triggers events with full record data for navigation or detail views; Multiple selection modes support different drill-down patterns; Integration patterns include master-detail panels, navigation triggers, modal details, bulk operations, report tables, and search results; Dynamic column generation with smart type detection; Debounced filtering with match highlighting; Comprehensive events include full context for drill-down actions'
SET
  @FunctionalRequirementsVector_1d265dfd = N'[-0.02056393213570118,0.03881257027387619,-0.017246469855308533,-0.0685257688164711,-0.01582670398056507,-0.01002990547567606,0.009868849068880081,0.061117254197597504,-0.030546756461262703,0.003109114710241556,-0.017657658085227013,0.043271251022815704,-0.022907081991434097,0.087544284760952,-0.0013190254103392363,-0.07751507312059402,0.020786987617611885,0.04178342595696449,-0.05957205221056938,0.02846062369644642,0.018722152337431908,-0.04484429955482483,-0.012995416298508644,0.010104103945195675,-0.03820682317018509,0.02714923955500126,-0.053092651069164276,-0.004363421816378832,0.02076173573732376,-0.04518524557352066,0.0457824170589447,0.04957902431488037,0.022992104291915894,-0.004550856538116932,0.0000025591648409317713,0.0042958627454936504,-0.07976749539375305,-0.010616054758429527,-0.02249995805323124,0.04349903762340546,-0.011156272143125534,0.0054657431319355965,0.01658058911561966,-0.00926622562110424,0.004543331917375326,-0.0869731605052948,0.026495615020394325,0.05396229773759842,-0.015737080946564674,-0.0547601617872715,0.0058211395516991615,-0.010310466401278973,-0.004373757168650627,-0.016708621755242348,0.015991708263754845,0.036865487694740295,0.039018262177705765,0.008584890514612198,0.11136132478713989,-0.023153329268097878,0.00813561212271452,-0.02065553329885006,-0.024489955976605415,-0.007994013838469982,0.06012079492211342,0.0466950498521328,0.0772169828414917,-0.0005475088255479932,0.025025993585586548,0.015323936007916927,0.06004388630390167,-0.04271320998668671,0.0538313202559948,-0.027660230174660683,-0.03460416570305824,-0.00984595250338316,-0.03007008694112301,-0.029502352699637413,-0.029710903763771057,0.01844887249171734,-0.0032449979335069656,0.017397440969944,-0.008922656998038292,-0.011842741630971432,-0.01943696290254593,0.008311624638736248,0.010455028153955936,-0.007143712602555752,-0.048210375010967255,-0.025541678071022034,0.08249275386333466,-0.024450251832604408,0.009180314838886261,0.005896570160984993,-0.06439895927906036,0.001956699648872018,0.04526188224554062,-0.023919478058815002,0.036530982702970505,-0.011207903735339642,0.022564569488167763,0.023457789793610573,0.04370530694723129,0.017527079209685326,0.12670782208442688,-0.02968914806842804,-0.045301564037799835,-0.014485555700957775,0.039365239441394806,-0.029574483633041382,0.0032802321948111057,0.00953009631484747,-0.01802433840930462,0.033838480710983276,-0.03289305791258812,0.029259387403726578,0.020713122561573982,0.006867936346679926,0.010565858334302902,0.000017174041204270907,0.05377018451690674,0.010524438694119453,0.019906077533960342,0.006378547288477421,-0.00016644697461742908,-0.02702467516064644,-0.06259245425462723,-0.03737606853246689,0.013263612054288387,-0.03262612968683243,-0.03853761404752731,-0.037013016641139984,0.03324934467673302,-0.021409127861261368,0.00037449909723363817,-0.007013088557869196,0.01908067800104618,0.00046238049981184304,-0.12152308970689774,-0.0019579832442104816,0.012580554001033306,0.019753122702240944,-0.03794175386428833,0.01789187826216221,0.0051318877376616,-0.020884353667497635,-0.024115270003676414,0.017464909702539444,-0.004049968905746937,0.029409795999526978,0.030724482610821724,-0.060849230736494064,-0.03976551070809364,0.020545681938529015,-0.006063020322471857,0.030610771849751472,0.011469217948615551,-0.03446833789348602,-0.005584103520959616,0.019246237352490425,0.02204952947795391,-0.02038048952817917,0.054502833634614944,0.008577540516853333,0.008339439518749714,-0.030322186648845673,0.010935488156974316,0.03679397702217102,-0.04784714803099632,-0.058610815554857254,-0.02304881252348423,-0.0607808493077755,-0.015240530483424664,0.038738541305065155,0.02660367637872696,-0.01817033626139164,0.008734775707125664,0.025455791503190994,-0.03621676191687584,0.03666389733552933,0.03367967903614044,-0.08886465430259705,0.028437253087759018,0.03296537324786186,0.1319665014743805,-0.07660959661006927,-0.025522343814373016,-0.020174209028482437,-0.002631996525451541,-0.010347743518650532,0.02186373621225357,0.013367333449423313,-0.015121765434741974,0.042702771723270416,-0.020844832062721252,0.0077669657766819,-0.02598109468817711,-0.00559892226010561,-0.001729339361190796,-0.032214656472206116,-0.05671301484107971,-0.0082996292039752,0.008096816018223763,0.0552230067551136,0.01821158267557621,-0.07146022468805313,-0.05222634598612785,0.009826893918216228,-0.0016068271361291409,-0.017411867156624794,0.022625351324677467,-0.020167889073491096,0.01461696159094572,0.005241126287728548,-0.025521498173475266,0.020505884662270546,0.039055611938238144,0.050684332847595215,-0.006178594194352627,-0.018756570294499397,-0.03243104740977287,-0.029336892068386078,0.03651227056980133,0.019028011709451675,0.10331269353628159,0.005983157083392143,0.02652692049741745,0.035671416670084,0.003392600454390049,0.018984617665410042,0.0012761254329234362,-0.03286953642964363,0.040130212903022766,0.027377057820558548,0.013434766791760921,-0.0053814612329006195,0.04511488601565361,0.1424727439880371,-0.0748727023601532,0.016756901517510414,0.041492726653814316,0.0023590787313878536,-0.026668021455407143,-0.012406675145030022,-0.05066270753741264,-0.021899595856666565,-0.015123461373150349,0.014720277860760689,-0.0011750784469768405,-0.06111213192343712,0.0038654522504657507,-0.001950854086317122,0.03470344468951225,0.03380425646901131,-0.02086026966571808,-0.01782151497900486,-0.03450275585055351,0.037526603788137436,-0.0460924431681633,0.041163962334394455,0.011368934996426105,-0.018635720014572144,-0.0017552137142047286,-0.028484368696808815,-0.029796909540891647,-0.0069884550757706165,0.08069709688425064,-0.05091336369514465,0.016097193583846092,0.011391514912247658,0.031217187643051147,0.023405130952596664,0.06977801024913788,-0.025767190381884575,-0.02735859341919422,0.00983599852770567,-0.03136427700519562,0.04452427476644516,-0.03617371618747711,-0.0032283321488648653,0.03642802685499191,0.022520313039422035,-0.016067024320364,-0.003078558947890997,-0.002010169206187129,-0.030213290825486183,-0.0014170067152008414,-0.046103063970804214,0.02482384257018566,-0.009656000882387161,0.027155224233865738,-0.003713020822033286,0.03285621106624603,0.0008774536545388401,-0.018035950139164925,-0.0029655718244612217,-0.019443366676568985,0.008768071420490742,-0.05603870376944542,0.0006609667325392365,0.006498143542557955,-0.026336485520005226,-0.028623327612876892,0.017220892012119293,0.004937577527016401,0.1147957444190979,0.03702550753951073,0.04391730949282646,0.06434016674757004,0.011187652125954628,0.003409275086596608,0.020617889240384102,0.017113426700234413,-0.04085446894168854,0.049952540546655655,0.021976035088300705,0.016701312735676765,-0.007237626705318689,-0.04128056392073631,-0.006533910054713488,-0.02866554446518421,0.007989658042788506,0.012246549129486084,0.01584698259830475,-0.049013689160346985,0.006575513165444136,-0.04548117518424988,-0.04947206377983093,0.013128642924129963,-0.02805073745548725,-0.03457050770521164,-0.04938941076397896,-0.021323036402463913,0.050943709909915924,0.046275004744529724,-0.01317809708416462,-0.038804344832897186,0.1000232920050621,-0.01348908245563507,-0.0428677573800087,-0.01793191023170948,-0.0355108380317688,-0.03012467548251152,0.019379958510398865,0.006731634493917227,-0.03875821828842163,0.08254951238632202,0.009446173906326294,-0.023073682561516762,0.004531107377260923,0.06107744574546814,0.06982353329658508,0.022643273696303368,-0.026733534410595894,0.03188726678490639,-0.015372954308986664,-0.07699144631624222,-0.0010868916288018227,-0.050280746072530746,0.05823201313614845,-0.01405113935470581,0.036946408450603485,0.016854673624038696,-0.06945344060659409,0.005878136493265629,0.018330760300159454,0.03718441724777222,0.016551872715353966,-0.004775912966579199,-0.03412126749753952,-0.022491522133350372,-0.04697650298476219,0.04554283991456032,-0.021077051758766174,-0.0006667546695098281,-0.03641210123896599,0.0141421128064394,0.027319056913256645,0.06564590334892273,-0.0001594685745658353,0.049258314073085785,-0.02932398021221161,0.0647626519203186,-0.018287179991602898,0.06396179646253586,-0.02630099281668663,-0.051718566566705704,-0.0002836981147993356,-0.04378359392285347,0.011062195524573326,-0.03280903398990631,0.011883923783898354,0.044054195284843445,-0.06324782967567444,0.0542999804019928,-0.016310235485434532,-0.04816150665283203,0.03219304606318474,0.008764886297285557,0.018197881057858467,-0.01251921895891428,0.011557644233107567,-0.046508025377988815,0.029830075800418854,0.01486786175519228,0.01247574295848608,0.02709214948117733,0.05441256985068321,0.025535399094223976,0.015902671962976456,-0.05569145455956459,-0.02658715471625328,-0.015518175438046455,-0.07433944940567017,0.04759128764271736,0.007424521259963512,0.01697564870119095,-0.0248834490776062,0.031020287424325943,0.06276685744524002,0.022258954122662544,0.0006576745654456317,0.06087295711040497,-0.05326556786894798,0.039038196206092834,-0.03322014585137367,-0.1011284738779068,0.007524420972913504,0.0004585128335747868,0.0009225556859746575,0.0071762544102966785,-0.028213126584887505,-0.00977761298418045,0.009781432338058949,-0.040587764233350754,-0.02477472834289074,0.05849766731262207,-0.044000204652547836,-0.027325307950377464,0.008266789838671684,-0.014578549191355705,0.02342001162469387,0.012825003825128078,-0.007929885759949684,-0.020199766382575035,-0.0726153627038002,0.032349374145269394,-0.005856900941580534,-0.05064091458916664,0.017783883959054947,0.0020877858623862267,-0.007095503155142069,0.001985729206353426,-0.021937722340226173,0.031912911683321,-0.025116799399256706,-0.030471356585621834,0.06146763265132904,-0.0009152279235422611,0.015218880027532578,0.0037790946662425995,0.0013507147086784244,-0.04553835093975067,0.04006344452500343,0.019527576863765717,-0.08681448549032211,-0.023194583132863045,-0.024107318371534348,-0.051823075860738754,-0.03575330972671509,-0.019461775198578835,-0.02967504970729351,-0.02052854187786579,-0.04846588894724846,0.036714065819978714,-0.026057397946715355,0.011171301826834679,-0.006279191467911005,0.002087309258058667,0.016981231048703194,0.020886193960905075,0.010006824508309364,0.0395224466919899,-0.05611461028456688,0.006691719871014357,0.0381246842443943,-0.006075424142181873,0.004025768022984266,-0.0013869724934920669,0.04812131077051163,-0.06586163491010666,-0.018259841948747635,-0.02588389255106449,0.1228318065404892,0.012502200901508331,0.054056305438280106,-0.06194230169057846,0.0473354198038578,-0.022745031863451004,-0.055156029760837555,-0.009536884725093842,0.014292536303400993,-0.03700924664735794,0.00281254923902452,0.029847661033272743,0.02592531219124794,0.001389919314533472,-0.011866294778883457,0.014857533387839794,-0.02390686608850956,-0.014919020235538483,-0.020687371492385864,-0.014798066578805447,0.019088581204414368,0.04181591793894768,-0.006782981567084789,-0.029524216428399086,0.022567393258213997,0.024872703477740288,-0.038044217973947525,-0.00261975871399045,0.016607193276286125,-0.028990039601922035,0.006263831630349159,0.032591499388217926,-0.034157849848270416,-0.01165599375963211,-0.004407400265336037,-0.03757461905479431,0.018985530361533165,0.021873222663998604,-0.0018098052823916078,0.004920570645481348,-0.026526831090450287,-0.03104614093899727,0.020737992599606514,0.05418284982442856,0.0013514700112864375,-0.017986318096518517,-0.04689166322350502,-0.07881485670804977,0.058344509452581406,-0.033355504274368286,-0.004507055040448904,-0.04460393637418747,-0.08286497741937637,0.01721135713160038,-0.0085099246352911,0.03918282687664032,0.026597509160637856,0.019643666222691536,-0.01377048995345831,-0.040734220296144485,-0.013736724853515625,-0.021665183827280998,-7.03105268618249e-33,0.002196640009060502,0.013063723221421242,0.006096860393881798,0.0178653746843338,0.02486611343920231,-0.0417354591190815,-0.006155537907034159,-0.03352152928709984,-0.04663098603487015,-0.027295418083667755,-0.033978171646595,-0.0035510160960257053,0.010787728242576122,-0.03577551618218422,0.009939821437001228,0.027114419266581535,0.051473263651132584,0.017929483205080032,0.00022744497982785106,0.03302786126732826,-0.022698737680912018,0.0425318107008934,0.01221582479774952,-0.05021492764353752,-0.006779000628739595,0.009378528222441673,0.017324412241578102,0.003741054330021143,-0.02509724721312523,0.0011180246947333217,0.009976809844374657,-0.014336870983242989,-0.007181795779615641,-0.03455835580825806,-0.016399579122662544,0.03390130773186684,-0.12255975604057312,0.018826084211468697,0.006845445837825537,-0.011961331591010094,0.05294635146856308,0.004429585300385952,-0.001969177508726716,0.018878070637583733,-0.008703085593879223,0.023235606029629707,-0.013878039084374905,-0.0041094277985394,-0.012985718436539173,-0.02724050171673298,0.042015593498945236,0.017996741458773613,0.02048492431640625,0.04579200968146324,0.008696786127984524,0.05454682931303978,0.038899976760149,-0.010351866483688354,-0.09116935729980469,0.00477765453979373,0.02266462706029415,-0.042823150753974915,-0.012345738708972931,0.02252941206097603,0.06963405013084412,-0.0011084014549851418,-0.008052852004766464,0.011397568508982658,-0.06602632999420166,0.002635868499055505,-0.027126504108309746,0.062111079692840576,-0.025470959022641182,0.026205535978078842,0.05902247130870819,-0.00031908616074360907,-0.0456475131213665,0.021572725847363472,-0.06578420847654343,0.006476365029811859,-0.0027002550195902586,0.024059388786554337,-0.02162332832813263,0.0020559991244226694,0.04497509449720383,0.06581685692071915,0.008789900690317154,-0.029257114976644516,0.019372036680579185,0.012772412039339542,-0.02947057969868183,-0.0012800715630874038,-0.0670524314045906,0.026559239253401756,-0.06912290304899216,0.06246268004179001,0.024617349728941917,-0.034015536308288574,0.01215590164065361,-0.017670316621661186,0.009072702378034592,0.029041578993201256,-0.019883107393980026,0.006018336862325668,0.016604647040367126,-0.01780693791806698,-0.042056016623973846,0.0119929863139987,-0.04462699592113495,0.026582803577184677,0.01561429351568222,0.010650815442204475,-0.028078170493245125,-0.016552329063415527,0.013210819102823734,-0.015325665473937988,0.027411624789237976,-0.0010457801399752498,0.02524912916123867,-0.006598399952054024,0.02529793418943882,-0.013513598591089249,-0.017810285091400146,0.01091467123478651,0.086952805519104,-0.01693144626915455,-0.04779468849301338,-0.03969334438443184,0.054430413991212845,-0.0245126374065876,0.00765478890389204,0.022872745990753174,3.20084240001961e-7,0.011179792694747448,0.03511372208595276,-0.01731511764228344,0.05955791473388672,0.03932434320449829,-0.009921576827764511,-0.002748029539361596,-0.010946308262646198,-0.02996610291302204,-0.0803065225481987,0.043058209121227264,-0.030867284163832664,0.042303379625082016,0.04386620223522186,-0.04128507152199745,-0.07730121165513992,0.029795227572321892,-0.042599257081747055,-0.044182244688272476,-0.00840582512319088,0.036680806428194046,0.015604322776198387,0.035201478749513626,0.018458189442753792,0.04994187504053116,0.03744131326675415,-0.03383123129606247,0.0006234069005586207,0.0637734904885292,-0.006689771544188261,0.0304961446672678,-0.018091460689902306,-0.02448784001171589,0.0164871197193861,-0.012283829040825367,-0.006598455365747213,-0.0501081719994545,0.032841380685567856,-0.01302902027964592,0.026566602289676666,0.020510945469141006,-0.10699417442083359,-0.03135654330253601,-0.06427028775215149,0.002590613905340433,-0.032050970941782,0.022582143545150757,0.16234031319618225,-0.0013792093377560377,0.01278707291930914,-0.020358650013804436,0.012028026394546032,0.009427052922546864,-0.08167362958192825,0.013261382468044758,-0.009169839322566986,0.011270133778452873,0.014888935722410679,0.020731838420033455,0.029751403257250786,-0.021119117736816406,-0.011562615633010864,-0.03601423650979996,-0.028979070484638214,-0.042283881455659866,0.0036328816786408424,-0.004746758379042149,3.595772475140586e-34,0.0030002195853739977,0.006090270355343819,0.00401380704715848,0.018781045451760292,0.013110573403537273,-0.011577007360756397,0.0654989629983902,-0.038685306906700134,0.0366491936147213,-0.031677860766649246,-0.02072037011384964]'
SET
  @TechnicalDesignVector_1d265dfd = N'[0.006343478336930275,0.0061476691626012325,0.008142034523189068,-0.05555029213428497,-0.005987341515719891,-0.012953472323715687,-0.0009435126557946205,0.0335589237511158,-0.052297335118055344,-0.04670881852507591,-0.01594948023557663,0.05547010526061058,-0.009893032722175121,0.1129239872097969,-0.0036703022196888924,-0.04433257505297661,0.028290262445807457,0.03554803505539894,-0.06979111582040787,0.0064529418013989925,0.008880659006536007,-0.010862747207283974,-0.008916376158595085,0.020968694239854813,0.005970694590359926,0.03174147754907608,-0.06504213809967041,0.008000606670975685,0.005526339635252953,-0.04210381954908371,0.03208937123417854,0.042900145053863525,0.006267949473112822,-0.008534613996744156,0.000002536970669098082,-0.030074838548898697,-0.07227343320846558,-0.01897348091006279,-0.025688160210847855,0.04047705605626106,-0.050156544893980026,-0.034422971308231354,0.017624113708734512,-0.03350839391350746,0.02303905412554741,-0.09108719974756241,0.017010917887091637,0.08099649846553802,-0.012940589338541031,-0.0715753436088562,0.011546213179826736,0.02497965283691883,0.015306852757930756,0.005118502303957939,-0.011903500184416771,0.03085174225270748,0.0381852462887764,-0.01741345040500164,0.05142281949520111,-0.0037869594525545835,0.0035453971941024065,-0.025043020024895668,-0.029543813318014145,-0.00439590634778142,0.06164765730500221,0.04251124709844589,0.03593381866812706,-0.02821115404367447,0.038993995636701584,0.005883620120584965,0.09430631250143051,-0.03764353320002556,0.0331147275865078,-0.02210836298763752,-0.044576000422239304,0.02475619502365589,-0.02249344438314438,-0.0634952113032341,-0.020616881549358368,0.023264041170477867,0.02060394175350666,0.012964325025677681,-0.0027626322116702795,-0.018333155661821365,-0.03024039976298809,-0.009337625466287136,0.015520543791353703,-0.027123617008328438,-0.051292408257722855,-0.03934986889362335,0.09042786806821823,-0.03377147391438484,0.0017382438527420163,-0.00667052436619997,-0.06892266869544983,-0.013541038148105145,0.007921258918941021,0.02043265849351883,0.04162457957863808,-0.02811702899634838,0.007257901132106781,0.04702501371502876,0.04266727343201637,0.02916168048977852,0.08720860630273819,-0.03410656377673149,-0.03539197891950607,-0.041629090905189514,0.015659408643841743,-0.030419282615184784,-0.01562744937837124,0.02805403433740139,-0.005339722149074078,0.054192040115594864,-0.051489830017089844,0.02590068057179451,0.001367461052723229,0.02527817152440548,-0.0020847967825829983,0.03827892988920212,0.006581075489521027,0.031743548810482025,-0.011962223798036575,0.010401090607047081,-0.006156053394079208,0.0038670694921165705,-0.029431190341711044,-0.089763343334198,-0.0008704268839210272,-0.046293992549180984,-0.0224676001816988,-0.033128298819065094,0.04876960813999176,-0.03175431117415428,-0.017001673579216003,0.042150236666202545,-0.01319047249853611,-0.024866338819265366,-0.08597879111766815,-0.001964208437129855,0.014960870146751404,0.020345700904726982,-0.0410144105553627,0.01784990355372429,0.0186360701918602,-0.03212146461009979,-0.051705967634916306,0.007874321192502975,0.01905742846429348,0.03882482647895813,0.04363638535141945,-0.014687079936265945,-0.029897890985012054,-0.004342556465417147,-0.036451928317546844,0.005243637133389711,0.052568670362234116,0.026255182921886444,0.024847660213708878,0.02022823691368103,0.016903279349207878,0.006955150049179792,0.04308570921421051,0.014277963899075985,-0.03621859475970268,-0.015402356162667274,-0.01445837039500475,0.03215258568525314,-0.0387105718255043,-0.04037368670105934,0.012170003727078438,-0.0822923555970192,-0.004646913148462772,0.028064250946044922,0.04650818184018135,-0.024380292743444443,0.03398187458515167,0.05484497547149658,-0.02202574908733368,0.02175021916627884,0.02338416688144207,-0.055563900619745255,0.012160515412688255,0.017740022391080856,0.05527342110872269,-0.061232343316078186,0.007371821440756321,0.017698924988508224,-0.014461826533079147,0.008825275115668774,0.003945870790630579,0.007100808899849653,0.0014904009876772761,0.014447996392846107,0.01077138539403677,-0.014491185545921326,-0.012505954131484032,0.035829026252031326,-0.011218813247978687,-0.011899995617568493,-0.04312758892774582,-0.003195153782144189,-0.015471814200282097,0.05330181494355202,0.04997094348073006,-0.04323524609208107,-0.10393308848142624,0.0005249222158454359,-0.015463247895240784,0.021257460117340088,0.023135073482990265,-0.029426978901028633,0.005924730096012354,0.011858167126774788,-0.020770080387592316,0.037545766681432724,0.053153496235609055,0.05831575021147728,-0.031169570982456207,-0.018192728981375694,-0.06036214157938957,0.031679123640060425,0.023324506357312202,0.026054510846734047,0.09029391407966614,-0.018694205209612846,0.020449373871088028,0.04094938561320305,0.028345268219709396,-0.004056252539157867,0.011838520877063274,-0.05548553541302681,0.047457896173000336,0.023619428277015686,-0.009770981036126614,0.019840119406580925,0.02386288344860077,0.11149489134550095,-0.0384489968419075,0.019311904907226562,0.02295384742319584,-0.011707494035363197,-0.03938039764761925,-0.0067753572948277,-0.027764393016695976,-0.01858602836728096,-0.017370404675602913,0.007960103452205658,0.008698802441358566,-0.03851071745157242,0.016118556261062622,0.005684074014425278,0.020247969776391983,-0.006821662187576294,-0.031094329431653023,0.018935488536953926,-0.00792274996638298,0.054723694920539856,-0.05122249945998192,0.018497582525014877,0.035543348640203476,-0.000982124824076891,-0.01487446203827858,-0.021485889330506325,0.005810444243252277,0.0032904655672609806,0.0431954562664032,-0.06173199787735939,0.014869977720081806,0.030170027166604996,0.03482186421751976,0.03935970366001129,0.0656004324555397,0.010009941644966602,0.01221678126603365,0.02673840895295143,-0.045001134276390076,0.029624756425619125,-0.026335572823882103,-0.022823696956038475,0.012240562587976456,0.017206767573952675,-0.022013342007994652,0.01401563361287117,-0.01937263086438179,-0.014139837585389614,0.005066214594990015,-0.0597587451338768,0.0180522371083498,-0.032602157443761826,0.02032870426774025,0.010090949013829231,0.01240534707903862,-0.05624426156282425,-0.03260726481676102,-0.01630609855055809,-0.0355064757168293,0.08858785033226013,-0.02827460877597332,0.04493406414985657,0.00828907173126936,-0.031031310558319092,-0.031114373356103897,0.006862335372716188,0.002277009654790163,0.09090422838926315,-0.016753656789660454,0.026242496445775032,0.06395220011472702,0.04128254950046539,-0.015314552001655102,0.03896770626306534,0.018758585676550865,-0.07360323518514633,0.07038228958845139,0.008249836042523384,0.047825418412685394,-0.012332295067608356,-0.05187810957431793,0.05512728914618492,-0.03284544497728348,0.01242756750434637,0.027129478752613068,0.0038976010400801897,-0.04881345108151436,0.025464579463005066,-0.046552784740924835,-0.045867279171943665,-0.03440376743674278,-0.025097960606217384,-0.026160625740885735,-0.030716167762875557,-0.03268032148480415,0.024100996553897858,0.058683596551418304,-0.021026859059929848,-0.033231619745492935,0.12124020606279373,0.004213415086269379,-0.030980978161096573,-0.029214942827820778,-0.02306709811091423,-0.024394121021032333,0.044791996479034424,0.00891568697988987,0.00018161532352678478,0.06490378081798553,0.008141269907355309,-0.07316793501377106,0.04136359691619873,0.03425652161240578,0.049201928079128265,0.011254843324422836,-0.03595986217260361,-0.007121232803910971,-0.004268319346010685,-0.061191774904727936,0.023267699405550957,-0.04000663012266159,0.034887757152318954,-0.012970595620572567,0.0393877774477005,0.03361402824521065,-0.0677184909582138,-0.020459214225411415,0.028170622885227203,0.06116766855120659,0.009495430625975132,0.008786841295659542,-0.038114454597234726,-0.05362992361187935,-0.048356831073760986,0.02071681246161461,0.019588695839047432,-0.017688220366835594,-0.05482763424515724,0.0013730046339333057,0.036757487803697586,0.06475105881690979,-0.0014196221018210053,0.05337017774581909,-0.028542257845401764,0.0351305715739727,-0.015398995019495487,0.05425797030329704,-0.016733260825276375,-0.006251899059861898,0.016069814562797546,-0.05788044631481171,0.03466606140136719,-0.044084686785936356,-0.023358836770057678,-0.01639331504702568,-0.009445923380553722,0.0399368517100811,-0.03500062972307205,-0.019837727770209312,0.03875075280666351,-0.019219817593693733,-0.005383679643273354,-0.03651611879467964,-0.010254264809191227,-0.057939037680625916,0.0201999731361866,0.017086772248148918,0.0006476406124420464,0.040973275899887085,0.06732833385467529,0.045222338289022446,0.036741167306900024,-0.0557832270860672,-0.05729448422789574,-0.02756066434085369,-0.08134832233190536,0.0026367525570094585,-0.013689247891306877,0.03891810402274132,0.015354023315012455,0.02321521006524563,0.1015024483203888,0.02836466394364834,-0.024705788120627403,0.06643571704626083,-0.03990650549530983,0.057009052485227585,-0.03483792766928673,-0.06007741764187813,-0.03847166523337364,0.0006716368952766061,0.0018420572159811854,-0.005916020832955837,-0.016420751810073853,-0.028909873217344284,-0.019059116020798683,-0.0011016601929441094,-0.03602781519293785,0.039644159376621246,-0.06319362670183182,-0.05434466898441315,-0.003360387869179249,-0.0035520868841558695,0.017411140725016594,0.059211794286966324,-0.010035121813416481,-0.0032986756414175034,-0.0332329198718071,0.002140167634934187,0.03287632018327713,-0.017686638981103897,-0.01882091537117958,-0.039503417909145355,0.005316604860126972,0.01110262144356966,-0.010662988759577274,0.0022413646802306175,-0.030423808842897415,-0.012404130771756172,0.07255925238132477,-0.020760368555784225,0.011251755058765411,0.007752163335680962,0.019865987822413445,0.0014061096590012312,0.02841537445783615,-0.004348617512732744,-0.06293290853500366,0.0025229959283024073,0.02948508784174919,-0.03251364082098007,-0.025505945086479187,0.01681952178478241,-0.02035350538790226,-0.010214821435511112,-0.07327768951654434,-0.006719105411320925,-0.03781811520457268,0.0005290116532705724,0.024495761841535568,-0.011491963639855385,0.006531466729938984,0.030277809128165245,0.029883045703172684,-0.001287374529056251,-0.03182396665215492,0.02836702950298786,0.04947622865438461,-0.02555329166352749,-0.0018233025912195444,-0.029579905793070793,0.03512994572520256,-0.07887005805969238,0.0011524104047566652,-0.016557911410927773,0.08690465986728668,-0.008869746699929237,0.06426095217466354,-0.10011272132396698,0.024463003501296043,-0.055910009890794754,-0.07659070938825607,-0.02029910683631897,-0.011880455538630486,-0.044138289988040924,-0.0022292437497526407,0.014724197797477245,0.006354388315230608,-0.034836772829294205,0.0015897070989012718,0.020917609333992004,0.00804800633341074,-0.012233994901180267,-0.02754121832549572,-0.042909592390060425,0.07253861427307129,0.016770627349615097,-0.013312702998518944,0.005909856874495745,-0.013723083771765232,0.05194864794611931,-0.03414864093065262,0.013626361265778542,0.021320652216672897,-0.018948301672935486,0.019739244133234024,0.021747183054685593,0.000697859562933445,-0.0017262606415897608,0.014859996736049652,0.0010636618826538324,0.03464886173605919,-0.01423818152397871,0.0033722911030054092,-0.026981813833117485,-0.034585509449243546,-0.0156902726739645,0.012864736840128899,0.06200878322124481,0.06644772738218307,-0.01806551031768322,-0.05719726160168648,-0.11848479509353638,0.0600428506731987,0.01952185109257698,-0.020816681906580925,-0.035996533930301666,-0.08188063651323318,0.03132559359073639,-0.020852364599704742,0.07896175235509872,0.0023424860555678606,0.017119066789746284,-0.06139741092920303,-0.07049398869276047,-0.005048440769314766,-0.03995374217629433,-7.291980840654359e-33,-0.018194889649748802,0.006680446211248636,-0.016961639747023582,0.024756213650107384,0.0011067992309108377,-0.053243570029735565,-0.0005304706282913685,-0.045567505061626434,-0.011673541739583015,-0.03194695711135864,-0.0002796902845147997,-0.03598625957965851,0.011648228392004967,-0.008064866997301579,0.017189830541610718,0.0016513543669134378,0.045457661151885986,-0.004441788885742426,0.0015961783938109875,0.03041418083012104,-0.020272916182875633,0.03596367686986923,-0.027091331779956818,-0.056505754590034485,-0.03136122599244118,-0.0001138191219069995,0.023946885019540787,0.007617587689310312,-0.019634278491139412,0.04001104459166527,0.0026513023767620325,-0.03089160844683647,-0.001982943620532751,0.01171679887920618,0.006132905371487141,-0.013189774937927723,-0.09103431552648544,0.02778702788054943,0.03546156734228134,0.006800679489970207,0.09039375185966492,-0.031078727915883064,0.009090730920433998,0.00495185935869813,0.0034272978082299232,0.0047432854771614075,0.004508165642619133,-0.007740586064755917,-0.028403596952557564,-0.031778451055288315,-0.02656140737235546,0.004425072576850653,0.019057704135775566,0.0619131438434124,-0.0011805231915786862,0.055251624435186386,0.05727066472172737,0.009005209431052208,-0.01159921195358038,-0.028228286653757095,-0.01110751461237669,-0.027447866275906563,0.002204319927841425,0.04593681916594505,0.05909297242760658,0.030702712014317513,0.032841697335243225,0.040361035615205765,-0.059224095195531845,0.022861778736114502,-0.011662636883556843,0.06921874731779099,-0.0002453791385050863,0.024340560659766197,0.06245085969567299,0.058126334100961685,-0.018139995634555817,0.007831434719264507,-0.08240064233541489,0.027961382642388344,0.020218636840581894,0.03423833101987839,-0.016701724380254745,0.0002608309732750058,0.04384808614850044,0.05678902566432953,-0.00626680301502347,-0.04833141714334488,0.018901333212852478,0.023111864924430847,-0.03791283443570137,0.017094900831580162,-0.06235649809241295,0.05647188052535057,-0.01962623931467533,0.021560996770858765,0.0021391939371824265,-0.026094025000929832,0.002007403876632452,-0.010022256523370743,0.0011509485775604844,-0.0011176569387316704,-0.02343193255364895,-0.019493110477924347,0.008518362417817116,0.003289266489446163,-0.03271002694964409,0.009339531883597374,-0.06353852897882462,0.045738279819488525,-0.0029996822122484446,-0.03391582518815994,-0.044659439474344254,-0.05305223912000656,0.017659559845924377,-0.03298488259315491,0.018104933202266693,-0.0278436541557312,0.02653466910123825,-0.008184163831174374,0.039475686848163605,-0.03143951669335365,-0.009581530466675758,0.04667908698320389,0.07375261187553406,0.017943138256669044,-0.06567163020372391,-0.029738880693912506,0.02084340713918209,-0.013863674364984035,-0.002351846545934677,0.04222272336483002,3.353469253397634e-7,-0.011435156688094139,0.05036149546504021,-0.0327039398252964,0.0416857935488224,0.049627527594566345,0.0025160734076052904,0.0065208664163947105,-0.014070414006710052,0.0028655678033828735,-0.015569224953651428,0.03622531145811081,-0.002917293459177017,0.051313430070877075,0.05012587830424309,-0.04102429375052452,-0.033947255462408066,0.02514027990400791,-0.03668176755309105,-0.05331053584814072,-0.007715580984950066,0.06334128975868225,-0.01983717270195484,0.031976647675037384,0.011873702518641949,0.036250703036785126,0.007451292593032122,-0.009801016189157963,0.014375005848705769,0.023314327001571655,-0.00901809986680746,0.02497243694961071,0.03695746883749962,-0.045110903680324554,0.008815282955765724,-0.016081655398011208,-0.0034419018775224686,-0.04066414386034012,0.02606310322880745,-0.016398364678025246,0.024004662409424782,0.048216670751571655,-0.10844044387340546,-0.024517536163330078,0.01526682823896408,0.04315724968910217,-0.03850835934281349,0.011705693788826466,0.08776039630174637,-0.026993468403816223,-0.002244835253804922,-0.057128891348838806,0.0018434597877785563,0.00320948613807559,-0.05943937599658966,0.0097931744530797,-0.0008320325869135559,-0.01308722048997879,0.01154334656894207,0.03324349969625473,0.05551446974277496,-0.003912043757736683,-0.03658531606197357,-0.019648849964141846,-0.009937497787177563,-0.01002107560634613,-0.007755520287901163,-0.054248563945293427,4.634268010326825e-34,0.010689695365726948,0.012174705974757671,-0.002277335384860635,0.056732580065727234,0.009915916249155998,-0.008540621027350426,0.023964794352650642,-0.04008439555764198,0.037874985486269,-0.0658644363284111,-0.0025049878749996424]'
SET
  @HasCustomProps_1d265dfd = 0
SET
  @HasCustomEvents_1d265dfd = 0
SET
  @RequiresData_1d265dfd = 0
SET
  @DependencyCount_1d265dfd = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_1d265dfd = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_1d265dfd = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_1d265dfd = 0
SET
  @ID_1d265dfd = 'DB1253D8-5B43-4FB1-880D-908EE2E5B37F'
EXEC [${flyway:defaultSchema}].spUpdateComponent @Namespace = @Namespace_1d265dfd,
  @Name = @Name_1d265dfd,
  @Version = @Version_1d265dfd,
  @VersionSequence = @VersionSequence_1d265dfd,
  @Title = @Title_1d265dfd,
  @Description = @Description_1d265dfd,
  @Type = @Type_1d265dfd,
  @Status = @Status_1d265dfd,
  @DeveloperName = @DeveloperName_1d265dfd,
  @DeveloperEmail = @DeveloperEmail_1d265dfd,
  @DeveloperOrganization = @DeveloperOrganization_1d265dfd,
  @SourceRegistryID = @SourceRegistryID_1d265dfd,
  @ReplicatedAt = @ReplicatedAt_1d265dfd,
  @LastSyncedAt = @LastSyncedAt_1d265dfd,
  @Specification = @Specification_1d265dfd,
  @FunctionalRequirements = @FunctionalRequirements_1d265dfd,
  @TechnicalDesign = @TechnicalDesign_1d265dfd,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_1d265dfd,
  @TechnicalDesignVector = @TechnicalDesignVector_1d265dfd,
  @HasCustomProps = @HasCustomProps_1d265dfd,
  @HasCustomEvents = @HasCustomEvents_1d265dfd,
  @RequiresData = @RequiresData_1d265dfd,
  @DependencyCount = @DependencyCount_1d265dfd,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_1d265dfd,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_1d265dfd,
  @HasRequiredCustomProps = @HasRequiredCustomProps_1d265dfd,
  @ID = @ID_1d265dfd;

-- Save MJ: Components (core SP call only)
DECLARE @Namespace_ca433f4c NVARCHAR(MAX),
@Name_ca433f4c NVARCHAR(500),
@Version_ca433f4c NVARCHAR(50),
@VersionSequence_ca433f4c INT,
@Title_ca433f4c NVARCHAR(1000),
@Description_ca433f4c NVARCHAR(MAX),
@Type_ca433f4c NVARCHAR(255),
@Status_ca433f4c NVARCHAR(50),
@DeveloperName_ca433f4c NVARCHAR(255),
@DeveloperEmail_ca433f4c NVARCHAR(255),
@DeveloperOrganization_ca433f4c NVARCHAR(255),
@SourceRegistryID_ca433f4c UNIQUEIDENTIFIER,
@ReplicatedAt_ca433f4c DATETIMEOFFSET,
@LastSyncedAt_ca433f4c DATETIMEOFFSET,
@Specification_ca433f4c NVARCHAR(MAX),
@FunctionalRequirements_ca433f4c NVARCHAR(MAX),
@TechnicalDesign_ca433f4c NVARCHAR(MAX),
@FunctionalRequirementsVector_ca433f4c NVARCHAR(MAX),
@TechnicalDesignVector_ca433f4c NVARCHAR(MAX),
@HasCustomProps_ca433f4c BIT,
@HasCustomEvents_ca433f4c BIT,
@RequiresData_ca433f4c BIT,
@DependencyCount_ca433f4c INT,
@TechnicalDesignVectorEmbeddingModelID_ca433f4c NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_ca433f4c NVARCHAR(MAX),
@HasRequiredCustomProps_ca433f4c BIT,
@ID_ca433f4c UNIQUEIDENTIFIER
SET
  @Namespace_ca433f4c = N'Admin/Queries'
SET
  @Name_ca433f4c = N'QueryGrid'
SET
  @Version_ca433f4c = N'1.0.0'
SET
  @VersionSequence_ca433f4c = 1
SET
  @Title_ca433f4c = N'Query Grid'
SET
  @Description_ca433f4c = N'A specialized grid component that displays all queries in the system using the generic DataGrid component'
SET
  @Type_ca433f4c = N'Table'
SET
  @Status_ca433f4c = N'Published'
SET
  @Specification_ca433f4c = N'{"name":"QueryGrid","title":"Query Grid","description":"A specialized grid component that displays all queries in the system using the generic DataGrid component","type":"table","location":"embedded","functionalRequirements":"## Simple Query Viewer\n\n### Purpose\n- Provide a zero-configuration grid for viewing system queries\n- Demonstrate simple composition by wrapping DataGrid\n- Automatically load and display all queries\n\n### Key Features\n- Auto-loads all queries on mount\n- Pre-configured optimal columns for query display\n- All DataGrid features available (filtering, sorting, paging)\n- No configuration needed - just drop in and use","technicalDesign":"## Minimal Wrapper Design\n\n### Architecture\n- Ultra-thin wrapper around DataGrid\n- Uses RunView to fetch queries\n- Passes data directly to DataGrid\n- No props or events - purely self-contained\n\n### Registry Pattern\n- Loads DataGrid from components registry\n- Shows component composition without coupling","dataRequirements":{"mode":"views","entities":[{"name":"Queries","description":"System queries for data access","displayFields":["ID","Name","Description","Category","Status","__mj_CreatedAt","__mj_UpdatedAt"],"filterFields":["Name","Description","Category"],"sortFields":["Name","Category","__mj_CreatedAt","__mj_UpdatedAt"],"usageContext":"Display all system queries in a filterable, sortable grid"}]},"properties":[],"events":[],"dependencies":[{"name":"DataGrid","namespace":"Generic/UI/Table","location":"registry","description":"Generic data grid"}],"libraries":[],"code":"function QueryGrid({\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  // Initialize with null to indicate \"not yet loaded\" state\n  // DataGrid will show loading spinner when data is null\n  const [queries, setQueries] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  \n\n  // Get DataGrid component from registry\n  // This demonstrates component composition via registry lookup\n  const { DataGrid } = components;\n\n  // Load queries on mount using RunView\n  React.useEffect(() => {\n    async function loadQueries() {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Use RunView to fetch all queries from the system\n        const result = await utilities.rv.RunView({\n          EntityName: ''Queries'' // MJ entity name for queries\n        });\n        \n        if (result.Success) {\n          // Set queries to empty array if no results to avoid null issues\n          setQueries(result.Results || []);\n        } else {\n          setError(result.ErrorMessage || ''Failed to load queries'');\n          // Set queries to empty array on error so DataGrid doesn''t break\n          setQueries([]);\n        }\n      } catch (err) {\n        setError(err.message || ''Error loading queries'');\n        console.error(''Error loading queries:'', err);\n        // Set queries to empty array on error so DataGrid doesn''t break\n        setQueries([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    loadQueries();\n  }, [utilities]);\n  \n  // Define which fields to display in the grid\n  // These are optimized for query viewing - showing most relevant info\n  const displayFields = [\n    ''Name'',\n    ''Description'', \n    ''Category'',\n    ''Status'',\n    ''__mj_UpdatedAt''\n  ];\n  \n  // Define which fields to search when user types in filter box\n  // Include SQL field for searching even though we don''t display it\n  const filterFields = [\n    ''Name'',\n    ''Description'',\n    ''Category'' \n  ];\n  \n  // Error state: Failed to load queries\n  // Shows the specific error message to help with debugging\n  if (error) {\n    return (\n      <div style={{ padding: ''20px'', textAlign: ''center'', color: ''#ff4d4f'' }}>\n        Error loading queries: {error}\n      </div>\n    );\n  }\n  \n  // Render the DataGrid with our query data\n  // The DataGrid handles all the UI - we just provide the data and configuration\n  // Note: queries is null during initial load, which DataGrid handles by showing a spinner\n  // Wrapped in a div with padding for better visual spacing\n  return (\n    <div style={{ padding: ''10px'', width: ''100%'' }}>\n      <DataGrid\n        entityName=\"Queries\"\n        data={queries}  // null initially, then array of query objects\n        fields={displayFields}\n        filterFields={filterFields}\n        utilities={utilities}\n        styles={styles}\n        components={components}\n        callbacks={callbacks}\n        savedUserSettings={savedUserSettings}\n        onSaveUserSettings={onSaveUserSettings}\n      />\n    </div>\n  );\n} ","exampleUsage":"<QueryGrid\n  utilities={utilities}\n  styles={styles}\n  components={components}\n  callbacks={callbacks}\n  savedUserSettings={savedUserSettings}\n  onSaveUserSettings={onSaveUserSettings}\n/>"}'
SET
  @FunctionalRequirements_ca433f4c = N'Provide a zero-configuration grid for viewing system queries; Demonstrate simple composition by wrapping DataGrid; Automatically load and display all queries; Auto-loads all queries on mount; Pre-configured optimal columns for query display; All DataGrid features available including filtering sorting and paging; No configuration needed just drop in and use'
SET
  @TechnicalDesign_ca433f4c = N'Ultra-thin wrapper around DataGrid; Uses RunView to fetch queries; Passes data directly to DataGrid; No props or events purely self-contained; Loads DataGrid from components registry; Shows component composition without coupling; Minimal wrapper with automatic data loading'
SET
  @FunctionalRequirementsVector_ca433f4c = N'[-0.07905394583940506,0.07454535365104675,0.005547280889004469,-0.05670057237148285,0.010451884008944035,0.03306456655263901,0.06756234914064407,0.020684732124209404,-0.01816805824637413,0.020989306271076202,-0.010407667607069016,0.010959482751786709,-0.011581744067370892,0.04009242355823517,0.0483231320977211,-0.03715730458498001,0.019942784681916237,0.019146952778100967,-0.10705418884754181,-0.004125587642192841,0.013587823137640953,-0.021020421758294106,-0.005427028983831406,-0.016981052234768867,-0.047245875000953674,0.0017858250066637993,-0.06812378019094467,0.027635369449853897,-0.010762201622128487,-0.06023712456226349,-0.038041990250349045,0.05421354994177818,-0.008279564790427685,0.03436235338449478,0.0000021093371742608724,-0.0307462178170681,-0.031074756756424904,0.03040524758398533,-0.02100013568997383,0.05673632398247719,0.052746959030628204,0.018081866204738617,0.0413191057741642,-0.011317487806081772,0.007982323877513409,-0.02512853965163231,-0.012504026293754578,0.034569185227155685,0.03883925825357437,-0.010226666927337646,0.029726199805736542,-0.009721239097416401,-0.06701143831014633,-0.021015068516135216,0.007000844459980726,-0.030975723639130592,0.0011741515481844544,0.009419994428753853,0.07904157787561417,-0.02120194025337696,-0.014616889879107475,-0.0005622510216198862,-0.030744651332497597,-0.04124986007809639,0.01508396863937378,0.017846480011940002,0.01617804914712906,-0.01486063189804554,0.07474436610937119,-0.00366158876568079,0.10176809877157211,-0.030021224170923233,0.004598107188940048,-0.031784847378730774,-0.0023854125756770372,-0.008948702365159988,-0.02255939692258835,-0.04716227576136589,0.014788668602705002,0.027004117146134377,-0.059784065932035446,-0.02835903689265251,-0.015591875649988651,-0.04234801232814789,-0.07798347622156143,0.02886791154742241,-0.008059585466980934,-0.005614232737571001,0.0012586426455527544,-0.032723117619752884,0.07779695093631744,-0.036011189222335815,-0.029388273134827614,0.037742406129837036,-0.04558559134602547,0.001650963444262743,0.004404808860272169,-0.08659692108631134,0.06492593884468079,-0.004845228511840105,0.03446304425597191,0.030889412388205528,0.09087688475847244,-0.01649102196097374,0.044847432523965836,0.02872609533369541,-0.030894100666046143,-0.007264794781804085,-0.023672236129641533,-0.01164940930902958,-0.0019937590695917606,-0.011425048112869263,-0.0429057739675045,0.02857077680528164,-0.018784010782837868,0.005411078687757254,-0.019235363230109215,0.016652852296829224,0.014543346129357815,-0.0022707595489919186,0.061389099806547165,0.025146344676613808,0.005019029136747122,0.010709370486438274,0.006561829708516598,-0.023511789739131927,0.013686430640518665,-0.03933000937104225,-0.021065618842840195,-0.06660786271095276,-0.04855933040380478,-0.02529303729534149,0.030520807951688766,0.01585373654961586,-0.026839498430490494,-0.0016558266943320632,-0.0030597734730690718,0.0031285497825592756,-0.09541119635105133,-0.029745707288384438,0.05085078626871109,0.0345621295273304,-0.033633314073085785,0.048570845276117325,0.012239440344274044,0.008026326075196266,0.009558692574501038,0.08371684700250626,-0.018775328993797302,0.012776840478181839,-0.0027333658654242754,-0.014351601712405682,-0.007025100290775299,0.015937400981783867,0.004761263728141785,-0.013816150836646557,0.07090958952903748,-0.0009146813536062837,-0.066944420337677,-0.00041787303052842617,-0.01648196019232273,0.02674841694533825,0.049312375485897064,-0.006647299509495497,0.036304861307144165,0.05106773227453232,-0.09677000343799591,0.08039730787277222,-0.03162087872624397,-0.020851388573646545,-0.01187204010784626,-0.048577092587947845,0.009134168736636639,0.019160224124789238,-0.020816387608647346,-0.03825107216835022,0.10358164459466934,-0.014698690734803677,-0.017054077237844467,0.013757347129285336,0.015050108544528484,-0.04753764346241951,0.019388217478990555,0.023844195529818535,0.0776667445898056,-0.026195324957370758,-0.016879254952073097,0.007381192408502102,-0.006309037562459707,0.015849780291318893,0.023376332595944405,0.0016664699651300907,-0.06541295349597931,0.05279146507382393,0.009803109802305698,0.04601719230413437,-0.0005719979526475072,-0.10476798564195633,0.023731546476483345,-0.03885236382484436,-0.03914741054177284,0.00914574135094881,0.00225584558211267,0.04654860496520996,0.003603863762691617,-0.05174051225185394,-0.005045201629400253,-0.0017968248575925827,0.09151122719049454,-0.009320776909589767,0.06781813502311707,0.005403852090239525,-0.030040180310606956,0.024822330102324486,-0.03263045847415924,0.02653789147734642,0.05630899593234062,0.041436683386564255,-0.051224492490291595,0.019323250278830528,-0.011792594566941261,-0.03434615954756737,-0.024603283032774925,0.01744852028787136,0.05507231876254082,-0.014546344988048077,0.039824578911066055,-0.012547067366540432,-0.00733470031991601,0.007782097440212965,-0.04572664946317673,0.001999523490667343,0.0312393456697464,0.03246608376502991,0.005342148244380951,-0.019879737868905067,0.019018543884158134,0.10509832203388214,-0.06388095766305923,-0.04039500281214714,0.03846020624041557,-0.07089919596910477,-0.05000412091612816,-0.002115624025464058,-0.038262199610471725,-0.05702808126807213,-0.06799556314945221,0.013347119092941284,-0.014721701852977276,-0.019263841211795807,-0.015114939771592617,-0.024301327764987946,0.001498718629591167,0.015879886224865913,-0.0029669415671378374,0.05404295772314072,-0.0335405133664608,0.03582021966576576,-0.05182752013206482,0.03942250832915306,0.008663235232234001,-0.016925718635320663,-0.02625269629061222,-0.06267359107732773,0.007476146798580885,0.02738123945891857,0.06799590587615967,-0.04430733621120453,-0.0027656443417072296,0.011736243963241577,-0.015030375681817532,0.057598210871219635,0.027835724875330925,-0.012923724949359894,-0.039808500558137894,-0.0025721024721860886,0.027383524924516678,0.035120900720357895,-0.025670526549220085,-0.024767713621258736,0.049154557287693024,-0.005838986020535231,-0.001384863629937172,0.0005832889000885189,-0.022833095863461494,-0.0043797567486763,0.022847235202789307,-0.035231247544288635,0.056823380291461945,-0.007428805809468031,0.03368701413273811,-0.0080175269395113,0.028876077383756638,0.012022005394101143,-0.022444171831011772,0.013451868668198586,-0.05528351664543152,0.08160161972045898,0.0179439689964056,-0.034740470349788666,0.005829113535583019,0.013426186516880989,-0.04565562680363655,0.016955014318227768,-0.023541193455457687,0.06225047633051872,0.03284468501806259,0.01270283292979002,0.05909150838851929,-0.04151442274451256,0.03718964383006096,0.012084657326340675,0.035537220537662506,0.04527915641665459,-0.007761726621538401,-0.008142989128828049,-0.028029710054397583,0.010794708505272865,-0.004037558101117611,0.033334605395793915,0.03059455007314682,-0.010867911390960217,0.02426772750914097,-0.008678966201841831,-0.0018272544257342815,0.01832476817071438,-0.027695976197719574,-0.008397463709115982,-0.07000000029802322,-0.0010734040988609195,0.01932326704263687,-0.022561639547348022,-0.00025379963335581124,-0.01698080450296402,-0.013050432316958904,-0.015567262656986713,-0.03399955853819847,0.02791604772210121,0.01535548735409975,-0.0557066835463047,-0.0211900994181633,-0.02665894106030464,-0.06664832681417465,0.05293356999754906,-0.005250926595181227,-0.007436454761773348,0.11048950254917145,-0.015607887879014015,0.013869892805814743,-0.02477322705090046,0.030968986451625824,0.034432634711265564,-0.02334490604698658,-0.008308407850563526,0.030708257108926773,-0.055563557893037796,-0.037536002695560455,0.03246968984603882,-0.0667436420917511,0.01790809817612171,-0.010438932105898857,-0.00024119854788295925,-0.01833324506878853,-0.05198074132204056,0.06424655020236969,0.026874808594584465,0.0029817516915500164,0.03273388743400574,0.001182057778351009,-0.042236167937517166,-0.08974793553352356,0.005754114128649235,0.02505260705947876,0.010311163030564785,0.0015431802021339536,-0.00856397207826376,-0.01284873764961958,0.016900168731808662,-0.008893982507288456,0.04568405821919441,0.05692785233259201,-0.05791549012064934,0.05956653878092766,0.011198814027011395,0.09060919284820557,-0.00821204949170351,-0.022020261734724045,-0.02536792680621147,-0.06370944529771805,-0.014033650979399681,0.0088395606726408,0.02217785269021988,0.0707588791847229,-0.05557543411850929,-0.03006519377231598,-0.05957023426890373,-0.09503693133592606,0.05342038348317146,0.006130549591034651,0.00814942829310894,-0.009416342712938786,0.057169344276189804,0.02453594282269478,-0.058666035532951355,0.0373186431825161,-0.04064495489001274,0.022405102849006653,0.040256768465042114,0.010703460313379765,-0.0610898993909359,-0.00760448956862092,0.001410696073435247,-0.011405264027416706,-0.06949914991855621,0.017570067197084427,0.0036689299158751965,-0.0005609112558886409,-0.005844326224178076,-0.0010651597985997796,0.03977956622838974,0.052438218146562576,-0.023203639313578606,0.043725430965423584,-0.039947737008333206,0.02485494874417782,-0.0406813882291317,-0.025378135964274406,-0.005077055189758539,-0.01366252638399601,0.046338554471731186,0.018444102257490158,-0.02798067219555378,0.0020358117762953043,0.032388798892498016,-0.033705852925777435,0.03254181146621704,0.00821124017238617,-0.007074306253343821,0.040199581533670425,0.04539433866739273,-0.0038585569709539413,0.014392045326530933,0.05820596590638161,0.019908830523490906,-0.04054329916834831,-0.035612285137176514,0.003319566370919347,0.003824997926130891,-0.0695149302482605,0.013121211901307106,-0.0040432242676615715,-0.040505003184080124,-0.02315329946577549,0.03468630090355873,-0.019214509055018425,-0.03080504573881626,-0.05532785505056381,0.04458293691277504,-0.02161530591547489,-0.0066259135492146015,0.010737485252320766,0.022793535143136978,-0.07379666715860367,0.02863025665283203,-0.0030880942940711975,-0.041703421622514725,0.07948686927556992,0.004953582305461168,-0.008679372258484364,-0.057034049183130264,-0.05275245010852814,0.00808608066290617,-0.0017600897699594498,-0.016825007274746895,0.022820185869932175,-0.023970115929841995,-0.023000480607151985,-0.000840368214994669,-0.01945716142654419,0.04021258279681206,0.02106855995953083,-0.005761153530329466,0.04684452340006828,-0.07784440368413925,0.010717391967773438,0.060236334800720215,-0.033026035875082016,-0.027494732290506363,-0.012562884017825127,0.02468039095401764,-0.004831050056964159,-0.004358600825071335,-0.007521676830947399,0.06199789419770241,-0.0158001147210598,0.04161961376667023,-0.026072725653648376,-0.004520234651863575,0.005494988989084959,-0.12696439027786255,0.000018003780496655963,0.015149036422371864,-0.009302819147706032,-0.02039743959903717,0.0036197069566696882,0.010036852210760117,0.005891336128115654,-0.016860196366906166,0.009901017881929874,-0.0013137571513652802,-0.021770266816020012,-0.04550393298268318,-0.014480960555374622,-0.0015577052254229784,0.00797044113278389,0.02672749198973179,-0.03776120766997337,0.028983870521187782,-0.04916379228234291,0.009550346061587334,-0.008004422299563885,0.006680548191070557,-0.005181281361728907,0.0033482324797660112,0.06235389783978462,0.010975214652717113,0.028640639036893845,-0.003534363815560937,-0.01174327451735735,0.037641461938619614,0.010888515040278435,-0.01300196535885334,-0.00556047260761261,0.013732743449509144,-0.01725095696747303,0.014455566182732582,0.06800749897956848,0.024623263627290726,-0.0024220619816333055,-0.016645316034555435,-0.03943939134478569,0.022439217194914818,-0.0010702244471758604,0.005511815194040537,-0.03407466411590576,-0.0283050537109375,0.02360726334154606,0.011181879788637161,0.03107166662812233,0.019220609217882156,0.025024376809597015,-0.006635642610490322,-0.07384750247001648,-0.0349736250936985,-0.006824109703302383,-6.457461401491123e-33,-0.0308229923248291,-0.024680599570274353,-0.05872349068522453,0.008768895640969276,0.02487948350608349,-0.0739939734339714,0.043984100222587585,-0.005903942510485649,-0.050408970564603806,0.016973616555333138,-0.024932680651545525,0.03119383193552494,-0.003065901342779398,-0.024412499740719795,-0.03961119428277016,0.03232185170054436,0.03313232585787773,-0.03418085351586342,-0.0007148304139263928,0.0198598001152277,0.03196445107460022,0.05075092241168022,-0.06220708414912224,-0.022775869816541672,-0.041923679411411285,-0.03884446620941162,0.01628047414124012,0.014397960156202316,-0.062212005257606506,-0.03758168965578079,0.017118379473686218,-0.03341154754161835,-0.024081746116280556,0.02125588245689869,-0.013252153992652893,-0.01785973832011223,-0.0696786418557167,-0.011236744932830334,0.001430194592103362,-0.0049973139539361,0.1062692403793335,0.02560579590499401,0.05096329748630524,0.0024237430188804865,-0.042405594140291214,0.026615235954523087,0.011469563469290733,0.041543640196323395,-0.016642754897475243,-0.07094983756542206,0.026577547192573547,0.006198229733854532,0.009826445952057838,0.01943226531147957,0.0035195813979953527,0.0682385265827179,0.034400153905153275,0.05566665902733803,-0.03561879321932793,0.007558503188192844,0.0641905814409256,-0.009093823842704296,0.012318108230829239,0.0419091060757637,0.07461895793676376,-0.03191255033016205,-0.006964226718991995,-0.01259035523980856,-0.03276904299855232,0.03136735036969185,-0.014770054258406162,0.011574234813451767,-0.03641984984278679,-0.05006857216358185,0.04391409084200859,-0.0031170318834483624,-0.02040800079703331,-0.02385588549077511,-0.08643107861280441,0.0033201398327946663,-0.009822320193052292,0.010559012182056904,0.00009087954822462052,-0.00496844993904233,0.02872997708618641,-0.01381194032728672,-0.034311894327402115,0.016068100929260254,0.023084113374352455,0.02656157873570919,-0.05632488429546356,-0.019011778756976128,-0.03563396632671356,-0.006439992692321539,-0.06312358379364014,0.052210282534360886,0.04010608419775963,-0.06681163609027863,0.01257861778140068,-0.00991220586001873,0.008005228824913502,0.05185253918170929,0.009217903017997742,0.03511369600892067,-0.01343587413430214,-0.006029420532286167,0.04537682607769966,-0.010158277116715908,-0.06766582280397415,-0.0032993839122354984,0.01624613255262375,0.009041763842105865,0.033362243324518204,0.02347523160278797,0.011823463253676891,0.02350938692688942,0.027439789846539497,0.02260531857609749,-0.0048568760976195335,-0.00291981128975749,-0.007472519762814045,-0.04552675038576126,-0.043352093547582626,-0.003367515979334712,0.058073367923498154,-0.0008068216266110539,0.0014758732868358493,-0.000929908303078264,0.03828201815485954,0.005667579360306263,-0.022713160142302513,0.06981151551008224,2.764923010545317e-7,0.03533465415239334,-0.008839955553412437,-0.015688076615333557,0.07620881497859955,0.011356787756085396,-0.04552168399095535,-0.01623673550784588,-0.00513989245519042,-0.006682408973574638,-0.01476785447448492,0.025557445362210274,-0.04154086858034134,0.015961037948727608,0.021601572632789612,-0.04548310860991478,-0.036940135061740875,0.009813446551561356,-0.028892777860164642,-0.034444406628608704,-0.02862006612122059,0.07027044147253036,0.01457520667463541,-0.03483644500374794,0.03223944082856178,0.04209244251251221,-0.007233225274831057,-0.005954413209110498,0.0165617223829031,0.07105307281017303,0.0005130429053679109,0.09104056656360626,-0.024459844455122948,0.003273142734542489,0.01784561388194561,-0.014799416996538639,0.015410596504807472,-0.05295875668525696,0.0019111190922558308,0.010166287422180176,-0.021326998248696327,0.040965624153614044,-0.0678950846195221,0.0030318063218146563,-0.025238797068595886,0.02836502529680729,-0.026436761021614075,0.026688892394304276,0.10628364235162735,-0.006761766504496336,-0.021672256290912628,0.028599370270967484,-0.004868107847869396,0.024463612586259842,-0.05656982213258743,0.00803743489086628,-0.0072707682847976685,0.0031909113749861717,0.0311372522264719,0.01600652001798153,0.0175149105489254,-0.024600081145763397,-0.017440196126699448,-0.015043443068861961,0.056219182908535004,0.0362994521856308,0.07320957630872726,-0.014809179119765759,3.1525093970685887e-34,0.02509625069797039,0.011509125120937824,0.04714053496718407,-0.008831883780658245,-0.007968304678797722,-0.007764771580696106,0.014047601260244846,-0.02929123118519783,0.028567643836140633,-0.08715749531984329,-0.007795613259077072]'
SET
  @TechnicalDesignVector_ca433f4c = N'[-0.04011168330907822,0.07250752300024033,-0.007526525296270847,-0.033738601952791214,-0.006066786125302315,-0.017221692949533463,0.053547199815511703,0.03988714888691902,0.041548002511262894,0.0035559639800339937,0.01260390505194664,0.0002684584178496152,0.05075844004750252,0.06290978938341141,0.040479663759469986,-0.03248671069741249,0.015185230411589146,0.05001728981733322,-0.032329536974430084,-0.005922313779592514,0.021778253838419914,-0.06736461818218231,-0.012744534760713577,-0.019760891795158386,-0.03009343333542347,-0.005227386020123959,-0.049636270850896835,0.004461776465177536,0.009805407375097275,-0.07680749893188477,0.02504289336502552,0.02187604084610939,-0.02953597716987133,0.03489071875810623,0.0000016883863054317771,-0.0034871334210038185,0.006371273659169674,0.00855424627661705,0.0035157976672053337,0.02312699519097805,0.04863540828227997,-0.015455462969839573,0.024998029693961143,-0.007751586381345987,0.011845463886857033,-0.08966194838285446,0.00638286117464304,0.0454743430018425,0.054222218692302704,-0.032955437898635864,0.017540721222758293,0.013035133481025696,0.007742409128695726,0.007319694384932518,0.04390634223818779,0.057167403399944305,-0.006899208761751652,0.018623311072587967,0.05121903866529465,-0.048458345234394073,-0.01236727461218834,-0.032332245260477066,-0.04002625122666359,-0.016356270760297775,-0.03086499311029911,0.005783382803201675,-0.00774596119299531,-0.016355114057660103,0.016645221039652824,0.010372642427682877,0.1198057010769844,-0.051103632897138596,0.004955993499606848,-0.008893315680325031,-0.005086585413664579,0.020709270611405373,-0.005740506574511528,-0.056851036846637726,-0.004704179707914591,0.022064289078116417,-0.030692165717482567,0.005065083969384432,-0.009396007284522057,-0.03223033621907234,-0.02995901368558407,0.033475395292043686,0.005090279970318079,0.007025154773145914,-0.03129107505083084,-0.00668753869831562,0.14612655341625214,-0.016965171322226524,-0.03521846979856491,0.04286655783653259,-0.004108739085495472,-0.00874457135796547,-0.007783090230077505,-0.10182376205921173,0.07438597828149796,0.028058817610144615,0.05068717524409294,0.0384691022336483,0.06910469383001328,-0.022366618737578392,0.02491859532892704,0.017949432134628296,-0.02272755466401577,-0.06619736552238464,0.009140321984887123,-0.036962155252695084,0.03998046740889549,-0.013953905552625656,-0.04150350019335747,0.06475771963596344,-0.04682726413011551,0.0019632240291684866,0.00608156668022275,0.002404737751930952,0.0015718801878392696,-0.032884277403354645,0.041738733649253845,-0.00004704371895059012,0.004027641844004393,-0.00821285042911768,0.0222646314650774,0.02988186851143837,-0.003190247807651758,-0.08777819573879242,0.023025665432214737,-0.03574451431632042,-0.0428043007850647,-0.023796766996383667,0.03273439034819603,0.007865236140787601,-0.020054349675774574,0.037477437406778336,-0.011816499754786491,0.02751260995864868,-0.08223870396614075,0.011814041063189507,-0.0011911510955542326,0.03476138040423393,-0.01654082164168358,0.02665521204471588,-0.0012924402253702283,-0.02052239701151848,0.013501127250492573,-0.023142440244555473,0.020404398441314697,0.03694850951433182,0.02876415103673935,-0.002034481381997466,-0.02454361319541931,-0.0007298053242266178,-0.06375528872013092,0.0024486586917191744,0.05395101010799408,-0.03520786017179489,-0.023935027420520782,-0.022684354335069656,0.0039050497580319643,0.02085362933576107,0.08012043684720993,0.01171170175075531,0.023765426129102707,0.04293323680758476,-0.10173900425434113,0.03828887641429901,-0.014943196438252926,-0.06181521713733673,-0.013635944575071335,-0.042034294456243515,-0.0026065302081406116,0.07495636492967606,0.024702919647097588,-0.0429597906768322,0.032085154205560684,0.0037266090512275696,-0.10794149339199066,0.03098108619451523,0.018730290234088898,-0.0532413013279438,0.013331257738173008,0.024918006733059883,0.06736458092927933,-0.04324667155742645,-0.03349991887807846,0.04563073068857193,-0.011058557778596878,0.004409505985677242,0.0036850038450211287,-0.020607532933354378,0.01850784569978714,0.03931738808751106,0.0027637232560664415,0.025145212188363075,0.022653458639979362,-0.025633927434682846,0.06373816728591919,-0.009673970751464367,-0.03561236709356308,-0.0054063391871750355,-0.019888192415237427,0.007364490069448948,-0.025922954082489014,-0.03852953389286995,-0.06476350128650665,0.011225548572838306,0.0804295688867569,0.013086503371596336,0.036219410598278046,-0.01883225329220295,-0.03462451696395874,0.014400295913219452,-0.005468460265547037,0.008992373012006283,0.05501867085695267,0.05606839805841446,-0.03689059615135193,-0.016649141907691956,-0.05735073611140251,0.005331308580935001,0.009331164881587029,0.04035060107707977,0.08493369072675705,-0.015757326036691666,0.07213865220546722,-0.031043412163853645,-0.02733265981078148,-0.038856979459524155,-0.0331813246011734,-0.04436154663562775,-0.00638232147321105,0.04550265893340111,0.01617846079170704,-0.03184168413281441,-0.03483375534415245,0.0008137821569107473,-0.023579124361276627,0.0308724083006382,0.032656483352184296,-0.023828765377402306,-0.016175836324691772,0.002630298724398017,-0.03940323740243912,-0.04113486036658287,-0.08662012219429016,0.014564312994480133,-0.03116193599998951,-0.015968244522809982,0.025283852592110634,-0.024319926276803017,0.004309592768549919,0.0037071167025715113,-0.01634003408253193,0.0644543394446373,0.055927861481904984,0.05924270302057266,-0.012390931136906147,0.0036393848713487387,0.015583550557494164,-0.0541655458509922,0.0045097460970282555,-0.03682558983564377,0.002954320050776005,0.04581848159432411,0.03635169565677643,0.037567686289548874,0.024282215163111687,0.02344653382897377,-0.003367246827110648,0.013657140545547009,0.026741206645965576,-0.009891056455671787,-0.0009435514803044498,-0.003940347582101822,0.008040977641940117,0.039453767240047455,-0.06176978722214699,-0.0016655391082167625,-0.0005653572152368724,0.01634320057928562,0.02327396348118782,0.018472112715244293,-0.0028504086658358574,-0.01242942176759243,0.01831459067761898,-0.007350529078394175,0.049737390130758286,-0.08820167183876038,0.004169679246842861,0.02494407817721367,0.01930098421871662,-0.04315820708870888,-0.02433670125901699,0.022789575159549713,-0.06696384400129318,0.09337060153484344,-0.03129422292113304,-0.054200440645217896,0.010888923890888691,-0.00937099102884531,-0.0166020505130291,0.03293658420443535,-0.020414166152477264,0.05552402511239052,-0.019842518493533134,0.056227605789899826,0.0327536016702652,0.015460886061191559,0.005172884091734886,0.010296814143657684,0.032470472157001495,0.03994748741388321,0.01909179426729679,0.023220257833600044,0.07012064009904861,-0.000020197512640152127,-0.05766919255256653,0.022327283397316933,-0.008245863020420074,-0.03797036409378052,0.023999249562621117,-0.0326375849545002,-0.02466701902449131,0.04294917359948158,-0.03944843262434006,-0.0070084561593830585,-0.01869271509349346,-0.00039393146289512515,-0.01112902071326971,-0.04066409915685654,0.0031648166477680206,0.0072343610227108,0.05401599779725075,-0.03920667991042137,-0.041090160608291626,-0.01850251667201519,0.006911580916494131,-0.025285908952355385,-0.024334760382771492,-0.02660990133881569,-0.03573464974761009,0.09037470817565918,0.01717611402273178,-0.03785939887166023,0.019429082050919533,-0.03685256466269493,-0.019588524475693703,-0.023869886994361877,0.010809428058564663,0.044241659343242645,-0.0375061072409153,0.0005259031895548105,0.005171158351004124,0.02250460535287857,-0.04120082035660744,-0.027389977127313614,-0.021448172628879547,0.0491054393351078,0.04243979603052139,0.018341002985835075,-0.002783538307994604,-0.024661878123879433,0.010592309758067131,0.018962424248456955,0.02486564591526985,0.05007727071642876,0.013297348283231258,-0.05328596010804176,0.006112657021731138,0.021104902029037476,0.009126479737460613,0.004147174768149853,-0.04788784682750702,-0.01355154998600483,-0.010909411124885082,0.002623367588967085,0.06265950202941895,0.04331144317984581,0.03899223729968071,-0.006792329717427492,0.05006799101829529,0.002384868450462818,0.08442743122577667,-0.013247465714812279,-0.026414448395371437,0.00244647404178977,-0.037844616919755936,-0.01428538840264082,-0.00360470125451684,0.035366762429475784,0.04879027232527733,-0.042742740362882614,-0.025049738585948944,0.03398285061120987,-0.025372769683599472,0.00939936749637127,0.009643803350627422,0.016799233853816986,-0.013788871467113495,0.015326617285609245,0.02680034376680851,-0.03955071046948433,0.05068653076887131,-0.02012016996741295,-0.03810295835137367,0.02996595948934555,0.027045702561736107,0.06223803386092186,0.014482967555522919,-0.05090431496500969,-0.03561665862798691,-0.05484757199883461,-0.007071643136441708,0.011478711850941181,0.0032680395524948835,-0.028811872005462646,-0.023040570318698883,0.01744987443089485,0.03174729645252228,-0.007425686810165644,0.07614311575889587,-0.04871661216020584,0.012398426420986652,-0.032351054251194,-0.0737847164273262,-0.012600651942193508,-0.006362573709338903,-0.009189290925860405,0.008983613923192024,-0.0249806959182024,0.03289471194148064,-0.029480429366230965,0.029108302667737007,-0.032343171536922455,0.010717635974287987,-0.020455779507756233,0.04604572057723999,0.022068088874220848,0.010229915380477905,0.006650384981185198,0.06355667114257812,0.04079418629407883,-0.007493146229535341,-0.11306890845298767,-0.011231997050344944,0.01719730719923973,-0.03105665184557438,0.0026985337026417255,-0.051820382475852966,-0.011892017908394337,-0.01429389975965023,0.051793430000543594,-0.007282276172190905,-0.03538919612765312,-0.0049715121276676655,0.08368638157844543,-0.05832791328430176,-0.0032052851747721434,-0.006455866154283285,0.02250826172530651,-0.0456324927508831,0.03336913138628006,0.005572579801082611,-0.037351127713918686,0.09519810229539871,-0.015476862899959087,-0.012620670720934868,-0.036985594779253006,-0.041329193860292435,-0.0062792180106043816,-0.032605014741420746,-0.04538939520716667,0.04201390594244003,-0.0008689817041158676,-0.003806980326771736,0.004632758907973766,-0.010754799470305443,0.032612111419439316,0.033105164766311646,0.009898784570395947,0.009298323653638363,-0.010996817611157894,0.02047635056078434,0.02100604772567749,-0.014950321987271309,-0.012250623665750027,-0.03715749457478523,0.01965433359146118,-0.02484811842441559,0.0054634506814181805,0.0009697036584839225,0.09672734141349792,0.0351811945438385,0.04396458715200424,-0.027369001880288124,-0.010723019018769264,-0.037054579704999924,-0.05371313914656639,-0.04908212646842003,0.009316924959421158,0.010872921906411648,-0.005460131913423538,0.024289503693580627,-0.02343934215605259,-0.01152997836470604,-0.010762686841189861,0.021257931366562843,0.008208551444113255,0.009526968002319336,-0.0768313929438591,-0.030633043497800827,0.00451762555167079,0.005033914931118488,0.05028894916176796,-0.09765446931123734,0.06732744723558426,-0.019433017820119858,-0.0022771006915718317,0.001664152485318482,0.02039967104792595,-0.02488080784678459,-0.017008354887366295,0.06051039323210716,0.009940629824995995,0.0011334462324157357,0.01607958972454071,-0.0006990445544943213,0.013714717701077461,0.02553091011941433,-0.0098463399335742,0.0019734306260943413,0.00831522885710001,0.017892787232995033,0.04343859478831291,0.05601058527827263,0.005055502522736788,0.001914474880322814,-0.06072006747126579,-0.03527991473674774,0.03333628550171852,-0.019791636615991592,-0.02278974838554859,0.0029112219344824553,-0.07035195082426071,0.019069384783506393,-0.06231062859296799,0.023879896849393845,0.030820922926068306,0.06323567032814026,-0.03993227705359459,-0.04453589394688606,0.017902489751577377,-0.003180413506925106,-6.044027916021432e-33,-0.01988520473241806,0.0024679829366505146,-0.033622365444898605,0.020064061507582664,-0.0008922228589653969,-0.04993506893515587,0.006938291247934103,-0.005407329183071852,-0.017577985301613808,0.025998486205935478,-0.002615164266899228,-0.015478386543691158,-0.0014677467988803983,0.02215457707643509,-0.029737617820501328,0.011198322288691998,0.03557358682155609,-0.03950010985136032,-0.004559003747999668,0.03327605128288269,-0.040565017610788345,0.021612927317619324,-0.09161937236785889,-0.0538463331758976,-0.05257592722773552,-0.04163512587547302,0.059574078768491745,0.043094366788864136,-0.012082846835255623,-0.00423390744253993,0.013943198136985302,-0.0016589778242632747,-0.013572421856224537,0.09207256138324738,-0.009733309037983418,0.05927962064743042,-0.12314452230930328,-0.02289789356291294,-0.019397929310798645,0.0075990608893334866,0.10927868634462357,-0.0016296267276629806,0.029189230874180794,0.0046666632406413555,-0.020071323961019516,-0.012469408102333546,0.013822486624121666,0.001182324718683958,-0.005271244328469038,-0.10410019010305405,0.022163528949022293,0.01678786799311638,-0.0031788053456693888,0.02027083747088909,0.010670477524399757,0.0535239577293396,0.045075125992298126,0.07087133824825287,0.0023605546448379755,-0.025973718613386154,0.022862523794174194,-0.005360824521631002,0.01536609511822462,0.05359547957777977,0.05577392503619194,0.013933565467596054,0.02647164836525917,-0.003885681042447686,-0.08605596423149109,-0.02078157104551792,0.0042251478880643845,-0.02210131101310253,0.0234731063246727,-0.053220946341753006,0.037415385246276855,-0.01545676775276661,0.005842855200171471,-0.050401490181684494,-0.03670639172196388,-0.044670913368463516,-0.0037126573733985424,-0.027275018393993378,0.04862917587161064,-0.005339565221220255,0.006100666243582964,-0.035913582891225815,0.023990169167518616,-0.019832966849207878,0.008106565102934837,0.0203747246414423,-0.0309117641299963,-0.06491826474666595,-0.0531400665640831,-0.00046833700616844,-0.009503932669758797,-0.03131430223584175,0.08559057861566544,-0.02017303556203842,-0.02033555507659912,-0.0037000509910285473,0.028091344982385635,0.010859395377337933,-0.041139233857393265,0.03029504418373108,-0.01796865090727806,-0.02023780718445778,0.013876749202609062,-0.00016508615226484835,-0.05926194414496422,0.028540853410959244,0.01538755837827921,0.015095909126102924,0.00896560400724411,0.03790099173784256,-0.02110210992395878,0.0046111466363072395,0.0336114726960659,-0.0019377019489184022,0.034610163420438766,-0.033870879560709,0.0008828265708871186,0.007729988545179367,-0.0314045250415802,-0.034412045031785965,0.033825986087322235,-0.010898929089307785,-0.044936470687389374,0.02842501550912857,0.014678996987640858,-0.022028887644410133,0.0041709886863827705,0.0443028099834919,2.5736733277881285e-7,-0.02413143217563629,-0.015007143840193748,-0.052515171468257904,0.0335397869348526,0.012192836962640285,-0.09736955165863037,-0.03291986882686615,-0.04284007474780083,-0.008281229995191097,-0.08122599124908447,0.011235908605158329,-0.045387402176856995,0.03083079494535923,0.023077571764588356,-0.017129220068454742,-0.0019693290814757347,0.014461702667176723,-0.051229506731033325,-0.013537912629544735,-0.017405029386281967,0.06116816774010658,-0.01642880216240883,-0.007905782200396061,0.010407384485006332,0.010413951240479946,0.06071135774254799,0.0072687300853431225,0.04071494936943054,0.10664001852273941,0.030236173421144485,0.045284684747457504,-0.004252457059919834,-0.02047574147582054,-0.008913451805710793,0.004394516348838806,0.008819603361189365,-0.04910535365343094,-0.010197637602686882,-0.010763601399958134,0.01626475714147091,0.06479638069868088,-0.04695041850209236,-0.023295391350984573,0.02341565489768982,0.021984346210956573,-0.05715634673833847,0.01058019045740366,0.062248650938272476,-0.05719533562660217,-0.0007744229515083134,-0.023896047845482826,0.019636038690805435,0.06887359917163849,-0.05453630909323692,0.003714076243340969,-0.010085957124829292,0.014729931019246578,0.03140256553888321,-0.014863290823996067,0.008429738692939281,-0.002964142942801118,-0.021981073543429375,0.002781488001346588,0.013851490803062916,0.023115526884794235,0.011545351706445217,-0.030286183580756187,3.3252958167911856e-34,0.022052180022001266,-0.05160636082291603,0.011090032756328583,0.024486150592565536,0.010319462046027184,-0.02064925990998745,0.09809485822916031,-0.01081379409879446,0.018407126888632774,-0.04258960857987404,-0.008830605074763298]'
SET
  @HasCustomProps_ca433f4c = 0
SET
  @HasCustomEvents_ca433f4c = 0
SET
  @RequiresData_ca433f4c = 0
SET
  @DependencyCount_ca433f4c = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_ca433f4c = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_ca433f4c = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_ca433f4c = 0
SET
  @ID_ca433f4c = 'B9F675F4-BD9F-4044-8FF0-66D3F41C01D8'
EXEC [${flyway:defaultSchema}].spUpdateComponent @Namespace = @Namespace_ca433f4c,
  @Name = @Name_ca433f4c,
  @Version = @Version_ca433f4c,
  @VersionSequence = @VersionSequence_ca433f4c,
  @Title = @Title_ca433f4c,
  @Description = @Description_ca433f4c,
  @Type = @Type_ca433f4c,
  @Status = @Status_ca433f4c,
  @DeveloperName = @DeveloperName_ca433f4c,
  @DeveloperEmail = @DeveloperEmail_ca433f4c,
  @DeveloperOrganization = @DeveloperOrganization_ca433f4c,
  @SourceRegistryID = @SourceRegistryID_ca433f4c,
  @ReplicatedAt = @ReplicatedAt_ca433f4c,
  @LastSyncedAt = @LastSyncedAt_ca433f4c,
  @Specification = @Specification_ca433f4c,
  @FunctionalRequirements = @FunctionalRequirements_ca433f4c,
  @TechnicalDesign = @TechnicalDesign_ca433f4c,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_ca433f4c,
  @TechnicalDesignVector = @TechnicalDesignVector_ca433f4c,
  @HasCustomProps = @HasCustomProps_ca433f4c,
  @HasCustomEvents = @HasCustomEvents_ca433f4c,
  @RequiresData = @RequiresData_ca433f4c,
  @DependencyCount = @DependencyCount_ca433f4c,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_ca433f4c,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_ca433f4c,
  @HasRequiredCustomProps = @HasRequiredCustomProps_ca433f4c,
  @ID = @ID_ca433f4c;

-- Save MJ: Components (core SP call only)
DECLARE @Namespace_baa20b6c NVARCHAR(MAX),
@Name_baa20b6c NVARCHAR(500),
@Version_baa20b6c NVARCHAR(50),
@VersionSequence_baa20b6c INT,
@Title_baa20b6c NVARCHAR(1000),
@Description_baa20b6c NVARCHAR(MAX),
@Type_baa20b6c NVARCHAR(255),
@Status_baa20b6c NVARCHAR(50),
@DeveloperName_baa20b6c NVARCHAR(255),
@DeveloperEmail_baa20b6c NVARCHAR(255),
@DeveloperOrganization_baa20b6c NVARCHAR(255),
@SourceRegistryID_baa20b6c UNIQUEIDENTIFIER,
@ReplicatedAt_baa20b6c DATETIMEOFFSET,
@LastSyncedAt_baa20b6c DATETIMEOFFSET,
@Specification_baa20b6c NVARCHAR(MAX),
@FunctionalRequirements_baa20b6c NVARCHAR(MAX),
@TechnicalDesign_baa20b6c NVARCHAR(MAX),
@FunctionalRequirementsVector_baa20b6c NVARCHAR(MAX),
@TechnicalDesignVector_baa20b6c NVARCHAR(MAX),
@HasCustomProps_baa20b6c BIT,
@HasCustomEvents_baa20b6c BIT,
@RequiresData_baa20b6c BIT,
@DependencyCount_baa20b6c INT,
@TechnicalDesignVectorEmbeddingModelID_baa20b6c NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_baa20b6c NVARCHAR(MAX),
@HasRequiredCustomProps_baa20b6c BIT,
@ID_baa20b6c UNIQUEIDENTIFIER
SET
  @Namespace_baa20b6c = N'Admin/Queries'
SET
  @Name_baa20b6c = N'EntityGrid'
SET
  @Version_baa20b6c = N'1.0.0'
SET
  @VersionSequence_baa20b6c = 1
SET
  @Title_baa20b6c = N'Entity Grid'
SET
  @Description_baa20b6c = N'A specialized grid component that displays all entities in the system using the generic DataGrid component'
SET
  @Type_baa20b6c = N'Table'
SET
  @Status_baa20b6c = N'Published'
SET
  @Specification_baa20b6c = N'{"name":"EntityGrid","title":"Entity Grid","description":"A specialized grid component that displays all entities in the system using the generic DataGrid component","type":"table","location":"embedded","functionalRequirements":"## Simple Entity Viewer\n\n### Purpose\n- Provide a zero-configuration grid for viewing system entities\n- Demonstrate simple composition by wrapping DataGrid\n- Automatically load and display all entities\n\n### Key Features\n- Auto-loads all entities on mount\n- Pre-configured optimal columns for entity display\n- All DataGrid features available (filtering, sorting, paging)\n- No configuration needed - just drop in and use","technicalDesign":"## Minimal Wrapper Design\n\n### Architecture\n- Ultra-thin wrapper around DataGrid\n- Uses RunView to fetch entities\n- Passes data directly to DataGrid\n- No props or events - purely self-contained\n\n### Registry Pattern\n- Loads DataGrid from components registry\n- Shows component composition without coupling","dataRequirements":{"mode":"views","entities":[{"name":"Entities","description":"System entities metadata","displayFields":["ID","Name","DisplayName","Description","SchemaName","BaseTable","BaseView","Status","__mj_CreatedAt","__mj_UpdatedAt"],"filterFields":["Name","DisplayName","Description","SchemaName","BaseTable","BaseView"],"sortFields":["Name","DisplayName","SchemaName","__mj_CreatedAt","__mj_UpdatedAt"],"usageContext":"Display all system entities in a filterable, sortable grid"}]},"properties":[],"events":[],"dependencies":[{"name":"DataGrid","namespace":"Generic/UI/Table","location":"registry","description":"Generic data grid"}],"libraries":[],"code":"function EntityGrid({\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  // Initialize with null to indicate \"not yet loaded\" state\n  // DataGrid will show loading spinner when data is null\n  const [entities, setEntities] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  \n\n  // Get DataGrid component from registry\n  // This demonstrates component composition via registry lookup\n  const { DataGrid } = components;\n\n  // Load entities on mount using RunView\n  React.useEffect(() => {\n    async function loadEntities() {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Use RunView to fetch all entities from the system\n        const result = await utilities.rv.RunView({\n          EntityName: ''Entities'' // MJ entity name for entities metadata\n        });\n        \n        if (result.Success) {\n          // Set entities to empty array if no results to avoid null issues\n          setEntities(result.Results || []);\n        } else {\n          setError(result.ErrorMessage || ''Failed to load entities'');\n          // Set entities to empty array on error so DataGrid doesn''t break\n          setEntities([]);\n        }\n      } catch (err) {\n        setError(err.message || ''Error loading entities'');\n        console.error(''Error loading entities:'', err);\n        // Set entities to empty array on error so DataGrid doesn''t break\n        setEntities([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    loadEntities();\n  }, [utilities]);\n  \n  // Define which fields to display in the grid\n  // These are optimized for entity viewing - showing most relevant info\n  const displayFields = [\n    ''Name'',\n    ''DisplayName'',\n    ''Description'',\n    ''SchemaName'',\n    ''BaseTable'',\n    ''Status'',\n    ''__mj_CreatedAt''\n  ];\n  \n  // Define which fields to search when user types in filter box\n  // Include more fields for comprehensive searching\n  const filterFields = [\n    ''Name'',\n    ''DisplayName'',\n    ''Description'',\n    ''SchemaName'',\n    ''BaseTable'',\n    ''BaseView'',\n    ''Status''\n  ];\n  \n  // Error state: Failed to load entities\n  // Shows the specific error message to help with debugging\n  if (error) {\n    return (\n      <div style={{ padding: ''20px'', textAlign: ''center'', color: ''#ff4d4f'' }}>\n        Error loading entities: {error}\n      </div>\n    );\n  }\n  \n  // Render the DataGrid with our entity data\n  // The DataGrid handles all the UI - we just provide the data and configuration\n  // Note: entities is null during initial load, which DataGrid handles by showing a spinner\n  // Wrapped in a div with padding for better visual spacing\n  return (\n    <div style={{ padding: ''10px'', width: ''100%'' }}>\n      <DataGrid\n        entityName=\"Entities\"\n        data={entities}  // null initially, then array of entity objects\n        fields={displayFields}\n        filterFields={filterFields}\n        utilities={utilities}\n        styles={styles}\n        components={components}\n        callbacks={callbacks}\n        savedUserSettings={savedUserSettings}\n        onSaveUserSettings={onSaveUserSettings}\n      />\n    </div>\n  );\n}","exampleUsage":"<EntityGrid\n  utilities={utilities}\n  styles={styles}\n  components={components}\n  callbacks={callbacks}\n  savedUserSettings={savedUserSettings}\n  onSaveUserSettings={onSaveUserSettings}\n/>"}'
SET
  @FunctionalRequirements_baa20b6c = N'Provide a zero-configuration grid for viewing system entities; Demonstrate simple composition by wrapping DataGrid; Automatically load and display all entities; Auto-loads all entities on mount; Pre-configured optimal columns for entity display; All DataGrid features available including filtering sorting and paging; No configuration needed just drop in and use'
SET
  @TechnicalDesign_baa20b6c = N'Ultra-thin wrapper around DataGrid; Uses RunView to fetch entities; Passes data directly to DataGrid; No props or events purely self-contained; Loads DataGrid from components registry; Shows component composition without coupling; Minimal wrapper with automatic entity data loading'
SET
  @FunctionalRequirementsVector_baa20b6c = N'[-0.05889810621738434,0.06119776517152786,0.0153352040797472,-0.03330712765455246,0.05264168977737427,0.05076298117637634,0.07987255603075027,0.02653687447309494,0.0013603857951238751,0.009498197585344315,-0.0036847591400146484,-0.008053749799728394,0.0031806800980120897,0.06385356187820435,0.04188847914338112,-0.041970208287239075,-0.01017927099019289,0.028111638501286507,-0.09242832660675049,-0.020944645628333092,0.022766485810279846,-0.030087918043136597,-0.008475618436932564,-0.009941695258021355,-0.04249223694205284,0.008179612457752228,-0.07838468253612518,0.031610481441020966,0.019768092781305313,-0.05076618120074272,-0.05111827701330185,0.04338698089122772,0.0072341375052928925,-0.0022485130466520786,0.000002135403974534711,-0.028695600107312202,-0.061678752303123474,0.013710329309105873,-0.08408420532941818,0.08387161791324615,0.009245128370821476,0.009026661515235901,-0.00468619866296649,-0.041811928153038025,0.013507094234228134,-0.03474544733762741,-0.005474694073200226,0.02556043677031994,0.03319358825683594,-0.01199816633015871,0.01811610721051693,-0.010627493262290955,-0.041877683252096176,-0.02622138150036335,-0.05932310223579407,0.004401766695082188,0.010082089342176914,-0.013264669105410576,0.03537890315055847,-0.0004431697598192841,-0.02443353645503521,0.005371017847210169,-0.001988446805626154,-0.00023566195159219205,0.017273250967264175,0.03376353159546852,0.0722619965672493,-0.004946678411215544,0.04816130921244621,0.028904905542731285,0.11955613642930984,-0.0020232510287314653,0.027690062299370766,-0.04677296802401543,0.007778927218168974,-0.03211832419037819,0.00939352810382843,-0.038191672414541245,-0.007851539179682732,0.018297938629984856,-0.04621734470129013,-0.033297982066869736,-0.032839335501194,-0.0410764180123806,-0.06893085688352585,0.008854229003190994,0.013676832430064678,-0.018975693732500076,-0.0828137919306755,-0.027564410120248795,0.03334103524684906,-0.04905516654253006,-0.05091137811541557,0.0547073557972908,-0.04102805256843567,-0.004067846108227968,0.016368407756090164,-0.09839888662099838,0.05055489018559456,0.005158655811101198,0.06513289362192154,0.03631901368498802,0.08792537450790405,0.006819652393460274,0.042737990617752075,0.05447329208254814,-0.028493249788880348,-0.012177424505352974,0.023030376061797142,0.015492534264922142,0.013775289990007877,0.002248460194095969,-0.05276670306921005,0.05053494870662689,-0.03129471465945244,0.00803585909307003,-0.023961327970027924,0.00881190225481987,-0.0028762288857251406,0.021921129897236824,0.0701347142457962,0.009800314903259277,0.0018557473085820675,-0.010406277142465115,0.008578799664974213,-0.03872022032737732,-0.04075814038515091,-0.05965143442153931,-0.022015340626239777,-0.044582705944776535,-0.023128479719161987,-0.04373597726225853,0.018110428005456924,0.02915992960333824,-0.02103915810585022,0.021085480228066444,0.04367241635918617,-0.005077021662145853,-0.07858950644731522,0.0029622556176036596,0.018287137150764465,0.02089921198785305,-0.033079665154218674,0.012828275561332703,0.013411210849881172,0.005557664670050144,-0.006525303237140179,0.02655642293393612,-0.014123321510851383,-0.022502249106764793,0.009214059449732304,-0.02514098398387432,-0.03866437077522278,0.018136266618967056,0.006309193558990955,-0.0019959413912147284,0.0351775698363781,0.006489119958132505,-0.03044849820435047,-0.030449839308857918,0.009127339348196983,0.04932674765586853,0.06477194279432297,0.03357101231813431,0.00750012369826436,0.0570032000541687,-0.028138937428593636,0.023523928597569466,-0.02768358215689659,-0.011936130002140999,-0.00766326766461134,-0.0572645403444767,-0.006481824442744255,0.003293821355327964,-0.018050750717520714,-0.040192876011133194,0.04594170302152634,-0.00891655869781971,0.0031211215537041426,0.03690679743885994,0.01269256230443716,-0.03397740423679352,-0.013546080328524113,0.04150955006480217,0.10444962978363037,-0.041986968368291855,0.016331136226654053,0.06512733548879623,-0.017570950090885162,0.040107905864715576,0.031777963042259216,-0.00048555489047430456,-0.050689540803432465,0.020816635340452194,-0.01566440798342228,0.027528882026672363,-0.008385398425161839,-0.002190171042457223,0.03998100385069847,-0.025183407589793205,-0.03730938956141472,0.004070905968546867,-0.0029806215316057205,0.02339213527739048,-0.017148971557617188,0.008391642943024635,-0.04790062829852104,-0.00019630497263278812,0.09948353469371796,0.04052325338125229,0.05808578059077263,0.012329385615885258,-0.008348699659109116,0.018951604142785072,-0.03448903560638428,0.004438756965100765,0.03218662366271019,0.06782691925764084,-0.07199827581644058,-0.006373962387442589,-0.019623633474111557,0.00792857725173235,0.0017569479532539845,0.02468576468527317,0.0392601303756237,-0.002133496105670929,0.0263303704559803,0.014418047852814198,-0.0214235857129097,-0.012887630611658096,-0.06171199679374695,-0.020165884867310524,0.01782321184873581,0.044421885162591934,-0.010666647925972939,-0.028331264853477478,0.027336901053786278,0.07468722760677338,-0.01905815675854683,0.008373207412660122,0.023682735860347748,-0.05940661206841469,-0.01786411739885807,-0.004868056159466505,-0.04469127953052521,-0.04951987415552139,-0.05410348251461983,0.03015388734638691,0.008395684882998466,-0.00723580177873373,0.007473048288375139,-0.034573350101709366,0.01153402030467987,0.004199163522571325,0.019102681428194046,0.0726172998547554,-0.020040836185216904,0.06267903745174408,-0.057604171335697174,0.01830138824880123,0.018127063289284706,0.0057892343029379845,-0.06116010993719101,-0.03495126962661743,-0.005643951240926981,0.018444744870066643,0.04630161076784134,-0.07744930684566498,-0.0038625025190413,0.016044197604060173,-0.0036606776993721724,0.04467475041747093,-0.011160863563418388,-0.02533803880214691,-0.012578796595335007,-0.0017449046717956662,0.048339951783418655,0.013016976416110992,-0.014976093545556068,-0.02849356085062027,0.017466405406594276,-0.058620162308216095,0.054735422134399414,0.019322814419865608,-0.0208206158131361,-0.012095496989786625,0.018341006711125374,-0.03733514994382858,0.01480203028768301,-0.014056081883609295,0.010423803701996803,-0.003816552460193634,0.042022980749607086,-0.0031127065885812044,-0.0037224157713353634,0.040882911533117294,-0.026708366349339485,0.07539767026901245,-0.024543950334191322,0.019993659108877182,-0.038070932030677795,0.005263384897261858,-0.07534461468458176,-0.007753992453217506,-0.0014843137469142675,0.07031296193599701,0.018592460080981255,0.043221645057201385,0.012219087220728397,0.021661097183823586,0.002116638235747814,0.013589262031018734,0.021852537989616394,0.06450468301773071,-0.0006619405467063189,0.031373605132102966,0.015535512939095497,-0.0011725375661626458,-0.01286314893513918,0.028523344546556473,-0.022888172417879105,0.022264663130044937,0.05330086499452591,-0.019870592281222343,-0.022313889116048813,0.03637028858065605,0.026026133447885513,-0.008163515478372574,-0.0940186008810997,0.03406043350696564,0.006990175694227219,-0.009222731925547123,-0.0031917684245854616,-0.04393818974494934,0.08344902843236923,-0.02483913116157055,-0.0162061657756567,0.01718617044389248,0.02200266718864441,-0.06862343102693558,-0.016327735036611557,-0.05323029309511185,-0.05227215960621834,0.06939218938350677,0.03405865654349327,0.019085854291915894,0.09097854048013687,-0.018938101828098297,-0.017431778833270073,-0.02448878437280655,0.01234212052077055,0.038614869117736816,-0.007360141724348068,-0.013043874874711037,0.005968986079096794,-0.0034943614155054092,-0.026864055544137955,0.039346903562545776,-0.02019565925002098,-0.0377451628446579,0.004152313806116581,0.014440069906413555,-0.01700535975396633,-0.027946071699261665,0.037537768483161926,0.03233093395829201,0.004721483681350946,0.014141657389700413,-0.004390531685203314,-0.02994745969772339,-0.050073277205228806,-0.009771048091351986,0.03582353517413139,0.0316932387650013,0.0028039307799190283,0.00040597395855002105,0.012895841151475906,0.043620843440294266,-0.00667373975738883,0.028838282451033592,0.047720979899168015,-0.06271534413099289,0.08514916151762009,0.005895694717764854,0.05296875163912773,-0.014227344654500484,-0.0182676799595356,0.0029885070398449898,-0.0554974302649498,-0.009542996995151043,0.004414436873048544,-0.010549614205956459,0.04043767601251602,-0.042551666498184204,-0.015413644723594189,-0.034095119684934616,-0.09074454009532928,0.03464772179722786,0.0029136091470718384,0.002315776189789176,-0.025859493762254715,0.07098191231489182,0.009436112828552723,-0.046303022652864456,-0.000826238130684942,0.047040462493896484,0.011865206994116306,0.009229283779859543,0.02535746991634369,-0.0542241595685482,-0.0358915776014328,0.021730918437242508,-0.03486340492963791,-0.032508838921785355,0.019561363384127617,-0.022845644503831863,-0.0228018406778574,-0.010621386580169201,0.018107112497091293,0.04308105260133743,0.019731510430574417,-0.03276688605546951,0.011156728491187096,-0.015666872262954712,0.018934475257992744,-0.023103855550289154,-0.036810413002967834,0.015647271648049355,-0.013535642996430397,0.04289117455482483,-0.022629475221037865,0.001630090526305139,-0.012127448804676533,0.025177843868732452,-0.026536691933870316,0.028299588710069656,-0.00019119051285088062,-0.01607164740562439,0.06464596092700958,-0.0005498385871760547,-0.02466830611228943,0.014020231552422047,0.054610475897789,0.04681200161576271,-0.0370161198079586,-0.06902866065502167,-0.010431802831590176,0.0208984836935997,-0.04246573895215988,0.0047867451794445515,0.009754807688295841,-0.02931280806660652,-0.03914118930697441,0.031151622533798218,0.00467255711555481,-0.045222338289022446,-0.03860440477728844,0.01620945706963539,-0.06390158832073212,0.019471919164061546,-0.010656539350748062,0.019779641181230545,-0.046198248863220215,0.04318739101290703,-0.023825690150260925,-0.019467363134026527,0.0223673265427351,-0.023983919993042946,0.013277741149067879,-0.06367763876914978,0.018597135320305824,-0.015396305359899998,-0.006814117543399334,-0.0021683149971067905,0.058542996644973755,0.01478589978069067,-0.00610467791557312,-0.015528611838817596,-0.058385927230119705,-0.010652129538357258,0.02633044309914112,-0.04037328064441681,-0.003360023023560643,-0.09071280062198639,-0.0010667472379282117,0.04566694051027298,-0.019412092864513397,0.005154870916157961,-0.005988537799566984,0.021450625732541084,-0.04125261306762695,0.009043166413903236,-0.012754040770232677,0.1231052577495575,0.009516497142612934,0.03323022648692131,-0.004766105208545923,-0.005179771222174168,-0.050937630236148834,-0.12989336252212524,-0.011247090995311737,0.0009877021657302976,0.004570890683680773,0.025036567822098732,0.027176953852176666,0.008113553747534752,0.004184321500360966,0.03200594335794449,0.040910061448812485,0.00672379182651639,-0.013305261731147766,-0.03866615518927574,0.02530178613960743,0.023765642195940018,-0.027050016447901726,0.07416967302560806,-0.02915133908390999,0.053939130157232285,-0.00033961443114094436,-0.040173958986997604,0.006996572483330965,0.012344665825366974,-0.030838916078209877,-0.014938699081540108,0.03189069777727127,0.013933198526501656,0.023882249370217323,0.0013987539568915963,-0.003768108319491148,0.036212652921676636,0.043733302503824234,-0.011570720002055168,-0.036119189113378525,0.06073794513940811,-0.030291877686977386,0.022308355197310448,0.052707307040691376,0.0007522488012909889,-0.011738519184291363,0.01951815001666546,-0.0554310642182827,0.017396537587046623,-0.013301062397658825,-0.006224337033927441,-0.04726430028676987,-0.02489534206688404,0.01555055845528841,-0.03334110975265503,0.03570692986249924,0.04202306270599365,0.036411385983228683,-0.042712870985269547,-0.031854044646024704,-0.03810020163655281,0.007847669534385204,-6.63873218127952e-33,-0.034736283123493195,-0.04189297929406166,-0.03963986411690712,0.024390842765569687,0.024823317304253578,-0.05630975589156151,0.036411069333553314,0.030317237600684166,-0.03176281973719597,0.020914794877171516,0.00039467582246288657,-0.0002720798074733466,0.010187100619077682,-0.005231281276792288,-0.04418891668319702,0.05823986977338791,0.022931212559342384,-0.05941297858953476,-0.036919739097356796,-0.004963813349604607,-0.012839682400226593,0.037234026938676834,-0.04648982733488083,-0.05131487175822258,-0.019868526607751846,-0.01851269230246544,0.0191094558686018,0.012692301534116268,-0.06072324886918068,-0.0060032024048268795,0.0026079134549945593,-0.05084412917494774,-0.00897092092782259,-0.037450458854436874,0.005292899440973997,-0.02013470232486725,-0.09401150047779083,0.0019519688794389367,-0.014153686352074146,0.0008771994616836309,0.06841780990362167,-0.025748590007424355,0.010603168979287148,-0.008910894393920898,-0.02077839896082878,0.025304336100816727,0.011627615429461002,0.03540745750069618,-0.004867612849920988,-0.08581334352493286,-0.0037362079601734877,0.0010035743471235037,0.005338944029062986,0.027223413810133934,0.017307428643107414,-0.00763980858027935,0.04552458971738815,0.025878295302391052,-0.061834294348955154,-0.011291420087218285,0.05500621721148491,-0.04790900647640228,0.008877398446202278,0.007378317881375551,0.03965066000819206,0.004379875957965851,-0.011793811805546284,0.03226619213819504,-0.12160708010196686,-0.02480914816260338,0.04643697664141655,-0.02377215027809143,-0.03786570206284523,-0.042511023581027985,0.04794800281524658,0.02944168820977211,-0.014180486090481281,0.028345564380288124,-0.0906589925289154,0.016943911090493202,0.008111773058772087,-0.007556259166449308,-0.018685249611735344,0.02262706682085991,0.030949007719755173,-0.016769608482718468,-0.019656023010611534,-0.006136002019047737,0.0301510076969862,0.001522497390396893,-0.06792327761650085,-0.02245314046740532,-0.024730507284402847,-0.023435650393366814,-0.10671576857566833,0.05412176996469498,0.056337375193834305,-0.03287271782755852,0.01600171998143196,0.009638071991503239,-0.018641481176018715,0.02510928548872471,0.029480231925845146,0.03805585578083992,-0.005485388450324535,0.007615073584020138,0.04859726130962372,-0.01145845651626587,-0.08370767533779144,0.034945983439683914,0.02706555463373661,-0.00328227411955595,0.039676979184150696,0.03326607495546341,0.012988030910491943,-0.013655298389494419,0.0264381542801857,-0.03680809587240219,0.004933889489620924,-0.02782972902059555,0.034862834960222244,0.014990565367043018,-0.006215731613337994,-0.0006255168118514121,0.05969711020588875,0.003981513436883688,-0.012826225720345974,-0.02897460386157036,0.040393948554992676,0.0045607974752783775,-0.025865398347377777,0.0226579699665308,2.776799590265e-7,0.01874503307044506,0.01871471479535103,0.010436641983687878,0.04658662900328636,0.026627346873283386,-0.049757976084947586,-0.024000294506549835,-0.03265007585287094,-0.00933213159441948,-0.059816617518663406,0.01484256237745285,-0.02003854140639305,0.03874869644641876,0.006404575891792774,-0.06356856971979141,-0.05338922515511513,0.05356129631400108,0.013461630791425705,-0.03385503962635994,-0.01603609323501587,0.07647110521793365,0.02005976252257824,-0.03775644674897194,0.012624654918909073,0.02180655114352703,0.04593895375728607,0.014610524289309978,0.01739562302827835,0.12252892553806305,0.00007531754818046466,0.031899139285087585,-0.022861067205667496,-0.01622323878109455,0.05042648687958717,-0.018108144402503967,0.0403476320207119,-0.01624849997460842,0.029248693957924843,-0.003360004862770438,-0.002313439967110753,0.06736312061548233,-0.07223845273256302,-0.01821635104715824,-0.0170908160507679,0.016719240695238113,-0.10278328508138657,-0.004405467305332422,0.11904694139957428,-0.04215729981660843,-0.00444900942966342,0.0058401781134307384,-0.011814530938863754,0.016460373997688293,-0.03222287818789482,-0.001164536806754768,-0.05137796700000763,0.015194356441497803,0.009780130349099636,0.010478935204446316,0.007094961125403643,-0.018404418602585793,0.01861976832151413,0.0014537932584062219,0.005441473331302404,0.04545782878994942,0.009181820787489414,-0.035555899143218994,3.433686497841578e-34,0.004200926516205072,-0.027353784069418907,0.059806618839502335,0.03314846381545067,-0.012080068700015545,-0.020905375480651855,0.03355719521641731,-0.030751334503293037,0.014320995658636093,-0.06814799457788467,-0.01567184180021286]'
SET
  @TechnicalDesignVector_baa20b6c = N'[-0.03467097133398056,0.08004175871610641,0.008510897867381573,-0.03226697817444801,0.014229799620807171,-0.007854778319597244,0.05469090864062309,0.03254701942205429,0.041420698165893555,0.0034654357004910707,0.01924569346010685,-0.005782472435384989,0.05154118686914444,0.0455939881503582,0.030711792409420013,-0.052151158452034,0.001582876080647111,0.06099177151918411,-0.041529301553964615,-0.01001745741814375,0.036838285624980927,-0.06130082160234451,-0.008727640844881535,-0.008388863876461983,-0.025526808574795723,-0.0035795464646071196,-0.054032642394304276,-0.0019965320825576782,0.03450368344783783,-0.08489477634429932,0.015425393357872963,0.01251410972326994,-0.014884295873343945,0.016883404925465584,0.00000171005387983314,-0.01123194769024849,0.00020261594909243286,0.008770094253122807,-0.027788197621703148,0.05308312922716141,0.026463959366083145,-0.0027554098051041365,0.007889017462730408,-0.014946567825973034,0.01672150194644928,-0.09382898360490799,0.012847757898271084,0.054331712424755096,0.0646178126335144,-0.033680107444524765,0.012422382831573486,0.022075379267334938,0.004135702736675739,-0.002877860562875867,0.03417861834168434,0.06273159384727478,0.005313860718160868,0.00894288532435894,0.02543836086988449,-0.04756823554635048,-0.01334813516587019,-0.029608016833662987,-0.03930734470486641,0.0014055684441700578,-0.010423554107546806,0.026040537282824516,0.017549749463796616,0.003312663407996297,0.021541601046919823,0.009956050664186478,0.1335417926311493,-0.03612612932920456,0.008228989318013191,-0.00926706288009882,-0.0030578107107430696,0.005790946539491415,0.00339909503236413,-0.04806491360068321,-0.025097709149122238,0.02690226398408413,-0.023261811584234238,-0.0016245131846517324,-0.000024894732632674277,-0.03708039969205856,-0.04639482870697975,0.03587393835186958,0.017613841220736504,-0.004768912214785814,-0.04989907145500183,-0.01141349133104086,0.10816791653633118,-0.019411969929933548,-0.05612969771027565,0.04007397219538689,-0.012979086488485336,-0.009214752353727818,-0.007696900516748428,-0.09088839590549469,0.0520298145711422,0.009092585183680058,0.039771515876054764,0.03037630207836628,0.07663401961326599,-0.009630830958485603,0.034476909786462784,0.0245367418974638,-0.03586871549487114,-0.06440502405166626,0.0180641021579504,-0.03253939747810364,0.04001842811703682,0.002836158499121666,-0.05000949651002884,0.07382765412330627,-0.06621167808771133,0.004682754632085562,-0.019441353157162666,-0.007652681320905685,-0.0115966796875,-0.03224985674023628,0.027322843670845032,0.00432229321449995,0.006801729556173086,0.005292726214975119,0.01547843124717474,0.020202267915010452,-0.025958886370062828,-0.09426160156726837,0.007188036572188139,-0.019616156816482544,-0.03695027157664299,-0.026586825028061867,0.01960580423474312,-0.00020209819194860756,-0.024193035438656807,0.038080450147390366,0.010599006898701191,0.012493821792304516,-0.10167143493890762,0.025638660416007042,-0.006245615892112255,0.02860320173203945,-0.01576959900557995,0.020550711080431938,0.004048923030495644,-0.02368423528969288,0.01991748996078968,-0.03916426748037338,0.02670145593583584,0.0275400560349226,0.011929230764508247,-0.004002283327281475,-0.025218289345502853,0.002904311055317521,-0.06502356380224228,0.00033179522142745554,0.058248892426490784,-0.029748426750302315,-0.006837879307568073,-0.03310278430581093,0.013458331115543842,0.025644440203905106,0.07654304802417755,0.03611700236797333,0.01884056068956852,0.0423305481672287,-0.05678864195942879,0.01759873330593109,-0.007994362153112888,-0.05091068893671036,-0.008171124383807182,-0.059213101863861084,-0.02345030941069126,0.07267788052558899,0.021605946123600006,-0.04769928753376007,0.02371249534189701,-0.006079320330172777,-0.09040989726781845,0.026237858459353447,0.021403152495622635,-0.05986645445227623,-0.00161745713558048,0.020185701549053192,0.09070709347724915,-0.0540485642850399,-0.009991878643631935,0.06207066774368286,-0.01138482429087162,0.02392362616956234,0.02436334267258644,-0.01636112667620182,0.00293322978541255,0.02265256457030773,-0.003875948255881667,0.021444249898195267,0.023738406598567963,0.02586473524570465,0.06207086518406868,-0.01749255135655403,-0.04327200725674629,0.012913618236780167,-0.03644777834415436,0.025869976729154587,-0.02262909896671772,-0.013572296127676964,-0.0627865344285965,0.018371691927313805,0.07839252799749374,0.030965296551585197,0.0308326818048954,-0.02369661070406437,-0.015043956227600574,0.005261980462819338,-0.0056730881333351135,-0.004389062523841858,0.047130752354860306,0.06833991408348083,-0.040826186537742615,-0.029694389551877975,-0.06496001780033112,0.028714166954159737,0.033176470547914505,0.04303736612200737,0.08121667057275772,-0.017462899908423424,0.061101414263248444,-0.026392074301838875,-0.025937188416719437,-0.03359699249267578,-0.04499643296003342,-0.04667997360229492,-0.006933059077709913,0.05189744383096695,0.016301210969686508,-0.028678052127361298,-0.018921609967947006,-0.006034018471837044,-0.010499000549316406,0.03780734911561012,0.04186435788869858,-0.03067438118159771,-0.008694189600646496,-0.005156485363841057,-0.05745464190840721,-0.04423562437295914,-0.057194311171770096,0.02709847502410412,-0.006617996841669083,-0.006965229287743568,0.035381123423576355,-0.03167054429650307,0.009253044612705708,0.006887678522616625,-0.0038547259755432606,0.06640319526195526,0.058818794786930084,0.057619594037532806,-0.01480445172637701,-0.005357752088457346,0.012574362568557262,-0.029552755877375603,0.004978523124009371,-0.021975034847855568,-0.013092043809592724,0.04725182428956032,0.0437755212187767,0.02538357302546501,0.035669956356287,0.028676491230726242,0.000923254294320941,0.0217157993465662,0.016455208882689476,-0.01744704134762287,0.009219856932759285,0.006533248815685511,0.0066108061000704765,0.030627479776740074,-0.046796031296253204,-0.011647799983620644,0.004285609815269709,-0.004738449584692717,0.038425520062446594,0.03950819745659828,-0.009866449050605297,-0.0067362249828875065,0.012952291406691074,-0.02039644494652748,0.028729578480124474,-0.07855827361345291,-0.004987118300050497,0.009146003052592278,0.016123536974191666,-0.03549320995807648,-0.006575480569154024,0.01681850105524063,-0.049226731061935425,0.08036137372255325,-0.05104663968086243,-0.01502785924822092,-0.0019651155453175306,-0.030723225325345993,-0.032886624336242676,0.01576034538447857,-0.018954366445541382,0.07635468989610672,-0.026835201308131218,0.04759784787893295,0.018367839977145195,0.03459867089986801,-0.0007539776270277798,0.021474052220582962,0.02353660948574543,0.0252278670668602,0.030908523127436638,0.03087584860622883,0.058211687952280045,-0.0007362539181485772,-0.06729122251272202,0.023378781974315643,-0.021034566685557365,-0.03868328034877777,0.028890738263726234,-0.02117447927594185,-0.03444865345954895,0.04115845635533333,-0.03170923516154289,-0.00593397906050086,-0.041195936501026154,0.009141010232269764,-0.01480814628303051,-0.037849608808755875,-0.00829400960355997,0.006550537887960672,0.09163849800825119,-0.03836982697248459,-0.04233592376112938,-0.0022458357270807028,0.002212672494351864,-0.04692696034908295,-0.01480875350534916,-0.03592335060238838,-0.03628493472933769,0.09755866229534149,0.02926788106560707,-0.03820130228996277,0.028487766161561012,-0.041308190673589706,-0.037025321274995804,-0.018201950937509537,0.010805235244333744,0.05447429046034813,-0.025333330035209656,-0.011230597272515297,0.009369098581373692,0.037509605288505554,-0.03029494173824787,-0.031040482223033905,-0.012781836092472076,0.029984716325998306,0.042804740369319916,0.03575998917222023,-0.005962565075606108,-0.03932368382811546,-0.0014498913660645485,0.008790613152086735,0.021454373374581337,0.02666112594306469,0.016385067254304886,-0.03916128724813461,0.021324118599295616,0.008755681104958057,0.00045321363722905517,0.01986992359161377,-0.030013076961040497,-0.0033292921725660563,-0.0041722496971488,0.010445808991789818,0.05457383021712303,0.032972101122140884,0.03774438053369522,-0.02009868621826172,0.05779881030321121,0.006091604474931955,0.0947493389248848,-0.006607120856642723,-0.032727792859077454,0.014333941973745823,-0.027509238570928574,-0.01640167646110058,-0.005859346594661474,0.023333322256803513,0.03302328661084175,-0.04971838742494583,-0.014991040341556072,0.02998710796236992,-0.03948711231350899,0.007350047584623098,0.006335082463920116,0.01663266494870186,-0.027083544060587883,0.008552313782274723,0.03104528971016407,-0.023617736995220184,0.026542363688349724,0.014719381928443909,-0.009670832194387913,0.010161716490983963,0.03162268176674843,0.06892336159944534,-0.012379973195493221,-0.06527607887983322,-0.04954775795340538,-0.05266474559903145,0.01033117063343525,-0.009569333866238594,-0.0004364571941550821,-0.04939950257539749,0.0021722649689763784,0.02073538675904274,0.011067896150052547,-0.0030171943362802267,0.06996386498212814,-0.04720645025372505,0.01845548301935196,-0.033789459615945816,-0.08052773773670197,-0.00875216256827116,-0.010136796161532402,0.00027632713317871094,-0.00012101225729566067,-0.0019650880713015795,0.017543718218803406,-0.017504269257187843,0.032401081174612045,-0.021420983597636223,0.026581574231386185,-0.02650267258286476,0.03572807461023331,0.00854611024260521,-0.006515004672110081,0.01782817393541336,0.0657738596200943,0.05871998891234398,-0.011969845741987228,-0.10969188809394836,-0.016090238466858864,0.024810366332530975,-0.01393023133277893,-0.0005510784103535116,-0.03881542384624481,0.004543093964457512,-0.03481888025999069,0.0575711652636528,0.004439658485352993,-0.04011494293808937,-0.0033366938587278128,0.0724005252122879,-0.06953542679548264,0.017967266961932182,-0.0012839147821068764,0.027286816388368607,-0.008607185445725918,0.042288754135370255,0.00039514631498605013,-0.049172867089509964,0.08108064532279968,-0.0210234634578228,-0.0006411688518710434,-0.05651279538869858,0.006104588974267244,-0.01085465494543314,-0.03639047592878342,-0.03496434912085533,0.053168945014476776,0.018422577530145645,0.016172928735613823,0.00812830775976181,-0.02542506530880928,0.03462246060371399,0.039026111364364624,0.005223494488745928,-0.01663513109087944,-0.03055620938539505,0.015592589043080807,0.017619580030441284,0.006156302057206631,-0.0025654369965195656,-0.03034060262143612,0.009198153391480446,-0.03588808327913284,0.010393334552645683,-0.0061887213960289955,0.11379872262477875,0.04265907406806946,0.04453858360648155,-0.044810712337493896,-0.0189343448728323,-0.05356724560260773,-0.05798213556408882,-0.04851832985877991,0.0058843824081122875,0.03349154070019722,-0.006125106941908598,0.036774445325136185,-0.00859186053276062,-0.0102847246453166,0.019699780270457268,0.026635564863681793,-0.0009722198592498899,0.011566038243472576,-0.07757055759429932,-0.022746585309505463,0.04971162602305412,-0.016450069844722748,0.06840867549180984,-0.0730680599808693,0.07221316546201706,0.005092167295515537,-0.02508603408932686,0.009069430641829967,0.01860920526087284,-0.022712597623467445,-0.018630918115377426,0.044632650911808014,0.02244352176785469,0.0036710137501358986,0.015360037796199322,-0.0029595806263387203,0.003183926921337843,0.02157982438802719,0.015971047803759575,-0.013757368549704552,0.02045651711523533,-0.001946294796653092,0.023756034672260284,0.054578281939029694,-0.011764409020543098,-0.0007663220167160034,-0.05265098065137863,-0.038737762719392776,0.034057244658470154,-0.015325295738875866,-0.023259010165929794,-0.01438781339675188,-0.08314383774995804,0.0030863007996231318,-0.07096286863088608,0.024407245218753815,0.025692107155919075,0.05880410969257355,-0.031169651076197624,-0.03149241581559181,0.013623980805277824,-0.010821838863193989,-6.045572221724825e-33,-0.032921966165304184,-0.010302234441041946,-0.017672527581453323,0.008660097606480122,-0.010885117575526237,-0.04837846755981445,0.0056365919299423695,0.0028710325714200735,-0.01919705979526043,0.0234993863850832,0.011760381981730461,-0.023408429697155952,0.0019226070726290345,0.012743777595460415,-0.026355061680078506,0.02634490467607975,0.040056291967630386,-0.03343748301267624,-0.018847404047846794,0.026935528963804245,-0.0457022562623024,0.017682725563645363,-0.0786142498254776,-0.06403709948062897,-0.037697259336709976,-0.062844417989254,0.0528118796646595,0.04595465585589409,-0.014959506690502167,0.00313974404707551,-0.002883968409150839,-0.0196288600564003,-0.004332101438194513,0.05270617827773094,0.004153443966060877,0.03687971830368042,-0.13020022213459015,-0.0021935116965323687,-0.015000821091234684,0.008077883161604404,0.0966673418879509,-0.03722603619098663,0.015345710329711437,0.005391790997236967,-0.02324385568499565,0.008965822868049145,0.010763518512248993,0.00906403362751007,-0.01073720958083868,-0.11255931109189987,0.008363953791558743,0.011288674548268318,-0.0002971607318613678,0.025464126840233803,0.014104805886745453,-0.0004114542971365154,0.04676437005400658,0.05689774081110954,-0.010673582553863525,-0.037726372480392456,0.0354611873626709,-0.025571485981345177,-0.0002299889165442437,0.04260997101664543,0.04436768591403961,0.018365776166319847,0.02481883205473423,-0.006677480414509773,-0.11346544325351715,-0.025322657078504562,0.014284374192357063,-0.02729855291545391,0.017932577058672905,-0.04489896446466446,0.028622280806303024,-0.005620240233838558,0.00337032787501812,-0.01905146986246109,-0.03236766904592514,-0.04493236541748047,-0.0019128310959786177,-0.03231406584382057,0.028462668880820274,0.003866014536470175,0.0067847128957509995,-0.0243216585367918,0.02773173339664936,-0.039570022374391556,0.01915111392736435,0.0016988645074889064,-0.04326929524540901,-0.049006782472133636,-0.0449129156768322,-0.014774784445762634,-0.02648676000535488,-0.038516804575920105,0.0810052827000618,-0.011783313937485218,-0.01828809082508087,0.0069201928563416,0.013467619195580482,0.00234579318203032,-0.01605694741010666,0.019123200327157974,-0.0008220925810746849,-0.009319704957306385,0.01749102771282196,-0.008469979278743267,-0.07115142047405243,0.033455200493335724,0.004046548157930374,0.0013736740220338106,-0.004545924719423056,0.042108044028282166,-0.010052678175270557,0.005747910123318434,0.0328216589987278,-0.017742792144417763,0.023309634998440742,-0.03042600490152836,0.013050064444541931,0.03236062824726105,0.004121983889490366,-0.03471454605460167,0.045072294771671295,-0.0014529513427987695,-0.039359454065561295,0.009483574889600277,0.004818231798708439,-0.023755274713039398,-0.0011081009870395064,0.03498091921210289,2.5371505785187765e-7,-0.014490477740764618,-0.009716643951833248,-0.04000332951545715,0.04023844003677368,0.020293906331062317,-0.08973078429698944,-0.04155938699841499,-0.0537995770573616,-0.012149341404438019,-0.09926176816225052,-0.004281221888959408,-0.0339476503431797,0.03895590454339981,0.0164661668241024,-0.02642142027616501,-0.02872554026544094,0.043561119586229324,-0.037145573645830154,-0.010329145938158035,-0.022835256531834602,0.048732224851846695,0.003604867262765765,-0.007075476460158825,0.006573302671313286,0.01903928443789482,0.08719509094953537,0.020891254767775536,0.03845158591866493,0.11140189319849014,0.03338407352566719,0.0026554272044450045,0.009289758279919624,-0.02801055647432804,0.009024365805089474,0.005166106391698122,0.015189774334430695,-0.043838631361722946,0.010111071169376373,-0.023701151832938194,0.02293669618666172,0.07212495803833008,-0.057003770023584366,-0.032775722444057465,0.03771892935037613,0.01928083598613739,-0.062237393110990524,0.0064872270449995995,0.06603386998176575,-0.05895032361149788,0.007740071974694729,-0.037973131984472275,0.020755797624588013,0.07217241823673248,-0.046249181032180786,0.010066942311823368,-0.012514841742813587,0.005114446859806776,0.013288797810673714,-0.011584972031414509,-0.011546177789568901,0.011688386090099812,-0.019310833886265755,-0.004189193248748779,-0.007299395278096199,0.0282365083694458,-0.023572100326418877,-0.021532323211431503,3.2335370032724864e-34,0.015518194064497948,-0.06087658554315567,0.002803981536999345,0.05195537209510803,0.00561815220862627,-0.02533014677464962,0.10081639885902405,-0.017577044665813446,0.01649060845375061,-0.04129389673471451,-0.014538806863129139]'
SET
  @HasCustomProps_baa20b6c = 0
SET
  @HasCustomEvents_baa20b6c = 0
SET
  @RequiresData_baa20b6c = 0
SET
  @DependencyCount_baa20b6c = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_baa20b6c = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_baa20b6c = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_baa20b6c = 0
SET
  @ID_baa20b6c = '031F320D-52E4-43EF-941D-0C28A029C614'
EXEC [${flyway:defaultSchema}].spUpdateComponent @Namespace = @Namespace_baa20b6c,
  @Name = @Name_baa20b6c,
  @Version = @Version_baa20b6c,
  @VersionSequence = @VersionSequence_baa20b6c,
  @Title = @Title_baa20b6c,
  @Description = @Description_baa20b6c,
  @Type = @Type_baa20b6c,
  @Status = @Status_baa20b6c,
  @DeveloperName = @DeveloperName_baa20b6c,
  @DeveloperEmail = @DeveloperEmail_baa20b6c,
  @DeveloperOrganization = @DeveloperOrganization_baa20b6c,
  @SourceRegistryID = @SourceRegistryID_baa20b6c,
  @ReplicatedAt = @ReplicatedAt_baa20b6c,
  @LastSyncedAt = @LastSyncedAt_baa20b6c,
  @Specification = @Specification_baa20b6c,
  @FunctionalRequirements = @FunctionalRequirements_baa20b6c,
  @TechnicalDesign = @TechnicalDesign_baa20b6c,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_baa20b6c,
  @TechnicalDesignVector = @TechnicalDesignVector_baa20b6c,
  @HasCustomProps = @HasCustomProps_baa20b6c,
  @HasCustomEvents = @HasCustomEvents_baa20b6c,
  @RequiresData = @RequiresData_baa20b6c,
  @DependencyCount = @DependencyCount_baa20b6c,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_baa20b6c,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_baa20b6c,
  @HasRequiredCustomProps = @HasRequiredCustomProps_baa20b6c,
  @ID = @ID_baa20b6c;

-- Save MJ: Components (core SP call only)
DECLARE @ID_cf758e82 UNIQUEIDENTIFIER,
@Namespace_cf758e82 NVARCHAR(MAX),
@Name_cf758e82 NVARCHAR(500),
@Version_cf758e82 NVARCHAR(50),
@VersionSequence_cf758e82 INT,
@Title_cf758e82 NVARCHAR(1000),
@Description_cf758e82 NVARCHAR(MAX),
@Type_cf758e82 NVARCHAR(255),
@Status_cf758e82 NVARCHAR(50),
@DeveloperName_cf758e82 NVARCHAR(255),
@DeveloperEmail_cf758e82 NVARCHAR(255),
@DeveloperOrganization_cf758e82 NVARCHAR(255),
@SourceRegistryID_cf758e82 UNIQUEIDENTIFIER,
@ReplicatedAt_cf758e82 DATETIMEOFFSET,
@LastSyncedAt_cf758e82 DATETIMEOFFSET,
@Specification_cf758e82 NVARCHAR(MAX),
@FunctionalRequirements_cf758e82 NVARCHAR(MAX),
@TechnicalDesign_cf758e82 NVARCHAR(MAX),
@FunctionalRequirementsVector_cf758e82 NVARCHAR(MAX),
@TechnicalDesignVector_cf758e82 NVARCHAR(MAX),
@HasCustomProps_cf758e82 BIT,
@HasCustomEvents_cf758e82 BIT,
@RequiresData_cf758e82 BIT,
@DependencyCount_cf758e82 INT,
@TechnicalDesignVectorEmbeddingModelID_cf758e82 NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_cf758e82 NVARCHAR(MAX),
@HasRequiredCustomProps_cf758e82 BIT
SET
  @ID_cf758e82 = '21A95BC1-2CCD-4949-A90F-4262F1DBDB62'
SET
  @Namespace_cf758e82 = N'Generic/UI/Chart'
SET
  @Name_cf758e82 = N'SimpleChart'
SET
  @Version_cf758e82 = N'1.0.0'
SET
  @VersionSequence_cf758e82 = 1
SET
  @Title_cf758e82 = N'Simple Chart'
SET
  @Description_cf758e82 = N'A lightweight chart component that automatically creates common visualizations from entity data with minimal configuration'
SET
  @Type_cf758e82 = N'Chart'
SET
  @Status_cf758e82 = N'Published'
SET
  @Specification_cf758e82 = N'{"name":"SimpleChart","title":"Simple Chart","description":"A lightweight chart component that automatically creates common visualizations from entity data with minimal configuration","type":"chart","location":"embedded","functionalRequirements":"Lightweight charting from entity data. Groups records by field, aggregates values (count/sum/avg), renders as bar/line/pie/area chart. Auto-selects chart type based on data. Supports click events for drill-down, data export, top-N filtering. Common uses: category distributions, time series trends, metric comparisons.","technicalDesign":"Uses Chart.js (canvas-based) for rendering. Pipeline: group data by field → aggregate (count/sum/avg) → sort/limit → render. Auto-selects chart type: bar for categories, line for dates, pie for distributions. Memoized calculations for performance. Click events return data point details and source records for drill-down.","dataRequirements":{"mode":"props","description":"Component receives entity data through props and performs client-side aggregation"},"properties":[{"name":"entityName","type":"string","description":"Name of the entity being visualized","required":true},{"name":"data","type":"Array<object>","description":"Array of entity objects to visualize","required":true},{"name":"groupBy","type":"string","description":"Field name to group data by","required":true},{"name":"valueField","type":"string","description":"Field to aggregate for values. If not specified, counts records","required":false},{"name":"aggregateMethod","type":"''count'' | ''sum'' | ''average'' | ''min'' | ''max''","description":"How to aggregate values","required":false,"defaultValue":"count","possibleValues":["count","sum","average","min","max"]},{"name":"chartType","type":"''auto'' | ''bar'' | ''line'' | ''pie'' | ''doughnut'' | ''area'' | ''scatter''","description":"Chart type to render. ''auto'' selects based on data","required":false,"defaultValue":"auto","possibleValues":["auto","bar","line","pie","doughnut","area","scatter"]},{"name":"title","type":"string","description":"Chart title. If not provided, generates from entity and groupBy field","required":false},{"name":"height","type":"number","description":"Chart height in pixels","required":false,"defaultValue":400},{"name":"sortBy","type":"''label'' | ''value'' | ''none''","description":"How to sort the chart data","required":false,"defaultValue":"value","possibleValues":["label","value","none"]},{"name":"sortOrder","type":"''asc'' | ''desc''","description":"Sort direction","required":false,"defaultValue":"desc","possibleValues":["asc","desc"]},{"name":"limit","type":"number","description":"Limit number of data points shown (e.g., top 10)","required":false},{"name":"colors","type":"Array<string>","description":"Custom color palette for the chart","required":false},{"name":"showLegend","type":"boolean","description":"Whether to show the legend","required":false,"defaultValue":true},{"name":"showDataLabels","type":"boolean","description":"Whether to show data labels on chart","required":false,"defaultValue":false},{"name":"enableExport","type":"boolean","description":"Show export button to download chart as image","required":false,"defaultValue":true}],"events":[{"name":"dataPointClick","description":"Fired when user clicks on a data point","parameters":[{"name":"clickData","type":"{ seriesName: string; value: number; label: string; records: Array<object>; chartType: string; percentage?: number }","description":"Object containing series name, data value, label, original records, and chart type"}]},{"name":"chartRendered","description":"Fired when chart has finished rendering","parameters":[{"name":"chartInfo","type":"{ chartType: string; dataPointCount: number; aggregationMethod: string; isEmpty: boolean }","description":"Information about the rendered chart including type, data point count, and aggregation method"}]}],"libraries":[{"name":"chart.js","version":"4.4.1","globalVariable":"Chart"}],"dependencies":[],"code":"function SimpleChart({\n  entityName,\n  data,\n  groupBy,\n  valueField,\n  aggregateMethod = ''count'',\n  chartType = ''auto'',\n  title,\n  height = 400,\n  sortBy = ''value'',\n  sortOrder = ''desc'',\n  limit,\n  colors,\n  showLegend = true,\n  showDataLabels = false,\n  enableExport = true,\n  onDataPointClick,\n  onChartRendered,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  // Always use the MJ unwrapLibraryComponents function to get components from global libraries\n  // This ensures that various library build/package formats are handled correctly and transparently\n  // Chart.js is available as a global ''Chart'' based on the spec''s globalVariable setting\n  // Since Chart.js exports a single constructor function, unwrapLibraryComponents returns it for the requested name\n  const { Chart: ChartJS } = unwrapLibraryComponents(Chart, ''Chart'');\n  \n  const canvasRef = React.useRef(null);\n  const chartInstanceRef = React.useRef(null);\n  const [error, setError] = React.useState(null);\n  const [entityInfo, setEntityInfo] = React.useState(null);\n\n  // Default color palette - accessible and visually distinct\n  const defaultColors = [\n    ''#1890ff'', // Blue\n    ''#52c41a'', // Green\n    ''#fa8c16'', // Orange\n    ''#f5222d'', // Red\n    ''#722ed1'', // Purple\n    ''#13c2c2'', // Cyan\n    ''#fa541c'', // Red-orange\n    ''#2f54eb'', // Deep blue\n    ''#a0d911'', // Lime\n    ''#eb2f96''  // Magenta\n  ];\n\n  // Load entity metadata\n  React.useEffect(() => {\n    if (!entityName || !utilities?.md?.Entities) {\n      if (!entityName) console.error(''Entity name not provided'');\n      if (!utilities?.md?.Entities) console.error(''Entity metadata not loaded.'');\n      return;\n    }\n    \n    const entity = utilities.md.Entities.find(e => e.Name === entityName);\n    if (entity) {\n      setEntityInfo(entity);\n    }\n  }, [entityName, utilities]);\n\n  // Helper function to format values based on type\n  const formatValue = (value, isDate = false, isCurrency = false) => {\n    if (value == null) return ''N/A'';\n    \n    if (isDate) {\n      try {\n        const date = new Date(value);\n        if (isNaN(date.getTime())) return value;\n        return date.toLocaleDateString(''en-US'', { \n          month: ''short'', \n          day: ''numeric'',\n          year: ''numeric''\n        });\n      } catch {\n        return value;\n      }\n    }\n    \n    if (isCurrency || (typeof value === ''number'' && valueField && valueField.toLowerCase().includes(''amount''))) {\n      if (typeof value === ''number'') {\n        return new Intl.NumberFormat(''en-US'', {\n          style: ''currency'',\n          currency: ''USD'',\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        }).format(value);\n      }\n    }\n    \n    if (typeof value === ''number'') {\n      // Format large numbers with commas\n      return new Intl.NumberFormat(''en-US'').format(value);\n    }\n    \n    return value;\n  };\n\n  // Process and aggregate data\n  const processData = React.useMemo(() => {\n    if (!data || !Array.isArray(data) || data.length === 0) {\n      return { chartData: [], categories: [], values: [], isEmpty: true };\n    }\n\n    try {\n      // Validate that groupBy field exists\n      if (entityInfo && entityInfo.Fields) {\n        const fieldExists = entityInfo.Fields.some(f => f.Name === groupBy);\n        if (!fieldExists) {\n          const error = `Field \"$' + '{groupBy}\" does not exist in entity \"$' + '{entityName}\". Available fields: $' + '{entityInfo.Fields.map(f => f.Name).join('', '')}`;\n          console.error(error);\n          setError(error);\n          return { chartData: [], categories: [], values: [], isEmpty: true };\n        }\n        \n        // Also validate valueField if provided\n        if (valueField && !entityInfo.Fields.some(f => f.Name === valueField)) {\n          const error = `Value field \"$' + '{valueField}\" does not exist in entity \"$' + '{entityName}\". Available fields: $' + '{entityInfo.Fields.map(f => f.Name).join('', '')}`;\n          console.error(error);\n          setError(error);\n          return { chartData: [], categories: [], values: [], isEmpty: true };\n        }\n      } else if (data.length > 0) {\n        // If no metadata, at least check if fields exist in data\n        if (!(groupBy in data[0])) {\n          const error = `Field \"$' + '{groupBy}\" not found in data. Available fields: $' + '{Object.keys(data[0]).join('', '')}`;\n          console.error(error);\n          setError(error);\n          return { chartData: [], categories: [], values: [], isEmpty: true };\n        }\n        \n        if (valueField && !(valueField in data[0])) {\n          const error = `Value field \"$' + '{valueField}\" not found in data. Available fields: $' + '{Object.keys(data[0]).join('', '')}`;\n          console.error(error);\n          setError(error);\n          return { chartData: [], categories: [], values: [], isEmpty: true };\n        }\n      }\n      \n      // Group data by the specified field\n      const grouped = {};\n      \n      // Check if groupBy field is a date field using entity metadata\n      let isDateField = false;\n      if (entityInfo && entityInfo.Fields) {\n        const fieldInfo = entityInfo.Fields.find(f => f.Name === groupBy);\n        isDateField = fieldInfo && (fieldInfo.Type === ''datetime'' || fieldInfo.Type === ''date'');\n      }\n      \n      // Fallback to value-based detection if no metadata available\n      if (!isDateField && data.length > 0) {\n        const sampleValue = data[0][groupBy];\n        isDateField = sampleValue && (\n          sampleValue instanceof Date ||\n          (typeof sampleValue === ''string'' && !isNaN(Date.parse(sampleValue)))\n        );\n      }\n      \n      data.forEach(record => {\n        let key = record[groupBy] || ''Unknown'';\n        \n        // Format date values for display\n        if (isDateField && key !== ''Unknown'') {\n          const date = new Date(key);\n          if (!isNaN(date.getTime())) {\n            // Format as YYYY-MM-DD for grouping\n            key = date.toISOString().split(''T'')[0];\n          }\n        }\n        \n        if (!grouped[key]) {\n          grouped[key] = {\n            label: key,\n            records: [],\n            value: 0\n          };\n        }\n        grouped[key].records.push(record);\n      });\n\n      // Aggregate based on method\n      Object.keys(grouped).forEach(key => {\n        const group = grouped[key];\n        \n        if (aggregateMethod === ''count'') {\n          group.value = group.records.length;\n        } else if (valueField) {\n          const values = group.records\n            .map(r => parseFloat(r[valueField]))\n            .filter(v => !isNaN(v));\n          \n          if (values.length > 0) {\n            switch (aggregateMethod) {\n              case ''sum'':\n                group.value = values.reduce((a, b) => a + b, 0);\n                break;\n              case ''average'':\n                group.value = values.reduce((a, b) => a + b, 0) / values.length;\n                break;\n              case ''min'':\n                group.value = Math.min(...values);\n                break;\n              case ''max'':\n                group.value = Math.max(...values);\n                break;\n              default:\n                group.value = values.length;\n            }\n          }\n        }\n      });\n\n      // Convert to array and sort\n      let dataArray = Object.values(grouped);\n      \n      if (sortBy === ''label'') {\n        dataArray.sort((a, b) => {\n          const comparison = String(a.label).localeCompare(String(b.label));\n          return sortOrder === ''asc'' ? comparison : -comparison;\n        });\n      } else if (sortBy === ''value'') {\n        dataArray.sort((a, b) => {\n          const comparison = a.value - b.value;\n          return sortOrder === ''asc'' ? comparison : -comparison;\n        });\n      }\n      \n      // Apply limit if specified\n      if (limit && limit > 0) {\n        dataArray = dataArray.slice(0, limit);\n      }\n\n      const categories = dataArray.map(d => String(d.label));\n      const values = dataArray.map(d => d.value);\n\n      return {\n        chartData: dataArray,\n        categories,\n        values,\n        isEmpty: false\n      };\n    } catch (err) {\n      console.error(''Error processing chart data:'', err);\n      setError(err.message);\n      return { chartData: [], categories: [], values: [], isEmpty: true };\n    }\n  }, [data, groupBy, valueField, aggregateMethod, sortBy, sortOrder, limit, entityInfo]);\n\n  // Determine chart type automatically\n  const determineChartType = () => {\n    if (chartType !== ''auto'') {\n      // Map ''donut'' to Chart.js ''doughnut'' \n      if (chartType === ''donut'') return ''doughnut'';\n      // Map ''column'' to Chart.js ''bar''\n      if (chartType === ''column'') return ''bar'';\n      return chartType;\n    }\n    \n    // Check if groupBy field is a date field using entity metadata\n    let isDateField = false;\n    if (entityInfo && entityInfo.Fields) {\n      const fieldInfo = entityInfo.Fields.find(f => f.Name === groupBy);\n      isDateField = fieldInfo && (fieldInfo.Type === ''datetime'' || fieldInfo.Type === ''date'');\n    }\n    \n    // Fallback to value-based detection if no metadata available\n    if (!isDateField && data && data.length > 0) {\n      const sampleValue = data[0][groupBy];\n      isDateField = sampleValue && (\n        sampleValue instanceof Date ||\n        (typeof sampleValue === ''string'' && !isNaN(Date.parse(sampleValue)))\n      );\n    }\n    \n    if (isDateField) {\n      return ''line'';\n    }\n    \n    // Use pie/doughnut for small number of categories\n    if (processData.categories && processData.categories.length <= 5) {\n      return ''doughnut'';\n    }\n    \n    // Default to bar chart\n    return ''bar'';\n  };\n\n  const actualChartType = determineChartType();\n\n  // Generate chart configuration for Chart.js\n  const getChartConfig = () => {\n    const isPieOrDoughnut = actualChartType === ''pie'' || actualChartType === ''doughnut'';\n    const isLineOrArea = actualChartType === ''line'' || actualChartType === ''area'';\n    \n    const config = {\n      type: actualChartType === ''area'' ? ''line'' : actualChartType,\n      data: {\n        labels: processData.categories,\n        datasets: [{\n          label: valueField || ''Count'',\n          data: processData.values,\n          backgroundColor: isPieOrDoughnut \n            ? (colors || defaultColors).slice(0, processData.values.length)\n            : isLineOrArea \n              ? ''rgba(24, 144, 255, 0.2)''\n              : (colors || defaultColors)[0],\n          borderColor: isPieOrDoughnut\n            ? undefined\n            : isLineOrArea\n              ? (colors || defaultColors)[0]\n              : (colors || defaultColors)[0],\n          borderWidth: isLineOrArea ? 2 : 1,\n          fill: actualChartType === ''area'',\n          tension: isLineOrArea ? 0.1 : undefined\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        onClick: (_event, elements) => {\n          if (elements && elements.length > 0 && onDataPointClick) {\n            const index = elements[0].index;\n            const clickedData = processData.chartData[index];\n            onDataPointClick({\n              chartType: actualChartType,\n              series: valueField || ''Count'',\n              label: clickedData.label,\n              value: clickedData.value,\n              records: clickedData.records,\n              percentage: (clickedData.value / processData.values.reduce((a, b) => a + b, 0)) * 100\n            });\n          }\n        },\n        plugins: {\n          title: {\n            display: !!title,\n            text: title || `$' + '{entityName} by $' + '{groupBy}`,\n            font: {\n              size: 16,\n              weight: 600\n            },\n            padding: {\n              bottom: 10\n            }\n          },\n          legend: {\n            display: showLegend && (isPieOrDoughnut || processData.categories.length <= 10),\n            position: isPieOrDoughnut ? ''bottom'' : ''top''\n          },\n          datalabels: showDataLabels ? {\n            display: true,\n            formatter: (value) => formatValue(value),\n            color: isPieOrDoughnut ? ''#fff'' : ''#666''\n          } : undefined,\n          tooltip: {\n            callbacks: {\n              label: (context) => {\n                const label = context.dataset.label || '''';\n                const value = formatValue(context.parsed.y !== undefined ? context.parsed.y : context.parsed);\n                return `$' + '{label}: $' + '{value}`;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    // Add scales for non-pie/doughnut charts\n    if (!isPieOrDoughnut) {\n      config.options.scales = {\n        y: {\n          beginAtZero: true,\n          ticks: {\n            callback: (value) => formatValue(value)\n          }\n        },\n        x: {\n          ticks: {\n            autoSkip: true,\n            maxRotation: 45,\n            minRotation: 0\n          }\n        }\n      };\n    }\n\n    // Add export functionality if enabled\n    if (enableExport && config.options.plugins) {\n      config.options.plugins.title = {\n        ...config.options.plugins.title,\n        display: true // Always show title when export is enabled\n      };\n    }\n\n    return config;\n  };\n\n  // Render chart\n  React.useEffect(() => {\n    if (processData.isEmpty || !canvasRef.current) {\n      return;\n    }\n\n    if (!ChartJS) {\n      console.error(''[SimpleChart] Chart.js library not loaded'');\n      setError(''Chart.js library not loaded. Please ensure it is included in the component libraries.'');\n      return;\n    }\n\n    try {\n      setError(null);\n\n      // Destroy existing chart\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n        chartInstanceRef.current = null;\n      }\n\n      const config = getChartConfig();\n      \n      // Create new chart instance\n      const ctx = canvasRef.current.getContext(''2d'');\n      chartInstanceRef.current = new ChartJS(ctx, config);\n\n      // Fire rendered event\n      if (onChartRendered) {\n        onChartRendered({\n          chartType: actualChartType,\n          dataPointCount: processData.chartData.length,\n          aggregateMethod: aggregateMethod,\n          totalValue: processData.values.reduce((a, b) => a + b, 0)\n        });\n      }\n\n    } catch (err) {\n      console.error(''[SimpleChart] Error rendering chart:'', err);\n      setError(`Failed to render chart: $' + '{err.message}`);\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n        chartInstanceRef.current = null;\n      }\n    };\n  }, [processData, actualChartType, title, height, colors, showLegend, showDataLabels, enableExport, ChartJS]);\n\n  // Download chart as image\n  React.useEffect(() => {\n    if (enableExport && chartInstanceRef.current && canvasRef.current) {\n      // Add a simple export button overlay\n      const exportHandler = () => {\n        const url = canvasRef.current.toDataURL(''image/png'');\n        const link = document.createElement(''a'');\n        link.download = `$' + '{title || ''chart''}.png`;\n        link.href = url;\n        link.click();\n      };\n      \n      // Store handler for cleanup\n      window.SimpleChartExport = exportHandler;\n    }\n    \n    return () => {\n      delete window.SimpleChartExport;\n    };\n  }, [enableExport, title]);\n\n  // Error state\n  if (error) {\n    return (\n      <div style={{ \n        display: ''flex'', \n        flexDirection: ''column'',\n        justifyContent: ''center'', \n        alignItems: ''center'', \n        height: height,\n        color: ''#ff4d4f'',\n        padding: ''20px''\n      }}>\n        <div>Error rendering chart</div>\n        <div style={{ fontSize: ''12px'', marginTop: ''8px'', color: ''#999'' }}>{error}</div>\n      </div>\n    );\n  }\n\n  // Empty state\n  if (!data || data.length === 0 || processData.isEmpty) {\n    return (\n      <div style={{ \n        display: ''flex'', \n        justifyContent: ''center'', \n        alignItems: ''center'', \n        height: height,\n        color: ''#999'',\n        backgroundColor: ''#f5f5f5'',\n        borderRadius: ''4px''\n      }}>\n        No data available to display\n      </div>\n    );\n  }\n\n  // Render chart container with canvas\n  return (\n    <div style={{ width: ''100%'', position: ''relative'' }}>\n      {enableExport && (\n        <button\n          onClick={() => window.SimpleChartExport && window.SimpleChartExport()}\n          style={{\n            position: ''absolute'',\n            top: 10,\n            right: 10,\n            padding: ''4px 8px'',\n            fontSize: ''12px'',\n            backgroundColor: ''#fff'',\n            border: ''1px solid #d9d9d9'',\n            borderRadius: ''4px'',\n            cursor: ''pointer'',\n            zIndex: 10,\n            display: ''flex'',\n            alignItems: ''center'',\n            gap: ''4px''\n          }}\n          title=\"Download as PNG\"\n        >\n          📥 Export\n        </button>\n      )}\n      <div style={{ width: ''100%'', height: `$' + '{height}px` }}>\n        <canvas ref={canvasRef} />\n      </div>\n    </div>\n  );\n}","exampleUsage":"<SimpleChart\n  entityName=\"Invoice Line Items\"\n  data={invoiceItems}\n  groupBy=\"ProductCategory\"\n  valueField=\"TotalAmount\"\n  aggregateMethod=\"sum\"\n  chartType=\"bar\"\n  title=\"Revenue by Product Category\"\n  limit={10}\n  onDataPointClick={handleDrillDown}\n/>"}'
SET
  @FunctionalRequirements_cf758e82 = N'Zero-configuration charting automatically creates appropriate charts from entity data; Common chart types including bar line pie donut area charts with smart defaults; Group-by aggregation automatically aggregates data by specified field; Interactive exploration with click events enabling drill-down workflows; Responsive design adapts to container size automatically; Automatic data aggregation by any field with count sum or average; Smart chart type selection based on data characteristics; Built-in color schemes optimized for accessibility; Click events on data points for drill-down scenarios; Automatic formatting of values dates and currencies; Loading states and empty data handling; Export chart as image functionality; Configurable but works with minimal props; Quick dashboard widgets showing entity counts by category; Revenue charts grouped by time period or product; Status distribution pie charts; Trend lines over time; Top N items by any metric; Comparison charts between categories'
SET
  @TechnicalDesign_cf758e82 = N'Convention over configuration with smart defaults for everything; Single-purpose component focused solely on charting; Data-agnostic works with any entity data structure; Event-driven integrates with parent components via events; Uses Chart.js for rendering canvas-based and lightweight; Automatic data aggregation using JavaScript reduce and group operations; Smart type detection for appropriate formatting; Memoized calculations prevent unnecessary re-renders; Dynamic color palette based on data point count; Data processing pipeline receives raw entity data groups by field aggregates using specified method sorts and applies limits formats for chart library and renders; Chart type selection with bar as default for categorical data line for date time fields pie doughnut for distribution percentages area for cumulative time series; Event system includes chart type series name data point value and label original records percentage of total enabling drill-down to detailed views'
SET
  @FunctionalRequirementsVector_cf758e82 = N'[-0.08659332990646362,0.023071492090821266,-0.04644135758280754,-0.058883942663669586,0.0038956892676651478,-0.012597905471920967,0.019722647964954376,0.022754337638616562,-0.02129647508263588,0.020324014127254486,0.0006014143000356853,0.028852669522166252,0.04765009135007858,0.15790913999080658,0.015748025849461555,-0.058792538940906525,-0.042822182178497314,0.07126680016517639,0.01936570182442665,0.04160558432340622,0.028089016675949097,-0.004987628664821386,-0.02134871855378151,-0.007729643024504185,-0.027848759666085243,-0.003286890219897032,-0.06570342183113098,0.018778527155518532,-0.0023439323995262384,-0.11778443306684494,0.04197702556848526,0.0444166474044323,-0.025219887495040894,0.013982890173792839,0.0000025797107809921727,-0.029987188056111336,-0.05698593333363533,-0.026912067085504532,-0.008299574255943298,0.03149990737438202,-0.016614289954304695,-0.0772361233830452,0.011589757166802883,-0.01639055274426937,0.04417266324162483,-0.06243868172168732,0.0010739217977970839,0.04317699745297432,0.007906951941549778,-0.06128520518541336,-0.010755207389593124,-0.012474060989916325,-0.06733258813619614,-0.0174811203032732,-0.004579599946737289,-0.01082882285118103,-0.010773452930152416,0.012829157523810863,0.06967385113239288,-0.02661024034023285,-0.02411321923136711,-0.004055257420986891,-0.0002798826899379492,0.007791068404912949,0.01072009652853012,0.06836975365877151,0.06812771409749985,-0.07218284159898758,-0.0012471684021875262,0.04555821418762207,0.06620948016643524,-0.029961545020341873,0.02609500288963318,-0.04156035557389259,0.0007255439995788038,-0.019625283777713776,-0.040880147367715836,-0.020193370059132576,0.013874420896172523,-0.002663895022124052,-0.048137862235307693,0.0064249178394675255,-0.02663564495742321,-0.011323385871946812,0.0009643582161515951,-0.064365454018116,-0.006451391614973545,-0.011134391650557518,-0.02049434557557106,-0.011204817332327366,-0.00037569343112409115,-0.026699144393205643,-0.05211789906024933,0.005719475913792849,-0.0034353516530245543,-0.029958801344037056,0.020513372495770454,-0.008085161447525024,0.056612223386764526,-0.029980622231960297,0.025139544159173965,0.03011992760002613,-0.005578086711466312,0.05110689625144005,0.07515382021665573,-0.00868887547403574,-0.009756868705153465,-0.05802900716662407,0.032885998487472534,0.005331626161932945,0.002317367820069194,-0.008859745226800442,-0.0068241204135119915,-0.017286119982600212,-0.0014219979057088494,-0.0044394442811608315,0.004473960492759943,-0.015660690143704414,-0.032047469168901443,0.024667559191584587,0.06896363198757172,0.034201331436634064,0.0004980217199772596,0.01515014935284853,0.006218088790774345,0.0482148602604866,-0.05546307936310768,0.029268234968185425,-0.008059823885560036,-0.027781246230006218,-0.01583033613860607,-0.018351664766669273,0.06270314007997513,0.009327725507318974,0.0010131355375051498,0.015429956838488579,0.03583327308297157,0.030753733590245247,-0.0949137732386589,-0.013157899491488934,0.004898576065897942,0.01800639182329178,-0.04780757799744606,0.020414868369698524,0.030007993802428246,-0.02809775061905384,-0.008712763898074627,0.043003521859645844,0.006069609895348549,0.014776987954974174,-0.02401887997984886,-0.01948358491063118,-0.04442398250102997,0.006613818928599358,-0.02333713136613369,-0.03676934167742729,0.006730576977133751,0.02708251401782036,0.022021614015102386,-0.002593212528154254,-0.010017238557338715,-0.01436921302229166,0.01794530265033245,-0.002513212850317359,0.0161787997931242,0.00663748849183321,-0.03385049104690552,-0.010892975144088268,-0.11587943136692047,-0.042060527950525284,-0.008846372365951538,-0.06598908454179764,0.010026107542216778,-0.006942389998584986,0.04710448905825615,-0.02317717671394348,0.08352503180503845,-0.026729648932814598,-0.02635132148861885,0.01313403993844986,0.03979874029755592,-0.13527509570121765,0.004113242495805025,0.05802531540393829,0.05383684113621712,0.007164462469518185,-0.08564398437738419,-0.010071901604533195,-0.04004378616809845,-0.0069408356212079525,-0.014113913290202618,0.03917828947305679,-0.024030810222029686,0.00497000478208065,0.005456488113850355,0.005107522942125797,-0.017903074622154236,-0.014804241247475147,-0.02077459543943405,-0.00890518818050623,-0.010058535262942314,0.02912299335002899,0.04226090759038925,0.02412472851574421,0.008405046537518501,-0.04269060865044594,-0.04094759002327919,-0.023506129160523415,0.006085195578634739,0.0301959365606308,0.049658797681331635,0.00792238675057888,-0.00766567699611187,-0.005472967866808176,-0.030121220275759697,0.0027000419795513153,0.028675351291894913,0.018834860995411873,-0.032434213906526566,0.03296675905585289,-0.029018741101026535,-0.06785755604505539,0.06551306694746017,-0.0009363923454657197,0.1440914422273636,0.01751335710287094,0.01888708584010601,0.04280664026737213,0.010209750384092331,0.05090605095028877,-0.007641213480383158,0.003462204709649086,0.016707004979252815,0.007570216432213783,-0.0067257811315357685,0.03964649885892868,0.08820770680904388,0.05486273765563965,0.0027070760261267424,0.03230354189872742,0.045366209000349045,-0.022115299478173256,-0.031210344284772873,-0.026319380849599838,0.0018325785640627146,-0.03157920762896538,-0.013798494823276997,0.034517861902713776,-0.045964278280735016,-0.03609781712293625,0.013062258251011372,0.030827999114990234,0.03517685458064079,-0.024240147322416306,0.0006100856116972864,-0.0050107804127037525,0.0252775140106678,0.030695145949721336,0.0204357597976923,0.053501904010772705,0.014049973338842392,-0.001243729260750115,-0.023221289739012718,-0.016256729140877724,0.0025496419984847307,-0.04675745591521263,0.08139653503894806,-0.020177338272333145,0.003705544164404273,0.008657475933432579,0.006705094128847122,0.03102283552289009,0.0221897903829813,-0.02087346464395523,-0.009744709357619286,0.002555298851802945,-0.0016842023469507694,0.010799897834658623,0.00374770094640553,0.010995469056069851,-0.01223503053188324,0.008331814780831337,0.016441844403743744,0.01576283387839794,-0.007224843837320805,-0.03389953821897507,0.04397908225655556,0.016938965767621994,0.058443039655685425,-0.002148221479728818,-0.00892861932516098,-0.05721500515937805,0.04776150733232498,-0.0030354822520166636,-0.024915723130106926,0.003052659099921584,0.040130846202373505,-0.0025316807441413403,-0.03896037116646767,-0.00327274389564991,-0.04227001965045929,-0.028731001541018486,-0.024918919429183006,0.001236085081472993,-0.0010771945817396045,0.04481009393930435,0.05403388664126396,-0.013106503523886204,-0.003792506642639637,0.04980175942182541,0.004307168535888195,-0.008925273083150387,-0.026867683976888657,0.01026817224919796,0.0363021083176136,0.05831151828169823,-0.017067469656467438,0.07158065587282181,0.0009456495172344148,0.04396353289484978,-0.005674630869179964,-0.02880077436566353,-0.005983884911984205,0.007266530767083168,-0.037076182663440704,0.045185256749391556,-0.03443435579538345,-0.043714988976716995,-0.03538505733013153,-0.0121462382376194,-0.03209397569298744,-0.04783733934164047,0.005768609698861837,0.02122388780117035,0.04434652999043465,-0.011282357387244701,-0.029843220487236977,-0.02911892533302307,0.01005637552589178,-0.03327864408493042,-0.015072011388838291,0.03740612417459488,-0.017432134598493576,0.020008230581879616,0.011561422608792782,-0.03559146076440811,0.07605936378240585,0.022314270958304405,-0.006331100594252348,0.013034996576607227,0.02604166604578495,0.01818360760807991,0.04291290417313576,-0.019747352227568626,0.039905328303575516,0.0065384479239583015,-0.07155667245388031,0.0022241324186325073,-0.03687094897031784,-0.036146506667137146,0.004326693248003721,0.00045855980715714395,0.02126041054725647,-0.0014826263068243861,-0.02550814114511013,0.025339661166071892,-0.006900236941874027,0.05242198705673218,0.02507396787405014,-0.029557010158896446,-0.04250785708427429,0.03265794739127159,0.08444773405790329,0.014860741794109344,-0.01906302012503147,0.01508412603288889,0.00563958752900362,0.04339750111103058,0.025705289095640182,0.026739779859781265,-0.010777098126709461,-0.05963468551635742,0.07424592226743698,-0.019101321697235107,0.07585228979587555,-0.029291804879903793,-0.0726512223482132,-0.016847766935825348,-0.04551684483885765,0.00203744787722826,-0.009105036035180092,-0.046585265547037125,0.05683301016688347,-0.05213802680373192,0.024956664070487022,-0.045226529240608215,-0.053776245564222336,-0.01671280525624752,0.024673791602253914,0.01748022995889187,0.02898421138525009,-0.06007536128163338,-0.04439815506339073,-0.01197800226509571,0.03573284298181534,0.0023464744444936514,-0.017500560730695724,0.054610151797533035,-0.029491305351257324,0.017444200813770294,-0.07507715374231339,-0.008737330324947834,-0.04247945919632912,-0.0637245923280716,0.005886727012693882,0.022364675998687744,-0.024301497265696526,0.023087874054908752,0.040805354714393616,0.06818834692239761,0.05223064869642258,-0.003182793967425823,-0.0070120650343596935,-0.021239841356873512,-0.01025860384106636,-0.06133894994854927,-0.05325162410736084,-0.003122395370155573,-0.015920059755444527,0.03617391362786293,0.023309312760829926,-0.029185278341174126,-0.01643052138388157,-0.042510222643613815,-0.0708700567483902,0.02467537112534046,-0.021535279229283333,-0.00136867118999362,-0.0719996765255928,0.012912159785628319,-0.025839276611804962,0.009869595058262348,0.017959579825401306,-0.014149581082165241,-0.016489766538143158,-0.014075205661356449,0.008017085492610931,-0.009465377777814865,-0.04361460357904434,0.029652677476406097,0.04452315345406532,-0.02398090995848179,-0.0036272474098950624,0.037950754165649414,0.02237679250538349,-0.01833428628742695,0.016857938840985298,0.003914403263479471,0.0031892508268356323,-0.006404488813132048,0.020956596359610558,0.0072805495001375675,-0.0720931813120842,0.013238801620900631,0.06037698686122894,0.013055719435214996,0.05661623179912567,-0.0050286767072975636,-0.03828893229365349,-0.04973229020833969,0.089478999376297,-0.0028076020535081625,-0.0028267642483115196,-0.01526765525341034,0.041174355894327164,-0.00012576735753100365,0.03843022882938385,0.008365708403289318,0.023642174899578094,-0.025144195184111595,-0.001682292204350233,-0.025418754667043686,0.030529238283634186,-0.031266409903764725,0.03526929393410683,-0.00927258562296629,-0.00259394571185112,-0.021252937614917755,0.0029969799797981977,0.006178358104079962,0.004972722847014666,-0.02697369083762169,-0.027965795248746872,0.0823863297700882,0.04996137320995331,0.04068836197257042,-0.07407911121845245,0.03668397292494774,-0.0017984574660658836,-0.0402168333530426,-0.016266753897070885,0.0026535706128925085,-0.009660068899393082,-0.03859167918562889,-0.015354316681623459,0.055856138467788696,0.03710107132792473,-0.009368214756250381,0.00696156732738018,0.023048389703035355,-0.03178245946764946,-0.016062341630458832,0.02224184200167656,0.01098977867513895,0.06632104516029358,0.04095776379108429,-0.01963912695646286,-0.04055657982826233,0.029134077951312065,-0.014819539152085781,-0.021214142441749573,0.005693535786122084,0.007475953083485365,-0.006982741411775351,0.05299965292215347,-0.018876418471336365,0.007639352697879076,-0.014236362650990486,-0.02456662431359291,0.027124447748064995,0.026620887219905853,-0.0371599905192852,-0.039556313306093216,0.01770024746656418,-0.04980293661355972,0.09167078882455826,0.07166042923927307,0.02886980213224888,-0.0011293678544461727,0.019672468304634094,-0.11082305014133453,-0.004321159329265356,0.014924566261470318,-0.03267788514494896,0.00403163256123662,0.01492315623909235,-0.009169496595859528,-0.012353050522506237,0.012804471887648106,0.021302420645952225,0.02358677051961422,-0.012127949856221676,-0.07852999120950699,-0.008888171054422855,-0.01907494105398655,-7.28345630255899e-33,-0.018211139366030693,-0.022254928946495056,-0.006567929871380329,-0.008761387318372726,0.017570236697793007,-0.0135486526414752,0.007874617353081703,-0.03165183216333389,-0.015060282312333584,-0.006866777315735817,-0.030653145164251328,-0.0071307457983493805,0.004540647380053997,-0.022780301049351692,0.0597170852124691,0.015204595401883125,0.041471026837825775,-0.010184458456933498,-0.03663061559200287,-0.009368550032377243,-0.036074090749025345,0.027949655428528786,-0.023976333439350128,-0.05933080613613129,0.013221112079918385,0.008373986929655075,0.009103803895413876,-0.012007925659418106,0.04740012437105179,-0.011158881708979607,0.03246813639998436,-0.02254343405365944,-0.006158408243209124,0.0021116009447723627,-0.028034577146172523,0.022387485951185226,-0.05605902150273323,-0.03171751648187637,0.036079782992601395,-0.007287049200385809,0.06457869708538055,0.03260389715433121,0.03243756294250488,0.016627885401248932,0.025960078462958336,0.012691453099250793,-0.0025435371790081263,-0.007164347916841507,-0.023466479033231735,0.016367994248867035,0.03603649139404297,0.020315323024988174,-0.02833094634115696,0.025568624958395958,-0.012157047167420387,0.08101939409971237,0.028209174051880836,0.004371074493974447,-0.1092710942029953,0.0183483324944973,-0.05445214360952377,-0.09190783649682999,0.05565444007515907,0.017769401893019676,0.06031334027647972,0.0005904576391912997,-0.03228146582841873,0.050330787897109985,-0.0721026286482811,0.029412277042865753,0.01670907251536846,0.012684250250458717,0.003930139821022749,-0.05074059218168259,-0.0006541026523336768,-0.045324452221393585,0.006854700855910778,0.04698938503861427,-0.025037208572030067,-0.020335882902145386,-0.034612659364938736,0.0014369317796081305,-0.07095997780561447,-0.0027586217038333416,0.05526980385184288,0.020139450207352638,0.0015298717189580202,-0.01959853805601597,0.032004669308662415,0.04076320305466652,-0.06252793222665787,0.032922305166721344,-0.05983724445104599,0.006993906106799841,-0.05521225556731224,0.006260965019464493,0.06576775014400482,-0.000979829696007073,0.013753206469118595,-0.0744493156671524,-0.0024598611053079367,0.036169324070215225,-0.054623689502477646,0.04596510902047157,0.009329298511147499,-0.009473643265664577,-0.021475329995155334,0.000997034483589232,-0.07363961637020111,0.0016363688046112657,0.022127244621515274,-0.03237112611532211,-0.022976933047175407,-0.06144736707210541,0.00014627115160692483,-0.023854512721300125,0.016256267204880714,-0.050358884036540985,0.046867500990629196,-0.000015021836588857695,0.030205342918634415,0.0003369974729139358,-0.05816064402461052,-0.0012415716191753745,0.06313720345497131,-0.06387734413146973,-0.020738419145345688,-0.05641898885369301,0.03155027702450752,-0.004452961962670088,-0.024011582136154175,-0.027917761355638504,3.415511287130357e-7,0.01781320758163929,0.0036414945498108864,0.0038190505001693964,0.03412771597504616,0.014930635690689087,-0.0020866142585873604,-0.050140127539634705,0.004169967025518417,-0.034561146050691605,-0.025075800716876984,0.020958272740244865,0.003453596727922559,0.0003015597758349031,0.08598030358552933,-0.005035934969782829,-0.04764267057180405,0.06231134384870529,-0.049769409000873566,-0.031897470355033875,0.04635114595293999,0.07106436789035797,0.005759564694017172,0.06614323705434799,0.007095834705978632,0.017071204259991646,-0.03224686160683632,-0.03795420005917549,0.004559371154755354,0.06621570885181427,-0.020131146535277367,0.004833901766687632,0.09035103023052216,-0.032608721405267715,-0.039673253893852234,-0.015194752253592014,0.010827374644577503,-0.005597126204520464,-0.023530595004558563,-0.004844768438488245,0.06032005697488785,0.032535526901483536,-0.08100328594446182,-0.014913979917764664,-0.04613405838608742,0.0155366575345397,-0.046665214002132416,0.008425816893577576,0.06382221728563309,0.015290439128875732,0.032292261719703674,0.06365855038166046,0.011094565503299236,-0.025157494470477104,-0.06380470842123032,0.011021427810192108,-0.022124487906694412,0.016083108261227608,0.059640947729349136,0.02277633547782898,0.04227784648537636,-0.0016344262985512614,-0.016216350719332695,-0.016251830384135246,0.06429542601108551,0.0006044161273166537,0.04702938348054886,-0.02534574270248413,3.387824310237758e-34,0.015047244727611542,-0.05075235664844513,0.029566019773483276,0.005008672829717398,0.001826870022341609,-0.01283048652112484,0.05384485796093941,-0.023979734629392624,0.0014739501057192683,-0.03877582773566246,0.011544276028871536]'
SET
  @TechnicalDesignVector_cf758e82 = N'[-0.049555860459804535,0.0549764558672905,-0.03683452308177948,-0.031797535717487335,-0.02166503295302391,0.009739972651004791,0.006085667293518782,0.0011565069435164332,-0.015240680426359177,0.02685358375310898,0.026486512273550034,0.03759180009365082,0.038962263613939285,0.16196231544017792,0.010570165701210499,-0.06663297116756439,-0.036740634590387344,0.07236319780349731,0.020217668265104294,0.010747618973255157,0.047365959733724594,-0.01276322454214096,-0.013994316570460796,0.010159437544643879,-0.06078408658504486,-0.010562097653746605,-0.02873123623430729,0.011850263923406601,0.02955445647239685,-0.09418419003486633,0.02532791532576084,0.021288612857460976,-0.03401390090584755,0.046066734939813614,0.0000024254854906757828,-0.03198700398206711,-0.034664515405893326,-0.004449786152690649,-0.00005861422687303275,0.025352708995342255,-0.019520064815878868,-0.05131551995873451,0.039843425154685974,-0.01752503216266632,0.014280809089541435,-0.05625336989760399,0.007444683462381363,-0.00967282522469759,0.04823502153158188,-0.06715362519025803,-0.002628797898069024,-0.014276938512921333,-0.05453404039144516,-0.002331018215045333,0.009646806865930557,0.01575424149632454,-0.010182717815041542,0.0026854374445974827,0.07829618453979492,-0.013811150565743446,-0.017332496121525764,0.0289209745824337,0.010293984785676003,-0.02437683939933777,0.05801650881767273,0.03640393167734146,0.0692349225282669,-0.08813696354627609,-0.00994835328310728,0.022536199539899826,0.1083630919456482,-0.03385386988520622,0.01660209894180298,0.019437715411186218,-0.04560999572277069,0.019605858251452446,-0.03728051111102104,-0.028218043968081474,-0.009865256026387215,-0.014471704140305519,-0.022964684292674065,0.039827607572078705,-0.04906987026333809,-0.03631361946463585,0.004371593240648508,0.003238305216655135,0.007099981419742107,0.024962343275547028,-0.063213050365448,-0.030487580224871635,0.016906041651964188,-0.05173017457127571,-0.036219172179698944,0.026890413835644722,-0.014133109711110592,-0.005056173074990511,0.02777085453271866,-0.03290268033742905,0.043413322418928146,-0.009292581118643284,0.06452424079179764,0.04799250140786171,0.008119102567434311,0.04359360411763191,0.0985889881849289,0.011092940345406532,0.012442539446055889,-0.0797831192612648,0.029051175341010094,0.02658361941576004,0.0044183447025716305,-0.013176609762012959,0.0006679526995867491,0.017575206235051155,0.008250477723777294,-0.0014883383410051465,-0.029049593955278397,0.010547959245741367,-0.004593756981194019,0.04621531814336777,0.1085795909166336,0.02409980446100235,0.02967986650764942,0.029816463589668274,-0.01787755824625492,0.04436078295111656,-0.05275924876332283,-0.01629793643951416,-0.006548949982970953,-0.048480402678251266,-0.016589557752013206,-0.005146198906004429,0.030106522142887115,0.0033985988702625036,-0.026200640946626663,0.033682681620121,0.03163972124457359,0.02901267446577549,-0.09637397527694702,-0.003763507818803191,0.0018181467894464731,0.009541979059576988,-0.05415324494242668,0.012552805244922638,0.003080094000324607,-0.011810613796114922,0.004363551270216703,0.05525745451450348,-0.0021804547868669033,-0.0024699713103473186,0.0017544000875204802,0.017582571133971214,-0.0521291047334671,0.020532965660095215,0.0028641335666179657,-0.008313607424497604,0.018226521089673042,0.00393486674875021,0.03962745517492294,-0.0367683470249176,0.014013372361660004,0.015829013660550117,0.019366495311260223,-0.0013376021524891257,-0.024527862668037415,0.010647807270288467,-0.022927982732653618,-0.014629433862864971,-0.11136463284492493,-0.034207768738269806,-0.010414758697152138,-0.03000676818192005,-0.003172539873048663,-0.01007042545825243,0.0665719136595726,-0.0354924239218235,0.06870011985301971,-0.06453252583742142,0.007305163890123367,0.05926793813705444,0.05883583053946495,-0.11271016299724579,-0.010154402814805508,0.041991788893938065,0.08467241376638412,-0.001346746925264597,-0.06573668867349625,0.004958599805831909,-0.01972186006605625,-0.015805261209607124,-0.009362345561385155,0.007040413562208414,-0.02280164510011673,0.011145561002194881,0.0083013279363513,0.011096356436610222,0.006458841264247894,-0.014555503614246845,0.02457302436232567,0.025769812986254692,0.0036404202692210674,0.02672579512000084,0.05427897721529007,0.01813093014061451,0.01383334118872881,-0.055543139576911926,-0.05071888491511345,-0.02845773845911026,-0.015544812195003033,0.022201769053936005,0.04339548200368881,0.0021802226547151804,-0.016223346814513206,0.008243439719080925,-0.028228135779500008,0.014955630525946617,0.02886120043694973,0.01263346429914236,-0.051396988332271576,0.041716527193784714,-0.06558439135551453,-0.05212066322565079,0.07413922250270844,-0.008707833476364613,0.08105131983757019,-0.00872648786753416,0.003329586237668991,0.030208241194486618,0.023103347048163414,0.044800106436014175,-0.023596005514264107,0.007947373203933239,0.023058615624904633,0.004654498305171728,0.02079853229224682,0.06560522317886353,0.017979448661208153,0.04908735677599907,0.009143956936895847,0.0027157319709658623,0.01586136780679226,-0.016457367688417435,-0.03676773980259895,-0.018398642539978027,0.01221952959895134,-0.049804430454969406,-0.04594110697507858,0.034310322254896164,-0.042418450117111206,-0.01975267194211483,0.020831668749451637,0.014341162517666817,0.011806781403720379,-0.028545964509248734,-0.0023571650963276625,-0.019045494496822357,0.05245682969689369,0.0338435135781765,0.01695195399224758,0.05784781649708748,-0.009753492660820484,0.00603027269244194,-0.03373128920793533,-0.026493174955248833,-0.0035718053113669157,-0.05754329264163971,0.07644239068031311,0.0007311158115044236,-0.04866206273436546,0.015861332416534424,0.018957993015646935,0.016877038404345512,0.013132584281265736,-0.019452564418315887,-0.007600509095937014,0.022578595206141472,-0.02110036090016365,-0.019805708900094032,-0.027919117361307144,0.03255469352006912,-0.0007233078358694911,-0.008974216878414154,-0.0021452689543366432,0.03796654939651489,-0.001555168884806335,0.004835690837353468,0.043861158192157745,0.001098355744034052,0.05767928808927536,-0.04114607721567154,-0.010393202304840088,-0.04393297806382179,0.030751606449484825,-0.011325419880449772,-0.02120228111743927,0.015338375233113766,0.029416313394904137,0.007740430533885956,-0.027195220813155174,-0.0007220680708996952,-0.06471360474824905,-0.05692170560359955,-0.005794395226985216,-0.004156436305493116,-0.020325500518083572,0.07940278202295303,0.032333459705114365,0.014656318351626396,-0.015102448873221874,0.061598703265190125,0.027814684435725212,-0.004861012101173401,-0.015360197052359581,0.0207897387444973,0.024960072711110115,0.07059787213802338,-0.025683516636490822,-0.0030397726222872734,-0.01690911129117012,0.04404963180422783,0.009249011054635048,-0.02290986478328705,-0.0033824103884398937,-0.005097765941172838,-0.024501347914338112,0.04152514412999153,-0.03026691824197769,-0.04727021977305412,-0.02762008272111416,-0.01759364642202854,-0.02213871292769909,-0.050364043563604355,0.0007005420629866421,-0.022058941423892975,0.056454990059137344,0.00861810427159071,-0.041534408926963806,-0.07726279646158218,0.004738685209304094,-0.04570350423455238,-0.021616004407405853,0.03239705413579941,-0.023019876331090927,0.050207432359457016,0.020338989794254303,-0.01861674338579178,0.03462554141879082,0.022208141162991524,-0.018481675535440445,0.020572572946548462,0.02303112857043743,0.024885723367333412,0.026083778589963913,-0.029995650053024292,0.019748810678720474,0.038790952414274216,-0.059658512473106384,-0.02668488398194313,-0.0127406045794487,0.005929520353674889,0.030089911073446274,0.024966295808553696,0.04206818342208862,0.01084822416305542,-0.020018700510263443,0.014953983016312122,-0.0013887156965211034,0.020213434472680092,0.010284253396093845,-0.028272956609725952,-0.02631891518831253,0.04290040209889412,0.07688169926404953,0.012085894122719765,-0.021107671782374382,0.0057092406786978245,0.009508420713245869,0.06067929416894913,0.025698410347104073,0.029327230527997017,-0.02109057642519474,-0.10479991883039474,0.09665748476982117,0.019021201878786087,0.07229836285114288,-0.04124606028199196,-0.0519181564450264,-0.01782951131463051,-0.0274228285998106,0.027838723734021187,-0.024266934022307396,-0.0354209840297699,0.032235175371170044,-0.06879286468029022,0.007903601974248886,-0.009545158594846725,-0.04671631008386612,-0.013602984137833118,0.022345395758748055,0.0177854523062706,0.012163383886218071,-0.061781145632267,-0.03338192403316498,-0.001998094841837883,0.030941570177674294,-0.03366941213607788,-0.0416378527879715,0.06541324406862259,-0.009237358346581459,0.004342161118984222,-0.08830604702234268,-0.04030737653374672,-0.03369959071278572,-0.05243464931845665,-0.03113739937543869,-0.003663728479295969,-0.03274333477020264,0.007747002877295017,0.06182381138205528,0.05557316169142723,0.04569988325238228,-0.015379957854747772,-0.006600820925086737,-0.03977569565176964,0.038193028420209885,-0.05854042246937752,-0.02332427352666855,0.016559068113565445,-0.006042226683348417,0.07661690562963486,0.01075782161206007,-0.033986929804086685,-0.016902098432183266,0.011425756849348545,-0.05709181725978851,-0.016026172786951065,0.00011737819295376539,0.01609835773706436,-0.04287562519311905,0.00705568166449666,0.002506853546947241,-0.039908651262521744,0.038136210292577744,-0.021818237379193306,-0.035024967044591904,-0.014606373384594917,-0.0078016226179897785,-0.003197569865733385,-0.018472928553819656,0.039621107280254364,0.03973019868135452,-0.030784526839852333,-0.03206891566514969,0.006563771981745958,0.024717027321457863,-0.060381338000297546,0.019945161417126656,-0.047995567321777344,0.013920473866164684,0.029747869819402695,0.03993544727563858,0.01928216591477394,-0.060733601450920105,0.003709680400788784,0.0503694973886013,0.05684668943285942,0.05096308887004852,-0.039034321904182434,-0.05595839023590088,-0.08523436635732651,0.07247696816921234,-0.029607152566313744,-0.015910640358924866,0.005887432489544153,0.06735517829656601,0.01794419437646866,0.004962617065757513,0.02196650020778179,0.020326441153883934,-0.01362104993313551,0.030370501801371574,0.01787959784269333,0.012228146195411682,-0.03491271287202835,0.028137803077697754,-0.0024207322858273983,-0.027952272444963455,-0.017225857824087143,-0.006776730064302683,-0.00885279756039381,-0.030437013134360313,-0.033785130828619,-0.022980650886893272,0.08675730973482132,0.08289982378482819,0.034632958471775055,-0.06538718938827515,0.05940099060535431,-0.013315617106854916,-0.031536221504211426,-0.020713772624731064,0.006919967941939831,0.017490329220891,-0.023220261558890343,-0.03343955799937248,0.03229513019323349,0.02911754697561264,-0.0209471695125103,-0.0018575872527435422,0.0018858594121411443,-0.0035304431803524494,-0.008942806161940098,-0.01679232157766819,-0.004417426884174347,0.04783650487661362,0.030960313975811005,-0.028895853087306023,-0.012791657820343971,0.039279647171497345,-0.035758618265390396,-0.011462250724434853,0.00462565990164876,-0.005170684307813644,0.010173297487199306,0.07665035128593445,0.008411478251218796,-0.0029772657435387373,-0.013418556191027164,-0.012599886395037174,0.03457454591989517,0.0037695004139095545,-0.057214781641960144,-0.04294607788324356,0.00043413511593826115,-0.05725407227873802,0.08073240518569946,0.03946027159690857,0.024609968066215515,-0.008687394671142101,-0.002145867794752121,-0.11652105301618576,-0.015511377714574337,0.037030357867479324,-0.017717260867357254,-0.002670814050361514,-0.007516319397836924,0.010785113088786602,-0.027385959401726723,0.04726986959576607,0.01709280163049698,0.0423160120844841,-0.005317044444382191,-0.024837464094161987,-0.02435370534658432,-0.003390710800886154,-7.420150867196267e-33,-0.017220912501215935,-0.003021887969225645,-0.011865939013659954,-0.015356247313320637,-0.007729092612862587,-0.012297488749027252,0.0191931314766407,-0.04985659569501877,-0.01990700513124466,-0.009883240796625614,-0.011749009601771832,-0.020353278145194054,0.0046937596052885056,-0.011212844401597977,0.044873859733343124,0.01606401428580284,0.02541728876531124,-0.030543027445673943,-0.044771432876586914,-0.011972618289291859,-0.011045792140066624,0.04071042314171791,-0.011180214583873749,-0.06923150271177292,0.011043662205338478,0.014924418181180954,-0.007734890561550856,0.002065564040094614,0.02835233137011528,0.03918107599020004,0.02812931314110756,-0.03039146214723587,-0.011461418122053146,-0.017421355471014977,-0.022949310019612312,0.010579022578895092,-0.0714874118566513,-0.03222385793924332,0.011084417812526226,-0.014719238504767418,0.039047516882419586,0.019274355843663216,0.04813310131430626,0.003611588617786765,-0.0034897448495030403,-0.041051771491765976,-0.008578409440815449,-0.013372538611292839,-0.007551004644483328,-0.04099753499031067,0.021534280851483345,0.03207341209053993,-0.039537519216537476,0.04306643083691597,-0.0178935918956995,0.06153220310807228,0.03886521980166435,0.05688026547431946,-0.08848623931407928,0.03220321610569954,-0.08199197053909302,-0.07107333838939667,0.010437819175422192,0.02248687669634819,0.07802564650774002,0.008275256492197514,-0.011171584948897362,0.0522247813642025,-0.07211606204509735,0.04243236407637596,0.0016863670898601413,0.009750790894031525,0.014328710734844208,-0.04911281168460846,-0.04167289659380913,-0.06524331122636795,-0.029817234724760056,0.03796008601784706,-0.01869262382388115,0.0031974026933312416,-0.04355628415942192,0.010341758839786053,-0.02494080364704132,0.009443438611924648,0.04000718891620636,0.016644243150949478,-0.015373975038528442,0.01676742359995842,0.016362210735678673,0.031825851649045944,-0.0011515594087541103,0.033649932593107224,-0.08509378880262375,0.013066810555756092,-0.02419009432196617,-0.005084763281047344,0.045452892780303955,0.019780917093157768,0.027693508192896843,-0.05064970999956131,0.03066672384738922,0.020143983885645866,-0.040689967572689056,0.01142721064388752,-0.007142651826143265,-0.012325943447649479,0.0037334293592721224,0.029410364106297493,-0.0785597413778305,0.019128847867250443,0.03083987347781658,-0.019122662022709846,0.0064661093056201935,-0.051784250885248184,0.005672987084835768,-0.04145360365509987,0.019398245960474014,-0.034017495810985565,0.05186794325709343,0.05452591925859451,0.05198000743985176,0.01129574328660965,-0.056470442563295364,0.01588817685842514,0.03957068547606468,-0.05535491555929184,-0.01155863143503666,-0.033768732100725174,-0.0010062858927994967,-0.007328451611101627,-0.0067695449106395245,-0.038613591343164444,3.183745889145939e-7,0.03681439161300659,0.023717667907476425,0.010844522155821323,0.053522393107414246,0.05459154397249222,-0.0311251450330019,-0.050360701978206635,-0.005007502622902393,-0.05739225074648857,-0.007870675064623356,0.030005814507603645,-0.0019995342008769512,0.020681753754615784,0.04456130787730217,0.006158243864774704,-0.050979021936655045,0.0011908919550478458,-0.05841890722513199,-0.04459385201334953,0.03578227013349533,0.06550820171833038,0.023597560822963715,0.057424671947956085,-0.004398964811116457,0.023825228214263916,-0.00815566722303629,-0.03622660040855408,-0.006265380885452032,0.011234170757234097,0.0001786797947715968,0.011582263745367527,0.02338140271604061,0.002281994093209505,-0.05842467024922371,-0.010491818189620972,-0.0010142899118363857,-0.03324339911341667,-0.017412658780813217,-0.002628908958286047,0.09924167394638062,0.02930256351828575,-0.06069409102201462,0.0008757625473663211,-0.07200746983289719,0.01169717125594616,-0.015219314955174923,-0.025838671252131462,0.03685762360692024,-0.02606889419257641,0.03762464225292206,0.050808243453502655,0.010631397366523743,-0.03146424889564514,-0.012348287738859653,0.005070272833108902,-0.03966204449534416,0.036029767245054245,0.028807220980525017,0.018561819568276405,0.03764640539884567,-0.027561567723751068,-0.016037389636039734,-0.010787717998027802,0.046756647527217865,-0.012497708201408386,0.04718005657196045,-0.027059394866228104,3.4744325299544363e-34,0.02732604369521141,-0.04599090665578842,0.0011318643810227513,-0.02959495596587658,0.0187362190335989,-0.04733193293213844,0.023484475910663605,-0.010073360055685043,0.006440754979848862,-0.03510700538754463,-0.01053486205637455]'
SET
  @HasCustomProps_cf758e82 = 0
SET
  @HasCustomEvents_cf758e82 = 0
SET
  @RequiresData_cf758e82 = 0
SET
  @DependencyCount_cf758e82 = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_cf758e82 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_cf758e82 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_cf758e82 = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_cf758e82,
  @Namespace = @Namespace_cf758e82,
  @Name = @Name_cf758e82,
  @Version = @Version_cf758e82,
  @VersionSequence = @VersionSequence_cf758e82,
  @Title = @Title_cf758e82,
  @Description = @Description_cf758e82,
  @Type = @Type_cf758e82,
  @Status = @Status_cf758e82,
  @DeveloperName = @DeveloperName_cf758e82,
  @DeveloperEmail = @DeveloperEmail_cf758e82,
  @DeveloperOrganization = @DeveloperOrganization_cf758e82,
  @SourceRegistryID = @SourceRegistryID_cf758e82,
  @ReplicatedAt = @ReplicatedAt_cf758e82,
  @LastSyncedAt = @LastSyncedAt_cf758e82,
  @Specification = @Specification_cf758e82,
  @FunctionalRequirements = @FunctionalRequirements_cf758e82,
  @TechnicalDesign = @TechnicalDesign_cf758e82,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_cf758e82,
  @TechnicalDesignVector = @TechnicalDesignVector_cf758e82,
  @HasCustomProps = @HasCustomProps_cf758e82,
  @HasCustomEvents = @HasCustomEvents_cf758e82,
  @RequiresData = @RequiresData_cf758e82,
  @DependencyCount = @DependencyCount_cf758e82,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_cf758e82,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_cf758e82,
  @HasRequiredCustomProps = @HasRequiredCustomProps_cf758e82;

-- Save MJ: Components (core SP call only)
DECLARE @ID_283393e6 UNIQUEIDENTIFIER,
@Namespace_283393e6 NVARCHAR(MAX),
@Name_283393e6 NVARCHAR(500),
@Version_283393e6 NVARCHAR(50),
@VersionSequence_283393e6 INT,
@Title_283393e6 NVARCHAR(1000),
@Description_283393e6 NVARCHAR(MAX),
@Type_283393e6 NVARCHAR(255),
@Status_283393e6 NVARCHAR(50),
@DeveloperName_283393e6 NVARCHAR(255),
@DeveloperEmail_283393e6 NVARCHAR(255),
@DeveloperOrganization_283393e6 NVARCHAR(255),
@SourceRegistryID_283393e6 UNIQUEIDENTIFIER,
@ReplicatedAt_283393e6 DATETIMEOFFSET,
@LastSyncedAt_283393e6 DATETIMEOFFSET,
@Specification_283393e6 NVARCHAR(MAX),
@FunctionalRequirements_283393e6 NVARCHAR(MAX),
@TechnicalDesign_283393e6 NVARCHAR(MAX),
@FunctionalRequirementsVector_283393e6 NVARCHAR(MAX),
@TechnicalDesignVector_283393e6 NVARCHAR(MAX),
@HasCustomProps_283393e6 BIT,
@HasCustomEvents_283393e6 BIT,
@RequiresData_283393e6 BIT,
@DependencyCount_283393e6 INT,
@TechnicalDesignVectorEmbeddingModelID_283393e6 NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_283393e6 NVARCHAR(MAX),
@HasRequiredCustomProps_283393e6 BIT
SET
  @ID_283393e6 = '90293530-7C0B-42B8-B8B1-38FD7D5C97DA'
SET
  @Namespace_283393e6 = N'Generic/UI/Chart'
SET
  @Name_283393e6 = N'SimpleDrilldownChart'
SET
  @Version_283393e6 = N'1.0.0'
SET
  @VersionSequence_283393e6 = 1
SET
  @Title_283393e6 = N'Simple Drilldown Chart'
SET
  @Description_283393e6 = N'Chart component with built-in drill-down capability that shows detailed records when clicking on data points'
SET
  @Type_283393e6 = N'Chart'
SET
  @Status_283393e6 = N'Published'
SET
  @Specification_283393e6 = N'{"name":"SimpleDrilldownChart","title":"Simple Drilldown Chart","description":"Chart component with built-in drill-down capability that shows detailed records when clicking on data points","type":"chart","location":"embedded","functionalRequirements":"Chart with click-to-drill functionality. Extends SimpleChart with split view: chart above, data grid below. Clicking chart segments shows filtered records in grid. Highlights selected segment, displays record count, provides clear selection. Uses: dashboards with detail inspection, category breakdowns with listings, time series with period details.","technicalDesign":"Composes SimpleChart and DataGrid components. Manages selection state between chart and grid. Click on chart segment → filter records → display in grid below. Layout: chart (top) → selection info bar → data grid (bottom). Preserves original records for filtering. Handles expand/collapse transitions.","dataRequirements":{"mode":"props","description":"Receives data through props, uses it for both chart and drill-down"},"properties":[{"name":"entityName","type":"string","description":"Name of the entity being visualized","required":true},{"name":"data","type":"Array<object>","description":"Array of entity objects to visualize","required":true},{"name":"groupBy","type":"string","description":"Field name to group data by","required":true},{"name":"valueField","type":"string","description":"Field to aggregate for values","required":false},{"name":"aggregateMethod","type":"''count'' | ''sum'' | ''average'' | ''min'' | ''max''","description":"How to aggregate values","required":false,"defaultValue":"count"},{"name":"chartType","type":"''auto'' | ''bar'' | ''line'' | ''pie'' | ''doughnut'' | ''area''","description":"Chart type to render","required":false,"defaultValue":"auto"},{"name":"title","type":"string","description":"Chart title","required":false},{"name":"gridFields","type":"Array<string>","description":"Fields to show in drill-down grid","required":false},{"name":"showDrilldown","type":"boolean","description":"Whether to enable drill-down functionality","required":false,"defaultValue":true},{"name":"drilldownHeight","type":"number","description":"Height of drill-down panel in pixels","required":false,"defaultValue":300},{"name":"showSingleRecordView","type":"boolean","description":"Whether to show SingleRecordView when a row is selected in the grid","required":false,"defaultValue":false},{"name":"singleRecordViewFields","type":"Array<string>","description":"Fields to display in the SingleRecordView","required":false}],"events":[{"name":"segmentSelected","description":"Fired when a chart segment is selected","parameters":[{"name":"segment","type":"{ segment: { label: string; value: number; records: Array<object>; percentage?: number } }","description":"Selected segment info including label, value, and records"}]},{"name":"selectionCleared","description":"Fired when selection is cleared","parameters":[]},{"name":"dataPointClick","description":"Bubbled event from chart when any data point is clicked","parameters":[{"name":"clickData","type":"{ seriesName: string; value: number; label: string; records: Array<object>; chartType: string; percentage?: number }","description":"Click data from the chart including label, value, and records"}]},{"name":"rowSelected","description":"Fired when a row is selected in the drill-down grid","parameters":[{"name":"selectionData","type":"{ record: object; segment: { label: string; value: number; records: Array<object> } }","description":"Object containing selected record and current segment context"}]}],"dependencies":[{"name":"SimpleChart","namespace":"Generic/UI/Chart","location":"registry","description":"Chart component for visualization"},{"name":"DataGrid","namespace":"Generic/UI/Table","location":"registry","description":"Generic data grid for drill-down display"},{"name":"SingleRecordView","namespace":"Generic/UI/Form","location":"registry","description":"Single record display component for selected row details"}],"code":"function SimpleDrilldownChart({\n  entityName,\n  data,\n  groupBy,\n  valueField,\n  aggregateMethod = ''count'',\n  chartType = ''auto'',\n  title,\n  gridFields,\n  showDrilldown = true,\n  drilldownHeight = 300,\n  showSingleRecordView = false,\n  singleRecordViewFields,\n  onSegmentSelected,\n  onSelectionCleared,\n  onDataPointClick,\n  onRowSelected,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  // State for drill-down\n  const [selectedSegment, setSelectedSegment] = React.useState(null);\n  const [showGrid, setShowGrid] = React.useState(false);\n  const [selectedRecord, setSelectedRecord] = React.useState(null);\n  \n  // Get components from registry\n  const { SimpleChart, DataGrid, SingleRecordView } = components;\n  \n  // Handle chart click\n  const handleChartClick = (clickData) => {\n    // Always bubble up the chart click event\n    if (onDataPointClick) {\n      onDataPointClick(clickData);\n    }\n    \n    if (!showDrilldown) return;\n    \n    // Set selected segment\n    setSelectedSegment(clickData);\n    setShowGrid(true);\n    setSelectedRecord(null); // Clear any selected record when new segment is selected\n    \n    // Fire segment selected event\n    if (onSegmentSelected) {\n      onSegmentSelected({ segment: clickData });\n    }\n  };\n  \n  // Clear selection\n  const handleClearSelection = () => {\n    setSelectedSegment(null);\n    setShowGrid(false);\n    setSelectedRecord(null);\n    \n    if (onSelectionCleared) {\n      onSelectionCleared();\n    }\n  };\n  \n  // Handle row selection in grid\n  const handleRowClick = (record) => {\n    setSelectedRecord(record);\n    \n    // Bubble up the row selection event\n    if (onRowSelected) {\n      onRowSelected({\n        record,\n        segment: selectedSegment\n      });\n    }\n  };\n  \n  // Filter data for selected segment\n  const getDrilldownData = () => {\n    if (!selectedSegment || !selectedSegment.records) {\n      return [];\n    }\n    return selectedSegment.records;\n  };\n  \n  // Determine which fields to show in grid\n  const getGridFields = () => {\n    if (gridFields && gridFields.length > 0) {\n      return gridFields;\n    }\n    \n    // Auto-detect fields from first record\n    const records = getDrilldownData();\n    if (records.length > 0) {\n      const firstRecord = records[0];\n      return Object.keys(firstRecord).filter(key => \n        !key.startsWith(''__mj'') && \n        key !== ''ID'' &&\n        typeof firstRecord[key] !== ''object''\n      ).slice(0, 10); // Limit to 10 fields\n    }\n    \n    return [];\n  };\n  \n  return (\n    <div style={{ width: ''100%'' }}>\n      {/* Chart Section */}\n      <div style={{ \n        width: ''100%'',\n        border: selectedSegment ? ''2px solid #1890ff'' : ''none'',\n        borderRadius: ''8px'',\n        padding: selectedSegment ? ''2px'' : ''0'',\n        transition: ''all 0.3s ease''\n      }}>\n        <SimpleChart\n          entityName={entityName}\n          data={data}\n          groupBy={groupBy}\n          valueField={valueField}\n          aggregateMethod={aggregateMethod}\n          chartType={chartType}\n          title={title || `$' + '{entityName} by $' + '{groupBy}`}\n          onDataPointClick={handleChartClick}\n          utilities={utilities}\n          styles={styles}\n          components={components}\n          callbacks={callbacks}\n          savedUserSettings={savedUserSettings}\n          onSaveUserSettings={onSaveUserSettings}\n        />\n      </div>\n      \n      {/* Selection Info Bar */}\n      {showDrilldown && selectedSegment && (\n        <div style={{\n          display: ''flex'',\n          alignItems: ''center'',\n          justifyContent: ''space-between'',\n          padding: ''12px 16px'',\n          backgroundColor: ''#f0f5ff'',\n          borderLeft: ''4px solid #1890ff'',\n          marginTop: ''16px'',\n          borderRadius: ''4px''\n        }}>\n          <div style={{ display: ''flex'', alignItems: ''center'', gap: ''20px'' }}>\n            <div>\n              <strong style={{ color: ''#333'' }}>Selected:</strong>{'' ''}\n              <span style={{ color: ''#1890ff'', fontWeight: 600 }}>\n                {selectedSegment.label}\n              </span>\n            </div>\n            <div>\n              <strong style={{ color: ''#333'' }}>Value:</strong>{'' ''}\n              <span style={{ color: ''#52c41a'', fontWeight: 600 }}>\n                {typeof selectedSegment.value === ''number'' \n                  ? selectedSegment.value.toLocaleString()\n                  : selectedSegment.value}\n              </span>\n            </div>\n            <div>\n              <strong style={{ color: ''#333'' }}>Records:</strong>{'' ''}\n              <span style={{ color: ''#666'', fontWeight: 600 }}>\n                {selectedSegment.records?.length || 0}\n              </span>\n            </div>\n            {selectedSegment.percentage != null && (\n              <div>\n                <strong style={{ color: ''#333'' }}>Percentage:</strong>{'' ''}\n                <span style={{ color: ''#722ed1'', fontWeight: 600 }}>\n                  {selectedSegment.percentage.toFixed(1)}%\n                </span>\n              </div>\n            )}\n          </div>\n          <button\n            onClick={handleClearSelection}\n            style={{\n              padding: ''6px 12px'',\n              backgroundColor: ''#fff'',\n              border: ''1px solid #d9d9d9'',\n              borderRadius: ''4px'',\n              cursor: ''pointer'',\n              fontSize: ''14px'',\n              color: ''#333'',\n              transition: ''all 0.3s''\n            }}\n            onMouseEnter={(e) => {\n              e.target.style.borderColor = ''#1890ff'';\n              e.target.style.color = ''#1890ff'';\n            }}\n            onMouseLeave={(e) => {\n              e.target.style.borderColor = ''#d9d9d9'';\n              e.target.style.color = ''#333'';\n            }}\n          >\n            ✕ Clear Selection\n          </button>\n        </div>\n      )}\n      \n      {/* Drill-down Grid */}\n      {showDrilldown && showGrid && selectedSegment && (\n        <div style={{\n          marginTop: ''16px'',\n          display: showSingleRecordView && selectedRecord ? ''flex'' : ''block'',\n          gap: ''16px''\n        }}>\n          {/* Grid Section */}\n          <div style={{\n            flex: showSingleRecordView && selectedRecord ? ''1 1 60%'' : ''1'',\n            height: drilldownHeight,\n            overflow: ''auto'',\n            border: ''1px solid #d9d9d9'',\n            borderRadius: ''4px'',\n            animation: ''slideDown 0.3s ease''\n          }}>\n            {DataGrid ? (\n              <DataGrid\n                entityName={entityName}\n                data={getDrilldownData()}\n                fields={getGridFields()}\n                sorting={true}\n                paging={true}\n                pageSize={10}\n                filtering={true}\n                onRowClick={showSingleRecordView ? handleRowClick : undefined}\n                highlightedRow={selectedRecord}\n                utilities={utilities}\n                styles={styles}\n                components={components}\n                callbacks={callbacks}\n                savedUserSettings={savedUserSettings}\n                onSaveUserSettings={onSaveUserSettings}\n              />\n            ) : (\n              <div style={{ \n                padding: ''20px'', \n                textAlign: ''center'',\n                color: ''#ff4d4f''\n              }}>\n                Error: DataGrid component not found. Please ensure DataGrid is properly registered.\n              </div>\n            )}\n          </div>\n          \n          {/* Single Record View */}\n          {showSingleRecordView && selectedRecord && SingleRecordView && (\n            <div style={{\n              flex: ''1 1 40%'',\n              height: drilldownHeight,\n              overflow: ''auto'',\n              border: ''1px solid #d9d9d9'',\n              borderRadius: ''4px'',\n              padding: ''16px'',\n              backgroundColor: ''#fafafa'',\n              animation: ''slideIn 0.3s ease''\n            }}>\n              <SingleRecordView\n                record={selectedRecord}\n                entityName={entityName}\n                fields={singleRecordViewFields}\n                layout=\"list\"\n                showLabels={true}\n                allowOpenRecord={true}\n                utilities={utilities}\n                styles={styles}\n                components={components}\n                callbacks={callbacks}\n                savedUserSettings={savedUserSettings}\n                onSaveUserSettings={onSaveUserSettings}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* Animation keyframes */}\n      <style>{`\n        @keyframes slideDown {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n        \n        @keyframes slideIn {\n          from {\n            opacity: 0;\n            transform: translateX(10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateX(0);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}","exampleUsage":"<SimpleDrilldownChart\n  entityName=\"Invoice Line Items\"\n  data={invoiceItems}\n  groupBy=\"ProductCategory\"\n  valueField=\"TotalAmount\"\n  aggregateMethod=\"sum\"\n  chartType=\"bar\"\n  title=\"Revenue by Category - Click to drill down\"\n  gridFields={[''ProductName'', ''Quantity'', ''TotalAmount'', ''InvoiceDate'']}\n  showSingleRecordView={true}\n  singleRecordViewFields={[''ProductName'', ''Description'', ''Quantity'', ''UnitPrice'', ''TotalAmount'']}\n  onDataPointClick={handleChartClick}\n  onRowSelected={handleRowSelection}\n/>"}'
SET
  @FunctionalRequirements_283393e6 = N'All SimpleChart features inherits all charting capabilities; Click-to-drill clicking data points reveals underlying records; Split view chart on top data grid below; Contextual data shows only records for selected segment; Clear selection button to reset and show chart only; Everything from SimpleChart aggregation chart types etc; Automatic data grid generation for drill-down; Smooth expand collapse animation; Selected segment highlighting; Record count indicators; Export capabilities for both chart and data; Responsive layout adjustment; Sales dashboards with detail views; Performance metrics with record inspection; Category breakdowns with item lists; Time series with period details; Top N analysis with full rankings'
SET
  @TechnicalDesign_283393e6 = N'Composition over inheritance uses SimpleChart and DataGrid; State coordination manages selection between components; Data preservation keeps original records for drill-down; Progressive disclosure details only when needed; Wraps SimpleChart component for chart rendering; Uses DataGrid component for drill-down display; Manages selected segment state; Filters records based on selection; Handles expand collapse transitions'
SET
  @FunctionalRequirementsVector_283393e6 = N'[-0.03858004882931709,-0.02142954245209694,-0.03499199077486992,-0.05758140981197357,0.005677828565239906,0.02528705634176731,-0.014899525791406631,-0.002975091338157654,0.00706517742946744,0.04608071967959404,-0.017797961831092834,0.031255874782800674,0.01995997689664364,0.13992512226104736,0.03381218761205673,-0.051560744643211365,0.00696238549426198,0.03619828075170517,0.04512540623545647,-0.0035690446384251118,0.04616493731737137,-0.0225660502910614,-0.02651904709637165,0.011943609453737736,-0.021425297483801842,0.015964439138770103,0.0009106728830374777,0.0026428140699863434,0.00917078647762537,-0.095737986266613,0.008760107681155205,0.0004727634659502655,-0.012894783169031143,-0.011439232155680656,0.0000031564384244120447,-0.04159921407699585,-0.032564327120780945,-0.009236774407327175,-0.026527363806962967,-0.01288102101534605,-0.03962627053260803,-0.04547775164246559,0.053049247711896896,0.002585993381217122,0.026055769994854927,-0.011044717393815517,0.008553653955459595,0.01265118271112442,0.015245501883327961,-0.06701283901929855,-0.012137725949287415,-0.0013679213589057326,-0.09266835451126099,-0.04217146709561348,-0.003655939130112529,-0.04827556759119034,-0.016465868800878525,-0.011008345521986485,0.0547449067234993,-0.014492347836494446,-0.038133177906274796,0.013168582692742348,-0.019089143723249435,0.022029446437954903,0.024243559688329697,0.039193518459796906,0.029638461768627167,-0.06308859586715698,0.032796915620565414,0.02567160315811634,0.0638447254896164,-0.02610742300748825,0.007193267345428467,-0.04769152030348778,-0.02573779784142971,-0.03778111934661865,-0.05541805177927017,-0.03081132471561432,-0.011540262959897518,-0.008573677390813828,-0.05765222758054733,0.05394748970866203,-0.02353898249566555,-0.04652984067797661,0.05367622524499893,-0.0710393637418747,-0.029853016138076782,-0.01148750726133585,-0.013769173063337803,0.02100224792957306,0.0022295170929282904,-0.0045556495897471905,-0.06670352816581726,-0.007887479849159718,0.012768320739269257,-0.002474977169185877,0.020543662831187248,-0.017305532470345497,0.04153025150299072,0.027386371046304703,0.03097631223499775,0.02242332696914673,-0.004846900701522827,0.013646615669131279,0.051086537539958954,0.012302816845476627,0.03504474088549614,-0.061272867023944855,0.016979563981294632,-0.023536711931228638,0.017519880086183548,-0.003793576266616583,-0.026989826932549477,0.016909470781683922,0.07104750722646713,-0.011980706825852394,-0.011080039665102959,-0.02056608349084854,-0.016650818288326263,0.011783736757934093,0.02650865539908409,0.005524949636310339,-0.029446732252836227,0.007722770795226097,0.020412111654877663,0.026062965393066406,-0.07073011249303818,0.05208420380949974,0.007470882032066584,-0.04414083808660507,-0.042888838797807693,-0.01142860110849142,0.03790898248553276,0.04012427479028702,-0.010286345146596432,0.016156062483787537,0.02015157975256443,0.041629768908023834,-0.0160981435328722,-0.03738569840788841,-0.013749871402978897,0.01733408309519291,-0.034166667610406876,0.01021486334502697,0.004706684034317732,0.023917756974697113,0.009024027734994888,0.07688762992620468,0.003720874199643731,0.009742793627083302,-0.007137731648981571,-0.015309427864849567,-0.03347157686948776,0.012648005969822407,-0.04620671644806862,-0.022598600015044212,0.019684944301843643,0.027497604489326477,-0.02785405144095421,0.014821857213973999,0.01818990893661976,0.018158964812755585,0.014117388054728508,-0.02425416372716427,0.027939384803175926,-0.006650194991379976,0.007258761208504438,-0.011180789209902287,-0.12838217616081238,-0.05841794237494469,-0.04720870405435562,-0.07407420873641968,0.010932168923318386,0.01622740738093853,0.04825149103999138,0.007100089453160763,0.07438281923532486,-0.008771877735853195,-0.03160492703318596,0.006947997957468033,0.09188956767320633,-0.09796997904777527,-0.010182744823396206,-0.001666465774178505,0.06213624030351639,0.03071155771613121,-0.09883566945791245,-0.004355055280029774,-0.009915677830576897,0.015513937920331955,-0.05458918958902359,0.033069219440221786,-0.03744491934776306,0.030349574983119965,-0.010679724626243114,0.03954768180847168,0.0013082318473607302,-0.004980584606528282,0.0033389239106327295,-0.013200340792536736,-0.029265128076076508,0.0012606090167537332,0.020106114447116852,0.03848043084144592,-0.020548591390252113,-0.04724588617682457,-0.04736730083823204,-0.019997959956526756,0.023641474545001984,0.010449226945638657,0.0827963575720787,-0.00029246314079500735,-0.019180962815880775,-0.005167822353541851,-0.02030000276863575,0.015115573070943356,0.021424058824777603,-0.0014401900116354227,-0.041215840727090836,0.01460868027061224,-0.025542614981532097,-0.07561295479536057,0.04340061545372009,-0.02022307552397251,0.10406813770532608,0.043898843228816986,0.026605738326907158,0.021683819591999054,0.012417813763022423,0.054098520427942276,-0.002004841109737754,0.017113512381911278,0.0023097367957234383,-0.00755622424185276,0.02388830855488777,0.05927624925971031,-0.010784671641886234,-0.003598300740122795,-0.024228492751717567,-0.01277606375515461,0.02726639062166214,0.011923798359930515,-0.012351373210549355,-0.01396800484508276,-0.024436956271529198,-0.04281284287571907,-0.0527377650141716,0.01195412129163742,-0.012692135758697987,-0.029939962550997734,-0.001706493436358869,0.02364351786673069,0.009264451451599598,-0.005703260190784931,0.0019492881838232279,0.019851384684443474,-0.024832770228385925,0.022176623344421387,-0.007660212926566601,0.054621372371912,-0.028437862172722816,-0.000147986676893197,-0.03202641382813454,-0.026601070538163185,-0.02885943464934826,-0.029150135815143585,0.09319513291120529,-0.056579846888780594,-0.03543873876333237,0.01709286868572235,-0.002362200990319252,0.03284696117043495,0.033524129539728165,-0.005712289363145828,-0.029949145391583443,-0.010023125447332859,0.06698326021432877,-0.007002015132457018,-0.009166705422103405,0.020133432000875473,-0.009914116933941841,0.023452026769518852,-0.003023528028279543,0.016586128622293472,-0.005843322724103928,-0.03696143999695778,0.05496128648519516,0.0035688751377165318,0.109664686024189,-0.010705971159040928,0.022058479487895966,-0.02716069668531418,0.025346215814352036,-0.010335399769246578,-0.023172512650489807,0.008259213529527187,-0.042843300849199295,-0.01635013334453106,-0.03550833836197853,0.02277747355401516,-0.08531955629587173,-0.03484851121902466,0.022049861028790474,-0.012578477151691914,-0.026510601863265038,0.06367422640323639,0.017459530383348465,-0.018671341240406036,-0.001072534010745585,0.03542045131325722,0.0335032120347023,0.00007563320104964077,-0.005756649188697338,-0.0216000284999609,0.011652672663331032,0.043930698186159134,-0.01972614787518978,0.05117049813270569,-0.03444938734173775,0.004095645621418953,0.007907622493803501,-0.02159753628075123,-0.009552620351314545,-0.011639324016869068,-0.013787350617349148,-0.024019386619329453,-0.051990486681461334,-0.010272759944200516,0.0019439272582530975,-0.006266641430556774,-0.007119770627468824,-0.03495284914970398,-0.0036259584594517946,-0.0066059911623597145,0.017649557441473007,0.03822623938322067,-0.03401586040854454,0.006951426155865192,0.06674551218748093,-0.026122761890292168,-0.03139142692089081,0.03542539104819298,-0.014490648172795773,-0.0542730949819088,0.008123394101858139,-0.013942843303084373,0.1262611299753189,-0.010846964083611965,0.036456119269132614,0.0068537387996912,0.02427717298269272,0.01589050143957138,0.008214753121137619,-0.026178156957030296,0.03475027158856392,-0.0284693893045187,-0.0426364466547966,0.014265384525060654,-0.018242351710796356,-0.061219532042741776,0.03424065187573433,-0.015960074961185455,-0.034359924495220184,-0.006474098190665245,0.043625783175230026,0.0046891565434634686,-0.013845746405422688,0.053678520023822784,0.0214968491345644,-0.014943054877221584,0.0076601882465183735,0.014138099737465382,0.054596371948719025,0.021079830825328827,-0.01644475944340229,0.0220820102840662,0.007884278893470764,0.03297040984034538,0.021989820525050163,0.04486103355884552,-0.03368053212761879,-0.05384055897593498,0.039923835545778275,0.029776038601994514,0.12624922394752502,-0.015844693407416344,-0.032220400869846344,-0.003715036902576685,-0.06491199135780334,0.009149417281150818,-0.009249113500118256,-0.08687128126621246,0.03292923420667648,0.011260291561484337,0.0202603992074728,-0.008696322329342365,-0.04226426035165787,-0.005286317318677902,-0.029982302337884903,0.03433799371123314,0.019241608679294586,-0.1445159912109375,-0.004380698781460524,0.011068740859627724,0.02397775650024414,-0.011749940924346447,0.006574349012225866,0.02615748904645443,-0.04501953348517418,0.08876969665288925,-0.03298686444759369,-0.0045540244318544865,-0.013120930641889572,-0.022358303889632225,0.0078465286642313,0.05561994016170502,-0.022251546382904053,-0.0020600450225174427,0.034840088337659836,0.10417203605175018,0.04290863871574402,-0.0326041579246521,-0.01479165069758892,-0.005349987186491489,-0.027913013473153114,-0.030224859714508057,0.03570504114031792,-0.013852939009666443,-0.01025797426700592,0.05555250123143196,0.029326174408197403,-0.01307368278503418,0.008127665147185326,0.009327953681349754,-0.07364021241664886,-0.03544636815786362,0.02090437337756157,0.022254271432757378,-0.07309704273939133,-0.00028171358280815184,-0.055962443351745605,-0.0037540760822594166,0.03959067910909653,-0.011427357792854309,-0.0119866281747818,-0.01174092572182417,-0.00674044294282794,-0.01603206805884838,-0.04950074851512909,0.03767940029501915,0.018152741715312004,0.011996316723525524,0.03343812748789787,0.01982378214597702,0.01534105185419321,-0.017033955082297325,0.013942222110927105,-0.038264308124780655,0.014455990865826607,-0.014101427979767323,-0.008056869730353355,0.0019322842126712203,-0.037719715386629105,-0.020626584067940712,0.027466075494885445,-0.012675594538450241,0.07260961830615997,-0.02857021614909172,-0.022124916315078735,-0.021478313952684402,0.039945852011442184,0.007933346554636955,-0.009671586565673351,-0.009223910048604012,0.011411027051508427,-0.008882817812263966,0.005854249466210604,0.038527991622686386,0.00561786163598299,-0.02704303152859211,0.011239683255553246,0.005538662895560265,0.04924924671649933,-0.031322792172431946,-0.009894749149680138,-0.014048532582819462,0.015876423567533493,-0.017484068870544434,-0.021771207451820374,-0.00650520296767354,-0.002960114972665906,0.0065290722995996475,-0.02225470542907715,0.07466015219688416,0.03219780698418617,0.0692269429564476,-0.08788533508777618,0.04777700453996658,-0.03861069679260254,-0.03583618998527527,-0.017320765182375908,0.008536305278539658,-0.032508257776498795,-0.012156219221651554,0.0006348281749524176,0.008817934431135654,0.03339351341128349,0.00655771279707551,-0.0020521015394479036,0.027774251997470856,-0.0036104328464716673,-0.02777629718184471,0.019963083788752556,-0.0758635625243187,-0.0027585183270275593,0.01932513527572155,-0.0455610454082489,0.0016704438021406531,0.04218949377536774,-0.006098615936934948,-0.034492701292037964,0.022973056882619858,-0.008629193529486656,-0.012709117494523525,0.05243867635726929,0.012796255759894848,-0.017483185976743698,-0.04019755497574806,-0.037537869065999985,0.041214294731616974,-0.0004445854283403605,-0.05107438936829567,-0.03157901391386986,0.0003041602612938732,-0.006760855671018362,0.07508017122745514,0.09441803395748138,0.012327481061220169,0.022919613867998123,0.0019079725025221705,-0.06514764577150345,-0.05729545280337334,0.051912952214479446,-0.07430674880743027,0.00856701284646988,0.01981690712273121,0.020285816863179207,-0.007310054264962673,0.029958320781588554,0.0142605509608984,0.00893603079020977,-0.02294301986694336,0.028629710897803307,0.002389056608080864,0.00969015434384346,-8.29126418018457e-33,-0.012452934868633747,0.01461394876241684,-0.03348440304398537,-0.016001809388399124,-0.0009821996791288257,-0.02684960328042507,-0.0039055354427546263,-0.027462797239422798,-0.016895344480872154,0.011721743270754814,-0.016801556572318077,0.032792557030916214,0.008396834135055542,0.0003398558765184134,0.03764469176530838,-0.015067100524902344,0.05213011056184769,-0.016796894371509552,0.0075494833290576935,-0.005356041248887777,-0.03472334146499634,0.013170993886888027,-0.02600621059536934,-0.16636298596858978,-0.01932653598487377,-0.003603114513680339,-0.00938207097351551,-0.009629460982978344,0.03932775557041168,-0.018905336037278175,0.030658578500151634,-0.006773821543902159,0.009702243842184544,-0.026967596262693405,-0.04222743585705757,-0.0024067796766757965,-0.05852208286523819,-0.02980559505522251,0.01388536300510168,0.011266433633863926,0.015561898238956928,0.034700728952884674,0.043671321123838425,-0.010581386275589466,0.01819777488708496,-0.02800210565328598,-0.00630315812304616,-0.001536129740998149,0.029124736785888672,-0.02877090312540531,-0.0009115466382354498,0.016467642039060593,-0.02314397133886814,0.018014827743172646,-0.017737194895744324,0.0995398536324501,0.02241833321750164,-0.018774358555674553,-0.0657591000199318,0.03796667233109474,0.04934164881706238,-0.062157128006219864,0.01038336381316185,0.028777608647942543,0.05318436026573181,-0.022903624922037125,-0.003189739538356662,0.05603714659810066,-0.048842739313840866,0.04128270223736763,-0.01110805943608284,0.042355477809906006,0.02070533111691475,-0.05217106267809868,-0.04557660594582558,-0.03221713751554489,-0.011682724580168724,-0.004089766647666693,-0.0011513708159327507,-0.018003109842538834,-0.03820955753326416,0.009454882703721523,-0.08412182331085205,-0.028282906860113144,0.07126961648464203,0.05368264392018318,-0.006805285345762968,-0.02988598681986332,0.05744247883558273,0.008178516291081905,-0.00211484101600945,0.07427667826414108,-0.06231076642870903,-0.01578582637012005,-0.06662487983703613,0.022347576916217804,0.052620865404605865,-0.01071875263005495,0.02054009959101677,-0.07168596982955933,-0.016470693051815033,0.03883478045463562,0.008998826146125793,0.04314291477203369,-0.0030952822417020798,-0.013362491503357887,-0.00013858193415217102,0.021330153569579124,-0.044024646282196045,-0.013338266871869564,0.05618906766176224,-0.019535919651389122,-0.008504804223775864,-0.05922551825642586,0.014142094179987907,-0.035612232983112335,0.010044120252132416,0.01626029796898365,0.04277041554450989,-0.02512274496257305,0.020936740562319756,0.008509181439876556,-0.054727889597415924,-0.028527911752462387,0.06919871270656586,-0.05636608228087425,0.04407695680856705,-0.049085356295108795,0.0010407714871689677,0.0041857813484966755,-0.016972776502370834,-0.047788720577955246,3.8822130932203436e-7,0.021032733842730522,0.00010265321907354519,0.0011689646635204554,0.026915809139609337,0.00771025475114584,0.007124814670532942,-0.027162065729498863,0.002337731420993805,-0.030687827616930008,0.014283787459135056,0.04359297454357147,-0.01956760138273239,0.0030153703410178423,0.08666527271270752,-0.03181004151701927,-0.04369646683335304,0.03834303840994835,-0.07834361493587494,0.0006754365167580545,0.02779960073530674,0.11122360825538635,0.02225355990231037,0.02017023414373398,0.023594800382852554,0.04850823059678078,-0.05336794629693031,-0.04259587079286575,-0.011992272920906544,0.010526973754167557,-0.041673287749290466,-0.029448440298438072,0.06238919496536255,-0.014351805672049522,-0.06029730290174484,-0.015410303138196468,0.028793178498744965,0.061611514538526535,-0.029086126014590263,-0.009514303877949715,0.004187643062323332,-0.004446373786777258,-0.08045604825019836,0.03788569197058678,-0.020104147493839264,0.011588233523070812,-0.03692140430212021,-0.010002839379012585,0.07868484407663345,0.010452672839164734,0.03686518967151642,0.025809835642576218,0.014975389465689659,-0.018408268690109253,-0.042028751224279404,-0.002598987426608801,0.01660587266087532,-0.026739174500107765,0.024226075038313866,0.013944623991847038,0.06643491983413696,-0.02686752751469612,-0.025865284726023674,0.0018861738499253988,0.12620927393436432,-0.03005168028175831,0.025165315717458725,0.005290102679282427,4.15900186896495e-34,0.03532911092042923,-0.03295103460550308,0.01966690644621849,-0.0029981613624840975,-0.005557548720389605,-0.021401867270469666,0.020733898505568504,0.00001750355113472324,0.02469775266945362,0.004660066682845354,-0.00159757724031806]'
SET
  @TechnicalDesignVector_283393e6 = N'[-0.06469963490962982,0.02255845069885254,-0.036499179899692535,-0.043933987617492676,-0.025980524718761444,-0.02199540287256241,0.012695910409092903,0.0300444345921278,-0.05193580687046051,0.014609800651669502,-0.01597079448401928,0.002855138387531042,0.029363352805376053,0.033947478979825974,-0.012387589551508427,-0.07845048606395721,0.018055792897939682,0.015993116423487663,-0.07087348401546478,-0.0018710261210799217,0.03606509044766426,-0.03081667236983776,0.003051081905141473,0.009193929843604565,-0.04415089637041092,-0.0034117840696126223,-0.04503599554300308,0.002152403350919485,0.014946001581847668,-0.05115974321961403,0.00977161806076765,0.036793213337659836,-0.015281522646546364,-0.02655975893139839,0.0000017675595245236764,-0.029303323477506638,-0.043883271515369415,0.024124030023813248,0.011106553487479687,0.01947433315217495,-0.03606705367565155,-0.05522147938609123,0.041554562747478485,-0.00392062496393919,0.02658051811158657,-0.06261356920003891,0.00871668104082346,0.010147985070943832,0.057299837470054626,-0.07962946593761444,0.023770593106746674,0.01029980555176735,-0.02084709331393242,-0.002411062130704522,0.0007802523905411363,-0.0173316802829504,0.0014336517779156566,0.06063253805041313,0.08825807273387909,-0.007375828456133604,-0.044660404324531555,-0.0020407692063599825,-0.038908571004867554,-0.027658095583319664,0.017833419144153595,-0.001120890025049448,0.10373442620038986,-0.024066809564828873,0.046770818531513214,0.025349216535687447,0.1138906255364418,-0.012926919385790825,0.04746483638882637,-0.01249052956700325,-0.016564734280109406,-0.0008892925688996911,-0.02672172710299492,-0.017606107518076897,-0.03217209875583649,0.009504435583949089,-0.016416199505329132,0.0060219173319637775,-0.021470850333571434,-0.03730008751153946,0.027902457863092422,-0.03467850387096405,-0.01546021644026041,-0.0028352222871035337,-0.04126814007759094,-0.020032720640301704,0.06297624856233597,-0.029723715037107468,-0.016386229544878006,0.03397798538208008,-0.03807578235864639,0.01940239407122135,-0.018065331503748894,-0.06475350260734558,0.029566358774900436,0.08321394771337509,0.056150972843170166,0.04063055291771889,0.07785364240407944,0.03440912812948227,0.07272735983133316,0.031497661024332047,-0.029076939448714256,-0.06065700948238373,0.00475864065811038,-0.033384401351213455,-0.030399706214666367,-0.018661992624402046,-0.032461393624544144,0.04784926772117615,0.06104879453778267,0.014951573684811592,-0.03626883774995804,-0.03450290858745575,-0.017346300184726715,0.03685222193598747,0.09185611456632614,-0.02313578687608242,-0.001828495878726244,0.04118132218718529,0.0057622822932899,0.05074543505907059,0.004805966280400753,-0.04521584138274193,0.01908988319337368,-0.002784521784633398,-0.01963645964860916,-0.014122574590146542,0.03899763524532318,0.02523571439087391,-0.04502216726541519,0.0294023584574461,-0.016022633761167526,0.027435576543211937,-0.030966728925704956,-0.04052495211362839,0.023344915360212326,0.0073299044743180275,-0.00612974027171731,0.015466628596186638,0.020238127559423447,-0.020612576976418495,0.025359854102134705,0.02168830670416355,0.04268353804945946,0.014284158125519753,0.026200564578175545,-0.003954450134187937,-0.030972164124250412,0.02557382918894291,-0.06041106954216957,0.042395707219839096,0.01753765158355236,0.03438921645283699,0.006340865511447191,-0.038398224860429764,0.00937147531658411,0.015565864741802216,0.08440374583005905,-0.020833401009440422,0.012524113059043884,0.00046626210678368807,-0.02161078155040741,0.013760223053395748,-0.10920795053243637,-0.046461861580610275,-0.0026862574741244316,-0.042409416288137436,-0.0358084999024868,-0.012160942889750004,0.053017109632492065,-0.012257911264896393,0.08628587424755096,0.036042846739292145,-0.07328172773122787,0.03550504893064499,0.04172736778855324,-0.07281236350536346,0.01718010939657688,0.03964605554938316,0.0695219337940216,-0.04351456090807915,-0.1084325760602951,-0.017178120091557503,-0.020566808059811592,-0.0062911659479141235,-0.0006737078656442463,0.0005035322392359376,0.02700018510222435,-0.0016308844787999988,0.012293709442019463,0.02680385857820511,-0.014150550588965416,0.019418183714151382,-0.0016162178944796324,0.007060214877128601,0.0014729563845321536,0.01401603315025568,0.008248669095337391,0.026213161647319794,-0.026623772457242012,-0.061208099126815796,-0.041896406561136246,0.0007259096601046622,0.04025106504559517,-0.022463729605078697,0.038617637008428574,-0.004597091116011143,0.007398699410259724,-0.007518508937209845,-0.008402997627854347,0.03109937533736229,0.05058776214718819,0.010645062662661076,-0.060437239706516266,-0.03207571059465408,-0.038833875209093094,-0.027031250298023224,0.0563201904296875,-0.008111312054097652,0.09834593534469604,0.031173966825008392,0.027651336044073105,0.0010079300263896585,0.0009228727431036532,-0.0066137369722127914,-0.0110971350222826,-0.014682131819427013,0.01706497184932232,0.04504358023405075,-0.045174241065979004,0.02855980396270752,-0.030971704050898552,0.029527584090828896,-0.03360510617494583,-0.06596259772777557,0.021876845508813858,-0.058909401297569275,-0.038840558379888535,-0.021764514967799187,-0.014644686132669449,-0.06642014533281326,-0.03128114342689514,-0.0017591346986591816,0.007134103681892157,-0.03666820004582405,-0.02874639257788658,0.0249146968126297,-0.0016957232728600502,-0.029510674998164177,-0.02632574923336506,0.023176895454525948,0.02060023322701454,0.03604065626859665,-0.0294870063662529,0.054275404661893845,0.01439718622714281,-0.023748507723212242,-0.009273143485188484,-0.06323990970849991,-0.01167116966098547,0.014755375683307648,0.07637862116098404,0.027074377983808517,0.008645767346024513,0.01629369705915451,0.03774992749094963,0.011181538924574852,0.022968312725424767,0.012331156991422176,0.009245937690138817,-0.009199479594826698,0.0611853264272213,-0.013698617927730083,-0.019275851547718048,0.015525227412581444,-0.023987755179405212,0.01440909132361412,0.04332062229514122,0.014961333014070988,0.010381585918366909,-0.019444461911916733,0.01046452485024929,-0.04699092358350754,0.018446428701281548,-0.029302991926670074,-0.012070898897945881,0.005708079319447279,0.002444251673296094,-0.035323597490787506,-0.018115336075425148,0.02042263187468052,-0.04819357767701149,0.023266058415174484,-0.09382724016904831,0.04399949312210083,-0.026126496493816376,0.0006063097971491516,0.015126324258744717,-0.010003275237977505,-0.015796266496181488,0.0964210033416748,0.009853248484432697,0.03707258030772209,-0.01456454861909151,0.03575924411416054,0.021590445190668106,-0.009089133702218533,0.018729377537965775,-0.03515860438346863,0.0023051067255437374,0.042904216796159744,0.014160570688545704,-0.0833335742354393,-0.012833736836910248,0.021718643605709076,-0.025974247604608536,-0.005612175911664963,0.010814827866852283,-0.007186298258602619,-0.046927884221076965,0.01212918572127819,-0.019716041162610054,-0.033462394028902054,0.03254981338977814,-0.02731509692966938,-0.022113803774118423,0.015107464045286179,-0.02406129613518715,-0.007578781805932522,0.07280053943395615,0.029113957658410072,-0.07146256417036057,-0.033462412655353546,0.00860036164522171,-0.04463040828704834,-0.02457159012556076,-0.020677722990512848,-0.021594399586319923,0.0892043337225914,0.04293622821569443,0.0301369596272707,0.10781987756490707,-0.007357117719948292,-0.00614072335883975,0.008522436022758484,0.012274914421141148,0.01931176707148552,0.001330602914094925,-0.0027384816203266382,-0.0021888315677642822,0.04895985499024391,-0.04619274660944939,0.01535092107951641,-0.023182056844234467,-0.06373517215251923,0.012216509319841862,0.0377955362200737,0.011335853487253189,-0.013829977251589298,0.04488906264305115,-0.009521323256194592,0.019996561110019684,0.04707373306155205,-0.009221617132425308,-0.04845086485147476,0.02608264982700348,-0.013258961960673332,0.030551817268133163,-0.005757117178291082,-0.010833125561475754,-0.02604748122394085,0.0046133017167449,0.024890033528208733,0.0015219871420413256,0.022972015663981438,0.0171978659927845,-0.08360299468040466,0.0921119824051857,0.013715475797653198,0.07018298655748367,-0.018689502030611038,-0.019056789577007294,0.02003997378051281,-0.05115737393498421,0.011196368373930454,-0.005417039152234793,-0.0520540326833725,0.04816821962594986,-0.057466987520456314,0.03505989536643028,0.013083118945360184,-0.07680989056825638,-0.004863787908107042,0.00101576279848814,-0.011038142256438732,-0.004684886429458857,-0.04523536562919617,0.002292412333190441,-0.013055441901087761,0.047344669699668884,-0.048874594271183014,-0.013291270472109318,0.05698862299323082,0.013492530211806297,0.038319651037454605,0.027407551184296608,-0.0868242084980011,-0.03781510889530182,-0.06990822404623032,0.02473139762878418,0.04603971913456917,0.00710127130150795,-0.013919591903686523,0.01852521486580372,0.09703093022108078,0.027765724807977676,-0.050930120050907135,0.03875039517879486,-0.03194902837276459,-0.04546281695365906,-0.019000276923179626,-0.006452116183936596,0.017416520044207573,-0.009382709860801697,0.03542446717619896,0.015569055452942848,-0.01832265965640545,0.014053571969270706,-0.014359303750097752,-0.024947909638285637,0.01000233180820942,0.02425548993051052,0.023125942796468735,-0.023474209010601044,0.014707043766975403,0.018374333158135414,0.013790873810648918,0.07359422743320465,0.011080468073487282,-0.0003430333745200187,0.02035469189286232,-0.01593618467450142,0.022450532764196396,-0.043778110295534134,-0.004883410409092903,-0.003365884767845273,0.04381965100765228,-0.015205956064164639,0.021406635642051697,0.014245356433093548,-0.04791774973273277,-0.06612084060907364,-0.023495834320783615,-0.037385791540145874,-0.02795785665512085,0.00409304816275835,0.02856958471238613,-0.002472812542691827,-0.026450078934431076,-0.03690538555383682,0.017650501802563667,0.048825204372406006,0.02518024668097496,-0.03952004387974739,-0.023142021149396896,-0.05137813091278076,-0.0015759316738694906,-0.01805717870593071,-0.0048446026630699635,0.043257031589746475,0.026969274505972862,-0.049033571034669876,0.01457513589411974,0.008110894821584225,-0.025804301723837852,-0.003018386894837022,-0.05572950839996338,0.022198429331183434,-0.029290731996297836,0.04829719662666321,0.020597785711288452,-0.016262976452708244,-0.014859238639473915,-0.013096452690660954,0.011923209764063358,-0.014091112650930882,-0.013977577909827232,0.0009658121853135526,0.04558809474110603,0.09302622824907303,0.03473958000540733,-0.057669080793857574,0.07843603938817978,0.007613787427544594,-0.052937012165784836,-0.04961450397968292,0.017864694818854332,-0.0002558272972237319,0.009609734639525414,0.011660146526992321,0.02150534652173519,0.003667830489575863,0.04145406559109688,0.0009251887095160782,0.028447797521948814,0.004216336645185947,-0.03361527994275093,-0.0021587416995316744,0.0002311970165465027,0.008011375553905964,0.027656633406877518,-0.036512210965156555,0.015446765348315239,0.04297151789069176,-0.04263879358768463,0.009186132811009884,0.020180970430374146,0.005767711903899908,-0.04669756442308426,0.02377990446984768,0.027592577040195465,0.0023390541318804026,0.006618058774620295,0.004684198182076216,0.03714681789278984,0.04498184099793434,-0.02660124935209751,-0.04492294043302536,0.025748658925294876,-0.015400583855807781,0.05576396733522415,0.06216207891702652,0.028997570276260376,0.014652205631136894,-0.053600285202264786,-0.07153809815645218,-0.0012853160733357072,0.04458746314048767,-0.014691969379782677,0.0453827902674675,-0.024723472073674202,0.034130774438381195,-0.05555151030421257,0.048897355794906616,-0.0007910816930234432,0.02879304625093937,-0.08465851843357086,0.011918006464838982,-0.016216713935136795,0.015694599598646164,-5.776708378358951e-33,-0.022610412910580635,-0.01740441657602787,-0.041538141667842865,-0.00026480533415451646,-0.03834313526749611,-0.04068305343389511,-0.019411513581871986,-0.03613639622926712,0.008757088333368301,0.00368915474973619,-0.014319860376417637,-0.0023244216572493315,-0.0030725642573088408,-0.0016930430429056287,-0.019213370978832245,-0.018878644332289696,0.03465897589921951,0.0019108908018097281,-0.012973646633327007,0.04214403033256531,-0.02478981204330921,0.034006647765636444,-0.020761169493198395,-0.08693835139274597,-0.05027909576892853,0.026556668803095818,0.02458934299647808,0.014338716864585876,-0.03863225504755974,-0.004731840919703245,0.01926378719508648,-0.02327052317559719,0.00266660051420331,0.03293515369296074,-0.029737720265984535,0.008979246020317078,-0.09192559868097305,-0.018689898774027824,0.000351676600985229,0.019053302705287933,0.04195643216371536,0.02475784718990326,0.0329069048166275,0.0274975448846817,0.03356774523854256,-0.053856249898672104,-0.01042353268712759,0.010808708146214485,-0.02710975706577301,-0.08160478621721268,-0.027052301913499832,0.0169596616178751,-0.019796086475253105,0.012517881579697132,0.027183152735233307,0.07287903875112534,0.02776399254798889,0.0054235695861279964,-0.03176983445882797,0.038166120648384094,-0.0037257494404911995,-0.047810908406972885,0.005419452209025621,0.042345672845840454,0.05856935679912567,-0.0035397401079535484,-0.02387404441833496,0.05432003363966942,-0.06989742815494537,-0.005070540122687817,-0.00854652002453804,0.055937737226486206,0.01747933216392994,-0.07133492082357407,-0.005268812645226717,-0.04352478310465813,-0.0074491496197879314,-0.013186005875468254,-0.02952592819929123,-0.017002586275339127,-0.03205747529864311,0.033031344413757324,-0.014384920708835125,-0.026439569890499115,0.01973535679280758,0.031743187457323074,0.0232558511197567,0.007183966692537069,0.003452455624938011,-0.013148760423064232,-0.032960519194602966,0.07437680661678314,-0.05335162207484245,0.011374525725841522,-0.06305187940597534,-0.0172404982149601,0.08119598031044006,0.0187078807502985,-0.011333918198943138,-0.052760086953639984,0.01824803836643696,0.010376229882240295,0.003389673074707389,0.029372183606028557,-0.008073084056377411,0.00847110990434885,0.0009036356932483613,0.006237581372261047,-0.059274908155202866,-0.002154372399672866,0.02453038841485977,-0.03402748703956604,0.020908920094370842,-0.041409097611904144,0.020162280648946762,-0.020170142874121666,0.01852989010512829,-0.04969450831413269,0.07467367500066757,0.009572059847414494,-0.032270435243844986,-0.012164426036179066,-0.05205726623535156,-0.01329632569104433,0.07898546755313873,-0.01881503127515316,-0.013505242764949799,-0.01679210364818573,-0.01157455611974001,-0.020044242963194847,-0.014702076092362404,0.00978076457977295,2.5448392193538893e-7,0.01904480531811714,0.039653096348047256,-0.03847036510705948,0.03420225530862808,0.05431589484214783,-0.09287133067846298,-0.05125610530376434,-0.03971734642982483,-0.024347292259335518,-0.03649342432618141,0.051390714943408966,-0.02503298781812191,0.05722115933895111,0.06124088540673256,-0.023975830525159836,-0.005469748750329018,0.03847726434469223,-0.0685209259390831,-0.048000507056713104,0.00985692162066698,0.09222634881734848,0.0019136349437758327,0.022458676248788834,0.00918769370764494,-0.0005465911817736924,0.05567256361246109,0.02332456223666668,0.038925062865018845,0.0797489732503891,-0.0314788743853569,-0.011476006358861923,0.017000120133161545,-0.0014935786603018641,0.003217926248908043,0.004466678015887737,0.008404071442782879,0.0017554601654410362,-0.018970755860209465,-0.017445839941501617,0.09248411655426025,0.05211642384529114,-0.040388643741607666,-0.015716809779405594,0.029106682166457176,0.04089498519897461,-0.06346786022186279,0.00034652926842682064,0.05992220342159271,-0.038095153868198395,0.024713151156902313,-0.008880967274308205,0.04213157296180725,-0.01897360384464264,-0.012516089715063572,-0.014687287621200085,0.006385840941220522,0.005475635174661875,0.03294719383120537,0.0199214406311512,0.0146403256803751,-0.02365599013864994,-0.0712868869304657,0.013054710812866688,0.07712511718273163,-0.007916233502328396,-0.005990867968648672,-0.05322181433439255,3.692157501778244e-34,0.027862196788191795,-0.06818090379238129,0.00878884457051754,0.007494012359529734,0.01664794236421585,-0.033531561493873596,0.08031057566404343,-0.0023998888209462166,0.00579862343147397,-0.020280607044696808,-0.006372176110744476]'
SET
  @HasCustomProps_283393e6 = 0
SET
  @HasCustomEvents_283393e6 = 0
SET
  @RequiresData_283393e6 = 0
SET
  @DependencyCount_283393e6 = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_283393e6 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_283393e6 = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_283393e6 = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_283393e6,
  @Namespace = @Namespace_283393e6,
  @Name = @Name_283393e6,
  @Version = @Version_283393e6,
  @VersionSequence = @VersionSequence_283393e6,
  @Title = @Title_283393e6,
  @Description = @Description_283393e6,
  @Type = @Type_283393e6,
  @Status = @Status_283393e6,
  @DeveloperName = @DeveloperName_283393e6,
  @DeveloperEmail = @DeveloperEmail_283393e6,
  @DeveloperOrganization = @DeveloperOrganization_283393e6,
  @SourceRegistryID = @SourceRegistryID_283393e6,
  @ReplicatedAt = @ReplicatedAt_283393e6,
  @LastSyncedAt = @LastSyncedAt_283393e6,
  @Specification = @Specification_283393e6,
  @FunctionalRequirements = @FunctionalRequirements_283393e6,
  @TechnicalDesign = @TechnicalDesign_283393e6,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_283393e6,
  @TechnicalDesignVector = @TechnicalDesignVector_283393e6,
  @HasCustomProps = @HasCustomProps_283393e6,
  @HasCustomEvents = @HasCustomEvents_283393e6,
  @RequiresData = @RequiresData_283393e6,
  @DependencyCount = @DependencyCount_283393e6,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_283393e6,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_283393e6,
  @HasRequiredCustomProps = @HasRequiredCustomProps_283393e6;

-- Save MJ: Components (core SP call only)
DECLARE @ID_dbdfdaae UNIQUEIDENTIFIER,
@Namespace_dbdfdaae NVARCHAR(MAX),
@Name_dbdfdaae NVARCHAR(500),
@Version_dbdfdaae NVARCHAR(50),
@VersionSequence_dbdfdaae INT,
@Title_dbdfdaae NVARCHAR(1000),
@Description_dbdfdaae NVARCHAR(MAX),
@Type_dbdfdaae NVARCHAR(255),
@Status_dbdfdaae NVARCHAR(50),
@DeveloperName_dbdfdaae NVARCHAR(255),
@DeveloperEmail_dbdfdaae NVARCHAR(255),
@DeveloperOrganization_dbdfdaae NVARCHAR(255),
@SourceRegistryID_dbdfdaae UNIQUEIDENTIFIER,
@ReplicatedAt_dbdfdaae DATETIMEOFFSET,
@LastSyncedAt_dbdfdaae DATETIMEOFFSET,
@Specification_dbdfdaae NVARCHAR(MAX),
@FunctionalRequirements_dbdfdaae NVARCHAR(MAX),
@TechnicalDesign_dbdfdaae NVARCHAR(MAX),
@FunctionalRequirementsVector_dbdfdaae NVARCHAR(MAX),
@TechnicalDesignVector_dbdfdaae NVARCHAR(MAX),
@HasCustomProps_dbdfdaae BIT,
@HasCustomEvents_dbdfdaae BIT,
@RequiresData_dbdfdaae BIT,
@DependencyCount_dbdfdaae INT,
@TechnicalDesignVectorEmbeddingModelID_dbdfdaae NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_dbdfdaae NVARCHAR(MAX),
@HasRequiredCustomProps_dbdfdaae BIT
SET
  @ID_dbdfdaae = '2C0A6E59-3B78-43B3-BF84-446AA9280E86'
SET
  @Namespace_dbdfdaae = N'Generic/Navigation'
SET
  @Name_dbdfdaae = N'OpenRecordButton'
SET
  @Version_dbdfdaae = N'1.0.0'
SET
  @VersionSequence_dbdfdaae = 1
SET
  @Title_dbdfdaae = N'Open Record Button'
SET
  @Description_dbdfdaae = N'A simple button component that intelligently opens entity records using metadata to determine primary keys'
SET
  @Type_dbdfdaae = N'Navigation'
SET
  @Status_dbdfdaae = N'Published'
SET
  @Specification_dbdfdaae = N'{"name":"OpenRecordButton","title":"Open Record Button","description":"A simple button component that intelligently opens entity records using metadata to determine primary keys","type":"navigation","location":"embedded","functionalRequirements":"Button that opens entity records using metadata-determined primary keys. Requires only entity name and record object. Auto-detects single/composite primary keys from metadata, extracts values from record. Configurable text, style, size. Uses: grid row actions, record cards, drill-down navigation, dashboard quick links.","technicalDesign":"Looks up entity in utilities.md.Entities → finds primary key fields → extracts values from record → calls OpenEntityRecord with field/value pairs. Handles single and composite keys automatically. Minimal props: just entityName and record. Error handling for missing metadata or key values.","dataRequirements":{"mode":"props","description":"Receives record data through props, uses metadata for key information"},"properties":[{"name":"record","type":"Record<string, any>","description":"The entity record to open (must contain primary key fields)","required":true},{"name":"entityName","type":"string","description":"Name of the entity (used to look up metadata)","required":true},{"name":"text","type":"string","description":"Button text","required":false,"defaultValue":"Open Record"},{"name":"variant","type":"''primary'' | ''default'' | ''text'' | ''link''","description":"Button style variant","required":false,"defaultValue":"default","possibleValues":["primary","default","text","link"]},{"name":"size","type":"''small'' | ''medium'' | ''large''","description":"Button size","required":false,"defaultValue":"medium","possibleValues":["small","medium","large"]},{"name":"icon","type":"string","description":"Icon to show (emoji or unicode)","required":false,"defaultValue":"📂"},{"name":"showIcon","type":"boolean","description":"Whether to show the icon","required":false,"defaultValue":true},{"name":"fullWidth","type":"boolean","description":"Whether button takes full width","required":false,"defaultValue":false}],"events":[{"name":"recordOpened","description":"Fired after record is successfully opened","parameters":[{"name":"record","type":"Record<string, any>","description":"The opened record"},{"name":"entityName","type":"string","description":"Entity name"},{"name":"primaryKeys","type":"Array<{ FieldName: string; Value: any }>","description":"Primary key field/value pairs used to open"}]}],"dependencies":[],"code":"function OpenRecordButton({\n  record,\n  entityName,\n  text = ''Open Record'',\n  variant = ''default'',\n  size = ''medium'',\n  icon,\n  showIcon = false,\n  fullWidth = false,\n  onRecordOpened,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  // State for button interaction\n  const [isHovered, setIsHovered] = React.useState(false);\n  const [primaryKeyFields, setPrimaryKeyFields] = React.useState([]);\n  const [entityInfo, setEntityInfo] = React.useState(null);\n  \n  // Load entity metadata and determine primary key fields\n  React.useEffect(() => {\n    if (!entityName || !utilities?.md?.Entities) {\n      if (!entityName) console.error(''Entity name not provided'');\n      if (!utilities?.md?.Entities) console.error(''Entity metadata not loaded.'');\n      return;\n    }\n    \n    // Find the entity in metadata\n    const entity = utilities.md.Entities.find(e => e.Name === entityName);\n    if (entity) {\n      setEntityInfo(entity);\n      \n      // Get primary key fields from the entity object\n      // The entity has a PrimaryKeys property that returns an array of primary key fields\n      const keyFields = [];\n      \n      if (entity.PrimaryKeys && entity.PrimaryKeys.length > 0) {\n        // Use the PrimaryKeys property from the entity\n        entity.PrimaryKeys.forEach(field => {\n          keyFields.push({\n            FieldName: field.Name,\n            DisplayName: field.DisplayName || field.Name\n          });\n        });\n      } else if (entity.FirstPrimaryKey) {\n        // Fallback to FirstPrimaryKey if available\n        keyFields.push({\n          FieldName: entity.FirstPrimaryKey.Name,\n          DisplayName: entity.FirstPrimaryKey.DisplayName || entity.FirstPrimaryKey.Name\n        });\n      } else {\n        // Final fallback to ID field\n        keyFields.push({\n          FieldName: ''ID'',\n          DisplayName: ''ID''\n        });\n      }\n      \n      setPrimaryKeyFields(keyFields);\n    }\n  }, [entityName, utilities]);\n  \n  // Check if we can open the record\n  const canOpen = React.useMemo(() => {\n    if (!record || !entityName || !callbacks?.OpenEntityRecord) return false;\n    if (primaryKeyFields.length === 0) return false;\n    \n    // Check that all primary key fields have values\n    for (const keyField of primaryKeyFields) {\n      if (!record[keyField.FieldName]) {\n        return false;\n      }\n    }\n    \n    return true;\n  }, [record, entityName, callbacks, primaryKeyFields]);\n  \n  // Handle button click\n  const handleClick = () => {\n    if (!canOpen) return;\n    \n    try {\n      // Build the key-value pairs for OpenEntityRecord\n      const keyValues = primaryKeyFields.map(keyField => ({\n        FieldName: keyField.FieldName,\n        Value: record[keyField.FieldName]\n      }));\n      \n      // Use MJ''s OpenEntityRecord callback with the primary key fields\n      callbacks.OpenEntityRecord(entityName, keyValues);\n      \n      // Fire event with details\n      if (onRecordOpened) {\n        onRecordOpened({ \n          record, \n          entityName,\n          primaryKeys: keyValues\n        });\n      }\n      \n      // Log opening action\n      console.log(`Opening $' + '{entityName}`);\n    } catch (err) {\n      console.error(''[OpenRecordButton] Error opening record:'', err);\n    }\n  };\n  \n  // Button styles based on variant and size\n  const getButtonStyles = () => {\n    const baseStyles = {\n      display: ''inline-flex'',\n      alignItems: ''center'',\n      justifyContent: ''center'',\n      gap: ''6px'',\n      border: ''none'',\n      borderRadius: ''4px'',\n      cursor: canOpen ? ''pointer'' : ''not-allowed'',\n      transition: ''all 0.3s ease'',\n      fontFamily: ''inherit'',\n      width: fullWidth ? ''100%'' : ''auto'',\n      opacity: canOpen ? 1 : 0.5\n    };\n    \n    // Size styles\n    const sizeStyles = {\n      small: {\n        padding: ''4px 8px'',\n        fontSize: ''12px''\n      },\n      medium: {\n        padding: ''6px 12px'',\n        fontSize: ''14px''\n      },\n      large: {\n        padding: ''8px 16px'',\n        fontSize: ''16px''\n      }\n    };\n    \n    // Variant styles\n    const variantStyles = {\n      primary: {\n        backgroundColor: ''#1890ff'',\n        color: ''#fff'',\n        boxShadow: ''0 2px 4px rgba(0,0,0,0.1)''\n      },\n      default: {\n        backgroundColor: ''#f5f5f5'',\n        color: ''#333'',\n        border: ''1px solid #d9d9d9''\n      },\n      text: {\n        backgroundColor: ''transparent'',\n        color: ''#1890ff'',\n        padding: ''2px 4px''\n      },\n      link: {\n        backgroundColor: ''transparent'',\n        color: ''#1890ff'',\n        textDecoration: ''underline'',\n        padding: ''0''\n      }\n    };\n    \n    return {\n      ...baseStyles,\n      ...sizeStyles[size],\n      ...variantStyles[variant]\n    };\n  };\n  \n  // Hover styles\n  const getHoverStyles = () => {\n    if (!canOpen || !isHovered) return {};\n    \n    const hoverStyles = {\n      primary: {\n        backgroundColor: ''#40a9ff''\n      },\n      default: {\n        borderColor: ''#40a9ff'',\n        color: ''#40a9ff''\n      },\n      text: {\n        backgroundColor: ''#f0f5ff''\n      },\n      link: {\n        color: ''#40a9ff''\n      }\n    };\n    \n    return hoverStyles[variant] || {};\n  };\n  \n  // Combined styles\n  const buttonStyles = {\n    ...getButtonStyles(),\n    ...getHoverStyles()\n  };\n  \n  // Tooltip text\n  const getTooltipText = () => {\n    if (!record) return ''No record selected'';\n    if (!entityName) return ''Entity name not provided'';\n    if (!entityInfo) return `Entity ''$' + '{entityName}'' not found in metadata`;\n    if (primaryKeyFields.length === 0) return ''No primary key fields found'';\n    \n    // Check for missing key values\n    for (const keyField of primaryKeyFields) {\n      if (!record[keyField.FieldName]) {\n        return `Missing value for primary key field: $' + '{keyField.DisplayName}`;\n      }\n    }\n    \n    // Build descriptive text\n    const displayValue = record.Name || record.Title || record.DisplayName || \n                        primaryKeyFields.map(kf => record[kf.FieldName]).join(''-'');\n    return `Open $' + '{entityName}: $' + '{displayValue}`;\n  };\n  \n  return (\n    <button\n      onClick={handleClick}\n      disabled={!canOpen}\n      style={buttonStyles}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      title={getTooltipText()}\n      aria-label={`Open $' + '{entityName} record`}\n    >\n      {showIcon && icon && (\n        <span style={{ fontSize: size === ''small'' ? ''14px'' : size === ''large'' ? ''18px'' : ''16px'' }}>\n          {icon}\n        </span>\n      )}\n      <span>{text}</span>\n    </button>\n  );\n}","exampleUsage":"<OpenRecordButton\n  record={selectedDeal}\n  entityName=\"Deals\"\n  text=\"View Deal\"\n  variant=\"primary\"\n/>"}'
SET
  @FunctionalRequirements_dbdfdaae = N'Smart record opening uses metadata to determine primary keys; Zero configuration just needs entity name and record; Handles complex keys supports composite primary keys; MJ Explorer integration opens records in the standard way; Minimal props abstracts all complexity; Automatically determines primary key fields from metadata; Handles single and composite primary keys; Extracts key values from record object; Customizable button text and styling; Disabled state when record missing; Error handling for missing metadata; Open buttons in data grids; Record cards with view actions; After-save navigation; Quick access in dashboards; Drill-down from charts'
SET
  @TechnicalDesign_dbdfdaae = N'Metadata aware uses entity metadata for intelligence; Minimal surface area only entityName and record props; Convention over configuration smart defaults; Abstracted complexity handles all key logic internally; Looks up entity in utilities.md.Entities array; Finds primary key fields from entity metadata; Extracts key values from provided record; Builds proper OpenEntityRecord callback parameters; Handles both single and composite keys; Key detection logic Find entity by name in metadata Get primary key fields from entity definition Extract values from record for each key field Pass field value pairs to OpenEntityRecord; Error handling Missing entity metadata Record without key values Invalid entity names Callback failures'
SET
  @FunctionalRequirementsVector_dbdfdaae = N'[-0.005825581960380077,0.03352811932563782,0.008397875353693962,-0.0540362186729908,-0.009313074871897697,0.0119071239605546,0.023876270279288292,0.01637846603989601,-0.007416518870741129,-0.06382093578577042,-0.01593213900923729,0.050720781087875366,0.0026866132393479347,0.16252459585666656,0.027035260573029518,-0.06669463217258453,0.02166673354804516,-0.008358025923371315,0.0571647547185421,0.031282275915145874,-0.004357165191322565,-0.012888655997812748,-0.019398031756281853,-0.021550755947828293,-0.05271516740322113,-0.02011234685778618,-0.08019257336854935,0.03090064786374569,0.0015389577019959688,-0.10450554639101028,-0.02986876294016838,0.04590800032019615,-0.050961658358573914,-0.012893551960587502,0.0000025343690595036605,-0.02673756517469883,-0.025195568799972534,0.014946621842682362,-0.05712251737713814,0.034559741616249084,-0.06649945676326752,-0.0030149819795042276,0.005111949052661657,-0.014005540870130062,-0.007359898183494806,-0.13634176552295685,0.006008985918015242,0.003151776734739542,-0.02869437448680401,-0.05171249806880951,-0.007904327474534512,-0.025928834453225136,0.005380499176681042,-0.01985800266265869,-0.014798769727349281,0.04308423027396202,0.055284272879362106,-0.0026539373211562634,0.0004761686723213643,-0.009544732049107552,0.024196641519665718,-0.017357466742396355,-0.02955719083547592,0.009121859446167946,0.05719690024852753,0.04779527336359024,0.047881994396448135,-0.03303765505552292,0.0006041225860826671,0.03860997408628464,0.07957300543785095,0.01670072413980961,0.030465781688690186,-0.07067280262708664,-0.010204916819930077,-0.039047397673130035,0.005838544107973576,-0.028968418017029762,0.0014090726617723703,-0.0008000537054613233,0.012836912646889687,-0.013164455071091652,-0.0048461551778018475,-0.005304731894284487,0.021025054156780243,-0.01775999180972576,0.012793952599167824,-0.012675772421061993,0.010965671390295029,-0.03147192299365997,0.0038277332205325365,-0.03567127138376236,-0.01005425676703453,-0.020062297582626343,0.007596858777105808,0.011286485940217972,0.010984940454363823,0.009800427593290806,0.031106479465961456,-0.029485544189810753,-0.012125056236982346,0.03350985795259476,0.01706569828093052,0.011228607967495918,0.08154070377349854,0.00627719983458519,-0.02351631224155426,0.025107307359576225,0.05417475476861,-0.026980290189385414,-0.016019649803638458,-0.0241963192820549,-0.019099097698926926,0.03971140831708908,-0.0019236792577430606,0.035516493022441864,0.004617046099156141,0.01611613854765892,0.005245322827249765,-0.0015128225786611438,0.03261798620223999,0.015545184724032879,-0.014379825443029404,-0.006522854324430227,-0.026477068662643433,0.042722973972558975,-0.03457380086183548,-0.005388360470533371,0.016929659992456436,-0.0037919972091913223,-0.006576674524694681,0.010035348124802113,0.038738518953323364,-0.004565977957099676,0.030159546062350273,-0.016899477690458298,0.006810808554291725,0.0019275452941656113,-0.09887740761041641,-0.05299154669046402,0.016618212684988976,0.014451427385210991,-0.0625729113817215,0.017120368778705597,0.005276077426970005,0.01387021690607071,-0.03747507929801941,-0.029203075915575027,-0.0060137188993394375,0.010411864146590233,-0.009213092736899853,-0.027960287407040596,-0.05746718868613243,0.008055786602199078,-0.002369421534240246,0.011600752361118793,-0.034901171922683716,-0.016648132354021072,-0.06414669752120972,-0.024415791034698486,-0.003127958159893751,0.01717822626233101,0.04337209835648537,-0.010583629831671715,-0.010444747284054756,0.0073796529322862625,0.028241096064448357,0.06427890062332153,-0.022064300253987312,0.004744415171444416,-0.03647216036915779,-0.044019270688295364,0.015094483271241188,0.0331030935049057,0.04065101966261864,0.0010296786203980446,-0.001040914561599493,-0.003581229131668806,0.01761821284890175,0.028002094477415085,0.037466298788785934,-0.09820497781038284,-0.03653579205274582,0.05952232703566551,0.04252004250884056,0.007044430356472731,-0.05444055423140526,0.01845414750277996,-0.007939430885016918,-0.005470701027661562,-0.008381328545510769,0.003902437863871455,-0.07534168660640717,0.027484938502311707,-0.0009792782366275787,-0.0010242738062515855,-0.02587779052555561,0.018011782318353653,-0.024249864742159843,0.03345919027924538,-0.04808516055345535,-0.02419954538345337,-0.07121925801038742,0.03201239928603172,0.0374479740858078,-0.02526831068098545,-0.0650709867477417,-0.004580027889460325,0.009691180661320686,-0.004302905406802893,0.10200022906064987,-0.041161347180604935,0.032704152166843414,0.007854677736759186,-0.035950418561697006,0.026616116985678673,0.05961941182613373,0.06922773271799088,-0.04707466810941696,-0.000731009931769222,-0.02550593391060829,0.003234864678233862,0.09973704069852829,-0.028969204053282738,0.0726911649107933,-0.06106632202863693,0.004932281095534563,0.06832671910524368,-0.02597617171704769,0.02641146443784237,0.02091800607740879,-0.047079943120479584,0.05288481339812279,0.06388970464468002,0.019517432898283005,0.04144377261400223,0.011966275051236153,0.14325056970119476,0.0008843994000926614,0.037205781787633896,-0.013627594336867332,-0.02003145031630993,-0.018243400380015373,-0.018626488745212555,-0.057507820427417755,0.020786259323358536,-0.035733018070459366,-0.010395759716629982,0.007361641153693199,-0.031143156811594963,-0.03746349737048149,-0.020955147221684456,0.027622992172837257,0.028300542384386063,-0.016606008633971214,0.060361795127391815,-0.07590405642986298,0.01965630240738392,-0.013028355315327644,0.03331213444471359,0.025542637333273888,-0.026197638362646103,-0.0057645454071462154,-0.06430196017026901,-0.041047465056180954,-0.027649743482470512,0.028720233589410782,-0.017706161364912987,0.02695227414369583,0.011601904407143593,0.038620226085186005,0.05568760260939598,0.05748221278190613,-0.038816750049591064,0.003548297332599759,0.005151784513145685,-0.014072631485760212,0.0037993171717971563,-0.019640298560261726,0.007222803309559822,0.06507212668657303,0.036056067794561386,0.00022116044419817626,0.011282081715762615,-0.029306462034583092,0.0009775293292477727,-0.018860233947634697,-0.021696554496884346,0.04363173618912697,-0.07672059535980225,0.012588153593242168,-0.03522798418998718,0.03487522900104523,-0.014533289708197117,-0.033724140375852585,-0.0345313586294651,-0.007989903911948204,0.015205425210297108,-0.09442830085754395,-0.024068491533398628,0.011037807911634445,-0.023229146376252174,-0.0041945092380046844,0.004953175783157349,0.06060323119163513,0.05276339128613472,-0.0011190481018275023,0.026457345113158226,0.015429895371198654,0.02175760269165039,0.007725447416305542,0.015290318056941032,0.03211402893066406,-0.014103575609624386,0.055838290601968765,0.011627874337136745,0.022749271243810654,0.0038837878964841366,-0.030684033408761024,0.03773215785622597,0.007183061446994543,-0.02140120044350624,0.04615103453397751,-0.0008406886481679976,-0.044468995183706284,0.01472396682947874,0.00031255208887159824,-0.04375641793012619,0.001500669284723699,-0.07029451429843903,0.00742955831810832,0.02668362855911255,-0.02067728154361248,-0.006970828399062157,-0.008312936872243881,0.01032495591789484,-0.02930903248488903,-0.0012059787986800075,-0.017831651493906975,-0.05293000862002373,-0.01892555132508278,0.03018130175769329,-0.01665203832089901,0.012047053314745426,-0.007137509528547525,-0.01840907521545887,0.03263189643621445,0.06145218387246132,-0.02556094340980053,0.004149474669247866,-0.0007719462737441063,0.05888821929693222,0.010692537762224674,-0.036723751574754715,0.027000561356544495,-0.037011127918958664,-0.06422349810600281,-0.021357113495469093,-0.035859957337379456,-0.0010186181170865893,0.03852515667676926,-0.04451674595475197,-0.011645490303635597,-0.0654291883111,0.01108391210436821,0.025355447083711624,0.008726422674953938,0.019153401255607605,-0.0032742267940193415,0.0076764835976064205,-0.07483871281147003,-0.029252100735902786,0.06426410377025604,0.04515209048986435,0.005336607340723276,-0.053400054574012756,-0.02500144951045513,0.013520827516913414,-0.0006788861937820911,0.05470956861972809,0.03481057658791542,-0.01765061542391777,0.03719409555196762,-0.0012939777225255966,0.1013944149017334,0.004060812760144472,-0.04523879662156105,0.010832180269062519,0.0013641645200550556,-0.039231352508068085,-0.019061075523495674,0.03092018887400627,-0.034458957612514496,-0.000449835613835603,0.02562626451253891,-0.016076775267720222,-0.08275899291038513,0.01572691649198532,-0.01279409509152174,-0.0053589423187077045,-0.0059610097669065,0.08941887319087982,-0.011772786267101765,-0.004076943267136812,-0.00068650086177513,0.06847663223743439,0.05235625058412552,0.0139310322701931,0.04846362769603729,0.021525943651795387,-0.024284156039357185,0.03961516544222832,-0.026431284844875336,-0.04749614745378494,-0.02024538442492485,0.021503625437617302,0.047251906245946884,-0.009313005022704601,0.017176369205117226,0.06180771440267563,0.008346755988895893,0.018657850101590157,0.05630797520279884,-0.01470225490629673,0.011478840373456478,-0.018492041155695915,-0.07079850137233734,0.01795012503862381,0.0015174170257523656,0.020236210897564888,0.03269581496715546,0.007217389531433582,-0.02652001567184925,0.010609042830765247,0.034407082945108414,0.0259740948677063,0.060589879751205444,-0.0009137017768807709,-0.018440604209899902,0.016973847523331642,-0.04125983268022537,0.034690011292696,0.03543238714337349,0.022326510399580002,-0.03155674785375595,0.015291226096451283,-0.003583245910704136,-0.04241686314344406,-0.021989813074469566,-0.016595155000686646,-0.04019637033343315,-0.051419004797935486,0.03332823887467384,0.058125607669353485,0.017999805510044098,-0.014871560037136078,-0.08758456259965897,0.07728582620620728,-0.0026999912224709988,0.014632098376750946,0.02088056318461895,0.005094487685710192,-0.02110915817320347,0.05767551437020302,-0.015497580170631409,-0.10580970346927643,0.022668153047561646,-0.02581627294421196,-0.012795168906450272,0.007381272967904806,-0.007368218153715134,-0.020299123600125313,-0.02306894212961197,-0.061790578067302704,-0.018507717177271843,0.009375326335430145,0.0051164813339710236,0.04353231564164162,-0.00036437204107642174,0.017028428614139557,0.06277193129062653,0.026857515797019005,0.03816450387239456,0.014080002903938293,0.012217698618769646,0.014384635724127293,-0.01352033019065857,0.0030405542347580194,0.014153637923300266,0.04041504114866257,-0.02865639701485634,0.03410239517688751,-0.021698448807001114,0.039411984384059906,0.010746346786618233,0.013780280016362667,-0.032614272087812424,0.021153461188077927,-0.09599288552999496,-0.028068317100405693,-0.01606394723057747,-0.021070973947644234,-0.045918021351099014,0.05421535670757294,0.010397913865745068,0.004780224524438381,-0.04007962718605995,0.01041032187640667,-0.017485788092017174,-0.005213429220020771,-0.00887521542608738,-0.05987480282783508,0.02425423264503479,-0.024422502145171165,0.04448334127664566,0.06307542324066162,0.007323760073632002,0.02400624193251133,0.003838946344330907,-0.032126907259225845,-0.007573916111141443,0.015204040333628654,-0.013100585900247097,0.023287270218133926,-0.003203239291906357,-0.01787317357957363,0.023299075663089752,-0.009525488130748272,0.02071092650294304,-0.003960924688726664,-0.008172729052603245,0.0013643851270899177,-0.006098348647356033,0.015630630776286125,0.0019490772392600775,0.05881456285715103,0.05979986861348152,0.050293099135160446,-0.022518886253237724,-0.005893849302083254,-0.07259637117385864,0.0307319276034832,0.006130410823971033,-0.027569321915507317,-0.0020738826133310795,-0.033454857766628265,-0.00012979218445252627,-0.023771492764353752,0.03847115486860275,0.021010931581258774,-0.00036738128983415663,-0.04243958368897438,-0.007659957278519869,-0.010537294670939445,-0.005118323490023613,-7.051111027911334e-33,0.005830072797834873,0.000936092808842659,-0.04618046432733536,-0.006140518933534622,0.06003570929169655,-0.03211147338151932,-0.01394589152187109,-0.03201371803879738,-0.027857189998030663,-0.01614050380885601,-0.003125046147033572,-0.03723777458071709,0.022673338651657104,0.0019174065673723817,0.019579162821173668,0.033431459218263626,0.02872338332235813,-0.03308115527033806,0.007108232006430626,0.01855367235839367,-0.038311004638671875,0.007695495616644621,-0.009327529929578304,-0.04047311097383499,-0.009543254040181637,0.005405167583376169,-0.005882255733013153,0.02591252699494362,-0.025309957563877106,0.005554318893700838,0.01640249975025654,-0.020157814025878906,-0.04734727367758751,-0.044333554804325104,-0.017429562285542488,-0.008886170573532581,-0.12543612718582153,0.05149635672569275,-0.0003943267511203885,0.00909529160708189,0.11827166378498077,-0.03464977815747261,0.004249345511198044,0.015258818864822388,0.039690203964710236,0.011418924666941166,-0.021158359944820404,0.009779092855751514,-0.02399251237511635,-0.08821787685155869,0.008908971212804317,-0.0014151610666885972,-0.02311449870467186,0.06966798007488251,-0.0002332802687305957,-0.014617393724620342,0.030060943216085434,-0.028615042567253113,-0.07027919590473175,0.003937458619475365,0.017440762370824814,-0.05257340893149376,0.004505190532654524,0.01104787364602089,0.02925778739154339,0.002533419756218791,0.004535107873380184,0.0360422283411026,0.023599805310368538,0.05019885301589966,0.0007949511636979878,0.025456015020608902,0.0006209061830304563,0.021599644795060158,0.04075281322002411,-0.00724053243175149,0.013475600630044937,0.023802613839507103,-0.09150440990924835,-0.04390685260295868,-0.01650257781147957,0.026883959770202637,-0.06782157719135284,0.010081174783408642,-0.003858968149870634,0.033472493290901184,-0.03347226604819298,-0.02644253522157669,0.02798265591263771,-0.0009346590959466994,-0.027210744097828865,0.007764031644910574,-0.033172354102134705,0.0010832647094503045,-0.015345082618296146,0.017906615510582924,0.04691402614116669,0.033933065831661224,-0.04082297533750534,-0.02860354632139206,0.03030328080058098,0.007825453765690327,0.036526285111904144,0.029363535344600677,0.015059320256114006,-0.016589036211371422,-0.05320578068494797,0.024511093273758888,-0.08152426779270172,0.02319982647895813,0.05288030952215195,-0.012124929577112198,0.05437023565173149,-0.07653150707483292,-0.004846332594752312,-0.03788207098841667,0.04025627300143242,0.014729656279087067,0.025288386270403862,-0.036854032427072525,-0.013330502435564995,0.009860937483608723,-0.018366968259215355,0.0025513898581266403,0.07466040551662445,0.038090698421001434,-0.0511162169277668,-0.1109309121966362,0.030888458713889122,0.0348719097673893,0.00025058857863768935,0.008884268812835217,3.2736264188315545e-7,-0.012592514045536518,0.07332363724708557,0.0009539689053781331,0.028658440336585045,-0.0015430686762556434,0.02703530713915825,0.00018750660819932818,-0.02800426445901394,-0.0033749944996088743,-0.021185878664255142,0.07069029659032822,-0.027735207229852676,-0.002537977183237672,0.057561762630939484,-0.04918704181909561,0.013103055767714977,0.02451232261955738,-0.01351772528141737,-0.04959056153893471,0.024430079385638237,0.06248996779322624,-0.007065297570079565,0.011128395795822144,0.016853831708431244,0.0436972975730896,0.00910369772464037,-0.033256955444812775,0.030147753655910492,0.06557588279247284,-0.006995614618062973,0.057767145335674286,-0.005650750361382961,-0.02745889686048031,0.0031659326050430536,-0.004266044124960899,-0.020016564056277275,-0.029894107952713966,0.057445187121629715,0.005223060958087444,0.014295101165771484,0.07176078110933304,-0.09495418518781662,-0.005731114652007818,-0.006288774777203798,0.020194897428154945,-0.10167079418897629,0.007901214063167572,0.08652143180370331,-0.08751948922872543,-0.025270117446780205,-0.01866709440946579,-0.014893588609993458,0.045625507831573486,-0.04730457067489624,-0.018603671342134476,-0.03436185047030449,-0.02530091442167759,0.057110581547021866,-0.0017330991104245186,0.008829161524772644,0.023179449141025543,-0.0036223542410880327,-0.02453368715941906,0.0037681208923459053,0.050066642463207245,0.023377852514386177,-0.03380732610821724,3.642709367638195e-34,-0.031946517527103424,-0.039549317210912704,-0.0006661053630523384,-0.01368539035320282,0.006082554813474417,-0.0174030140042305,0.02383704110980034,-0.03256824612617493,0.009512796998023987,-0.05365839600563049,-0.024046827107667923]'
SET
  @TechnicalDesignVector_dbdfdaae = N'[0.010671015828847885,0.02803710848093033,0.009816789999604225,-0.028705108910799026,0.02686116099357605,0.004215018358081579,-0.049626804888248444,-0.015519410371780396,-0.0856664627790451,-0.017942288890480995,0.01198391243815422,0.12448084354400635,-0.04157305508852005,0.06675902009010315,-0.048393845558166504,0.040972694754600525,0.01479656994342804,-0.0073348525911569595,0.022817762568593025,0.015771325677633286,-0.019308166578412056,-0.028549756854772568,-0.03530822694301605,-0.023761911317706108,-0.0545237697660923,-0.005024772137403488,-0.06518552452325821,0.04316043108701706,0.027153905481100082,-0.060905471444129944,-0.008632228709757328,0.02998349815607071,-0.07622183859348297,0.016526905819773674,0.0000027514495286595775,-0.00994802825152874,-0.05327008292078972,-0.007336724549531937,-0.04990968853235245,0.03682190552353859,-0.03915780037641525,0.018573256209492683,-0.0022994051687419415,-0.008218690752983093,-0.013027232140302658,-0.03176452964544296,0.0010641280096024275,0.02398211695253849,-0.014408251270651817,-0.027574758976697922,0.012363296002149582,0.012058772146701813,0.007625494617968798,0.023374121636152267,-0.026846211403608322,0.025343403220176697,0.03439446538686752,-0.0024635957088321447,-0.014290405437350273,0.022611891850829124,0.014955198392271996,0.015800418332219124,-0.04690208658576012,-0.02769700065255165,0.060923054814338684,0.02569226175546646,0.012521468102931976,0.027779649943113327,0.031145822256803513,0.016278188675642014,0.13799536228179932,0.02725130133330822,0.028884857892990112,-0.06037329137325287,-0.017796654254198074,-0.03586205467581749,0.03105976991355419,-0.039259810000658035,0.017831970006227493,0.016596317291259766,0.017235860228538513,0.04506409913301468,-0.0018932425882667303,-0.016502700746059418,-0.03527217358350754,0.06766875088214874,0.0048944177106022835,-0.01582486554980278,-0.011798673309385777,-0.018760640174150467,-0.03404223918914795,-0.031472183763980865,0.00326877785846591,0.03266269341111183,0.0049721673130989075,0.006212153937667608,0.00859714113175869,-0.13696160912513733,0.028106318786740303,-0.06675327569246292,0.005903222598135471,0.007187051698565483,0.016313914209604263,0.024552835151553154,0.04988795146346092,-0.03122517094016075,0.019632507115602493,0.05135312303900719,0.05893047899007797,-0.04466671496629715,-0.031421251595020294,-0.008577984757721424,0.0021052539814263582,0.07536111027002335,-0.008314868435263634,0.04555175453424454,0.01787150651216507,0.03459709882736206,-0.023035744205117226,0.013263839296996593,-0.039539944380521774,-0.02033613808453083,0.0208252165466547,-0.006240482442080975,-0.027427364140748978,-0.02160402573645115,-0.023536253720521927,-0.039524901658296585,0.013707589358091354,0.007963735610246658,0.02785801701247692,-0.014345875941216946,0.00970561895519495,-0.010431043803691864,0.03425256162881851,0.057421840727329254,0.07024667412042618,-0.03901463747024536,-0.08405135571956635,-0.009383450262248516,0.059334225952625275,0.007673066109418869,-0.03069721907377243,0.03225396201014519,0.003772845957428217,-0.016423003748059273,-0.050514932721853256,-0.03143736347556114,-0.01559118926525116,-0.03216927498579025,-0.01304895430803299,-0.03477751463651657,-0.050767794251441956,0.036596689373254776,0.018090669065713882,0.026012128219008446,-0.001328029204159975,0.019691526889801025,-0.0015225462848320603,0.009288012981414795,0.012556372210383415,0.024120962247252464,0.012386980466544628,-0.0333692729473114,-0.032036636024713516,0.010463368147611618,0.02810158208012581,0.07204950600862503,-0.04880616441369057,0.002026739763095975,0.02164815552532673,-0.04594556614756584,0.05970785766839981,0.018393436446785927,0.02670668438076973,-0.0312749408185482,-0.007897144183516502,-0.02521808259189129,0.008187810890376568,0.031543388962745667,-0.018946653231978416,-0.024940794333815575,-0.034733615815639496,0.038925815373659134,0.00044795466237701476,-0.043129339814186096,-0.013695749454200268,0.047135159373283386,-0.013641969300806522,0.009383517317473888,-0.004734447225928307,-0.0242986511439085,-0.08771537989377975,0.0010233093053102493,0.02451031282544136,-0.005846476648002863,-0.021579604595899582,0.03714815527200699,0.024027720093727112,0.023416317999362946,-0.060311127454042435,-0.011898708529770374,-0.009504599496722221,-0.001991795841604471,0.04776597023010254,-0.07099795341491699,-0.11636364459991455,-0.013047312386333942,0.024841731414198875,0.01895497739315033,-0.02893347106873989,-0.018361417576670647,0.02851223573088646,0.010786667466163635,-0.011646054685115814,0.0172108206897974,0.06147000193595886,0.04429774731397629,-0.04976000264286995,-0.024347495287656784,-0.013935725204646587,-0.03795436769723892,0.032620515674352646,0.0071356650441884995,0.014136792160570621,-0.05252175033092499,0.007985150441527367,0.03718351200222969,0.0049580461345613,-0.015889879316091537,0.00408276729285717,-0.014104769565165043,0.029337337240576744,0.032265644520521164,0.0015066700289025903,-0.006615691818296909,0.028460539877414703,0.16275611519813538,-0.008175330236554146,0.036218009889125824,0.026523834094405174,-0.04153516888618469,-0.0008589292410761118,-0.013759127818048,-0.021265152841806412,0.027571622282266617,-0.020941326394677162,-0.0011405961122363806,0.009348995052278042,-0.017615651711821556,0.01345996093004942,0.010103348642587662,0.03692907467484474,-0.024584148079156876,-0.016453901305794716,-0.003747875103726983,-0.06417436897754669,0.051783252507448196,0.04943987727165222,0.010278480127453804,-0.0183721873909235,-0.013672543689608574,0.035909660160541534,-0.03735199198126793,0.008644451387226582,-0.013085107319056988,-0.006609145551919937,-0.02981451526284218,0.049151644110679626,0.014932982623577118,0.02993517927825451,0.061344850808382034,0.05825382471084595,-0.010936768725514412,0.04028119519352913,0.04192858561873436,-0.013568875379860401,-0.05248615890741348,-0.006203303579241037,0.00368977477774024,0.06278583407402039,0.007937151938676834,0.04382229596376419,0.0352347306907177,-0.016615476459264755,0.033074311912059784,-0.030268054455518723,-0.0003627818950917572,0.010442931205034256,-0.01999087445437908,-0.029834846034646034,-0.003073423635214567,0.0025784436147660017,0.008923113346099854,-0.044330041855573654,-0.012979482300579548,-0.002608159789815545,-0.016979651525616646,-0.03302551805973053,-0.02054334245622158,0.039527952671051025,0.010719933547079563,-0.0019505032105371356,0.0026187996845692396,0.05436834320425987,0.061154309660196304,0.023794742301106453,0.07368649542331696,0.033153876662254333,0.014471039175987244,-0.044364359229803085,0.004381661303341389,0.0019772998057305813,-0.03344675898551941,0.04293802008032799,-0.052623774856328964,0.019232839345932007,0.028462713584303856,-0.00014922824630048126,0.05736330896615982,0.014450176618993282,0.02393515221774578,0.05414387956261635,0.0027763342950493097,-0.035731006413698196,0.014954688027501106,0.0029766822699457407,-0.015569108538329601,-0.03125571832060814,-0.04257136210799217,0.032443493604660034,0.011205189861357212,-0.038243651390075684,-0.005043112672865391,-0.01836264505982399,0.009664255194365978,-0.016730543226003647,0.008355950936675072,-0.041272636502981186,-0.027850264683365822,0.018278365954756737,0.012037787586450577,-0.016424104571342468,0.0558558814227581,0.04403356835246086,0.030777648091316223,-0.02731499820947647,0.037164364010095596,-0.06063647195696831,0.014507897198200226,-0.02046879008412361,0.002043622313067317,0.017766885459423065,-0.007034020964056253,0.027673378586769104,-0.02841048687696457,-0.027618736028671265,0.0070702130906283855,-0.0011902350233867764,0.0009973675478249788,0.05297817662358284,0.04374985024333,-0.04684601351618767,-0.10408984124660492,0.001862510689534247,-0.014691049233078957,-0.01100683119148016,-0.02009102888405323,0.020867623388767242,0.004500001203268766,-0.01913909800350666,-0.03536040708422661,-0.011255986988544464,0.041092220693826675,0.011344590224325657,0.008845608681440353,-0.02666548080742359,-0.03223269805312157,-0.015807002782821655,0.011832155287265778,0.04269808530807495,-0.0644713044166565,0.01930222287774086,-0.011318718083202839,0.05446043983101845,-0.028732003644108772,-0.048105042427778244,0.02803063578903675,-0.011881332844495773,-0.007342975120991468,-0.03361324593424797,-0.03046509250998497,-0.05273495241999626,0.0032371326815336943,0.017675694078207016,-0.03551739826798439,-0.055119555443525314,0.00627647340297699,0.030345261096954346,0.014388419687747955,0.013587400317192078,0.1002909392118454,-0.014217978343367577,0.04757506772875786,-0.02438141405582428,0.018277104943990707,0.0915355533361435,0.0020425429102033377,0.022738778963685036,-0.005165743641555309,-0.03985190391540527,-0.01005084253847599,0.005891415290534496,-0.03496616706252098,-0.014692367985844612,-0.026269350200891495,0.009354542940855026,-0.03370320051908493,0.03484360873699188,-0.0026040761731565,0.03007691353559494,0.023902248591184616,0.0723327249288559,-0.06301706284284592,0.031093169003725052,-0.03833794966340065,-0.03621358796954155,-0.000654064875561744,0.037730246782302856,0.01853405125439167,-0.027479136362671852,0.009557612240314484,0.017489992082118988,0.005536286160349846,-0.010845734737813473,0.08263753354549408,0.06647507101297379,-0.02337845042347908,-0.016312258318066597,-0.00024797554942779243,-0.048253096640110016,0.05871884897351265,0.01867150515317917,0.032076478004455566,0.0027075365651398897,-0.03665910288691521,-0.010810455307364464,-0.02873367816209793,-0.0169530026614666,-0.01981159672141075,-0.014173343777656555,-0.040326911956071854,-0.041785746812820435,0.08015763759613037,0.0340266190469265,-0.013214826583862305,-0.05813838541507721,0.058758221566677094,-0.04558708891272545,0.08085758239030838,0.042549021542072296,0.011621499434113503,-0.01877746172249317,-0.005383254494518042,-0.0110225360840559,-0.04340200126171112,0.011182157322764397,-0.07888708263635635,-0.029483092948794365,-0.0060600643046200275,0.014647644944489002,-0.01914737932384014,-0.005290651228278875,-0.015997327864170074,0.02794324792921543,0.030937908217310905,0.0013977803755551577,0.016192546114325523,-0.030717020854353905,0.0202749352902174,0.09354102611541748,0.036619242280721664,-0.0024642774369567633,-0.04424344748258591,0.012950497679412365,0.03143024072051048,-0.014201887883245945,-0.002637118101119995,-0.02042764239013195,0.039815839380025864,-0.041144005954265594,0.03204541653394699,-0.018211927264928818,0.05626975744962692,0.004087603650987148,0.02768082544207573,0.003516207216307521,0.03530920296907425,-0.0898359939455986,0.011551311239600182,0.014046918600797653,-0.009647148661315441,-0.01726662926375866,0.00348671548999846,0.057011980563402176,0.03613244369626045,-0.0404663123190403,0.014343403279781342,0.03437657281756401,-0.006459504831582308,-0.0029915813356637955,-0.016404734924435616,0.023458730429410934,0.028794705867767334,0.012796460650861263,0.1007225513458252,0.037527963519096375,0.03858337551355362,0.006469069514423609,-0.030934378504753113,0.016379907727241516,-0.006517953239381313,0.020626701414585114,0.015727102756500244,0.008525555022060871,0.017179066315293312,0.027513302862644196,-0.0003806074964813888,-0.016782492399215698,-0.009382972493767738,-0.015675721690058708,-0.013895783573389053,0.0075374688021838665,-0.020789191126823425,-0.03197334706783295,0.04471122846007347,0.017235515639185905,0.048800040036439896,-0.04173900932073593,0.04644416645169258,-0.0822291225194931,0.05812494829297066,-0.024702217429876328,-0.025111090391874313,-0.01703493483364582,-0.0378955714404583,-0.023074347525835037,-0.012983128428459167,0.047235939651727676,0.019339993596076965,-0.012120873667299747,-0.06896903365850449,-0.07277573645114899,-0.024472158402204514,0.048706844449043274,-7.48890847051174e-33,-0.03644590824842453,0.00809487421065569,-0.004102256614714861,0.0007793116383254528,0.03461051732301712,-0.051064085215330124,-0.01288930606096983,-0.010199049487709999,-0.009945902973413467,-0.013337282463908195,-0.00855548121035099,-0.0015401026466861367,0.018127435818314552,-0.0012775720097124577,0.03164079040288925,0.021624520421028137,-0.003978996071964502,-0.007744522765278816,-0.011442935094237328,0.017308924347162247,0.028030145913362503,0.032655708491802216,-0.00027530634542927146,-0.04188772663474083,-0.023375488817691803,-0.015179665759205818,0.035579729825258255,-0.0203364510089159,-0.07059943675994873,-0.004433042369782925,0.019622936844825745,-0.03640403971076012,-0.019759302958846092,-0.009294111281633377,-0.027556225657463074,-0.13197699189186096,-0.09505662322044373,0.010501050390303135,0.002398138400167227,-0.005770114716142416,0.09139422327280045,-0.03793129697442055,0.005766342859715223,0.027156470343470573,0.01767396740615368,0.009634321555495262,0.023121962323784828,-0.0034522605128586292,-0.04305223748087883,-0.06296925246715546,0.02535630390048027,-0.00893408339470625,-0.02750462293624878,0.06287064403295517,0.021528225392103195,-0.09482128918170929,0.03561917319893837,0.02248244546353817,-0.05158161371946335,-0.019947990775108337,0.022116510197520256,-0.018384911119937897,-0.0010120040969923139,0.022737670689821243,0.026691626757383347,0.009451612830162048,-0.019471466541290283,0.00023441805387847126,0.023890310898423195,0.06327160447835922,-0.03738510608673096,0.03487624600529671,-0.027251355350017548,0.018372615799307823,0.008505563251674175,-0.031758274883031845,-0.005844900384545326,0.052109505981206894,-0.08870453387498856,-0.029435068368911743,0.006912397686392069,0.013581464998424053,-0.07101203501224518,0.010554078966379166,0.026251187548041344,0.02678624726831913,-0.02845400758087635,-0.020700862631201744,0.006363529246300459,-0.03765719011425972,-0.06746959686279297,0.022780073806643486,-0.031042711809277534,0.014168823137879372,0.01751132495701313,-0.019574910402297974,0.005422346293926239,-0.012050885707139969,-0.049648649990558624,-0.00298685347661376,0.05506293848156929,0.020759785547852516,0.03126056119799614,-0.022836284711956978,0.009387502446770668,0.004098226316273212,0.006097199395298958,-0.01075020618736744,-0.07070529460906982,0.01573561504483223,-0.011616576462984085,0.028340652585029602,-0.011438453570008278,-0.05859293043613434,-0.05211837962269783,-0.034280698746442795,0.02080582082271576,0.010640333406627178,0.01757589913904667,-0.0028762787114828825,0.037104662507772446,0.05661361664533615,0.05186162889003754,0.009383363649249077,0.008756062015891075,0.03110407665371895,-0.029784927144646645,-0.134501114487648,0.05548442527651787,0.03248414024710655,0.0008406438282690942,0.029258038848638535,3.5055356306656904e-7,0.005358568392693996,0.008443066850304604,0.001218956196680665,-0.04510827735066414,-0.010019026696681976,0.09575175493955612,-0.05040072277188301,-0.04833946004509926,-0.01953330636024475,-0.009728127159178257,0.046247873455286026,-0.06335967034101486,0.009507408365607262,0.010190957225859165,-0.03413691744208336,-0.02100634202361107,0.05878234654664993,-0.02033025026321411,-0.023076046258211136,-0.033454135060310364,-0.0005870272289030254,-0.02882036752998829,0.019275035709142685,-0.0243680477142334,0.008634956553578377,0.0015630314592272043,-0.0290893092751503,-0.01187217514961958,0.052949968725442886,0.01615152321755886,0.07740873843431473,-0.007028712425380945,-0.03132587671279907,0.021626407280564308,-0.03112906403839588,-0.004396900534629822,-0.04958881437778473,0.08881471306085587,0.00619994243606925,-0.009059522300958633,0.06048616021871567,-0.08547060936689377,0.00033081279252655804,0.02636067196726799,0.02177402377128601,-0.01570260338485241,-0.08296895027160645,0.013328622095286846,-0.10004893690347672,0.0017459410009905696,-0.033254556357860565,0.02128986455500126,-0.010497487150132656,-0.06766646355390549,-0.025176359340548515,-0.031569525599479675,-0.010338380001485348,-0.015343924053013325,0.027675552293658257,0.02843416854739189,0.014088540337979794,-0.03264452517032623,0.052082814276218414,-0.0021279253996908665,0.039100516587495804,-0.055306680500507355,-0.035459745675325394,3.773485180465838e-34,-0.004690165631473064,0.015409097075462341,0.005223068408668041,0.043638408184051514,0.007851755246520042,-0.032439086586236954,-0.022360412403941154,-0.04432901367545128,-0.007492453325539827,-0.033006660640239716,0.021206369623541832]'
SET
  @HasCustomProps_dbdfdaae = 0
SET
  @HasCustomEvents_dbdfdaae = 0
SET
  @RequiresData_dbdfdaae = 0
SET
  @DependencyCount_dbdfdaae = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_dbdfdaae = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_dbdfdaae = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_dbdfdaae = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_dbdfdaae,
  @Namespace = @Namespace_dbdfdaae,
  @Name = @Name_dbdfdaae,
  @Version = @Version_dbdfdaae,
  @VersionSequence = @VersionSequence_dbdfdaae,
  @Title = @Title_dbdfdaae,
  @Description = @Description_dbdfdaae,
  @Type = @Type_dbdfdaae,
  @Status = @Status_dbdfdaae,
  @DeveloperName = @DeveloperName_dbdfdaae,
  @DeveloperEmail = @DeveloperEmail_dbdfdaae,
  @DeveloperOrganization = @DeveloperOrganization_dbdfdaae,
  @SourceRegistryID = @SourceRegistryID_dbdfdaae,
  @ReplicatedAt = @ReplicatedAt_dbdfdaae,
  @LastSyncedAt = @LastSyncedAt_dbdfdaae,
  @Specification = @Specification_dbdfdaae,
  @FunctionalRequirements = @FunctionalRequirements_dbdfdaae,
  @TechnicalDesign = @TechnicalDesign_dbdfdaae,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_dbdfdaae,
  @TechnicalDesignVector = @TechnicalDesignVector_dbdfdaae,
  @HasCustomProps = @HasCustomProps_dbdfdaae,
  @HasCustomEvents = @HasCustomEvents_dbdfdaae,
  @RequiresData = @RequiresData_dbdfdaae,
  @DependencyCount = @DependencyCount_dbdfdaae,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_dbdfdaae,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_dbdfdaae,
  @HasRequiredCustomProps = @HasRequiredCustomProps_dbdfdaae;

-- Save MJ: Components (core SP call only)
DECLARE @ID_cdb57ddc UNIQUEIDENTIFIER,
@Namespace_cdb57ddc NVARCHAR(MAX),
@Name_cdb57ddc NVARCHAR(500),
@Version_cdb57ddc NVARCHAR(50),
@VersionSequence_cdb57ddc INT,
@Title_cdb57ddc NVARCHAR(1000),
@Description_cdb57ddc NVARCHAR(MAX),
@Type_cdb57ddc NVARCHAR(255),
@Status_cdb57ddc NVARCHAR(50),
@DeveloperName_cdb57ddc NVARCHAR(255),
@DeveloperEmail_cdb57ddc NVARCHAR(255),
@DeveloperOrganization_cdb57ddc NVARCHAR(255),
@SourceRegistryID_cdb57ddc UNIQUEIDENTIFIER,
@ReplicatedAt_cdb57ddc DATETIMEOFFSET,
@LastSyncedAt_cdb57ddc DATETIMEOFFSET,
@Specification_cdb57ddc NVARCHAR(MAX),
@FunctionalRequirements_cdb57ddc NVARCHAR(MAX),
@TechnicalDesign_cdb57ddc NVARCHAR(MAX),
@FunctionalRequirementsVector_cdb57ddc NVARCHAR(MAX),
@TechnicalDesignVector_cdb57ddc NVARCHAR(MAX),
@HasCustomProps_cdb57ddc BIT,
@HasCustomEvents_cdb57ddc BIT,
@RequiresData_cdb57ddc BIT,
@DependencyCount_cdb57ddc INT,
@TechnicalDesignVectorEmbeddingModelID_cdb57ddc NVARCHAR(MAX),
@FunctionalRequirementsVectorEmbeddingModelID_cdb57ddc NVARCHAR(MAX),
@HasRequiredCustomProps_cdb57ddc BIT
SET
  @ID_cdb57ddc = '6DABEEC4-803B-4149-9DC4-5A1201AC1EF9'
SET
  @Namespace_cdb57ddc = N'Generic/UI/Form'
SET
  @Name_cdb57ddc = N'SingleRecordView'
SET
  @Version_cdb57ddc = N'1.0.0'
SET
  @VersionSequence_cdb57ddc = 1
SET
  @Title_cdb57ddc = N'Single Record View'
SET
  @Description_cdb57ddc = N'A component that displays a single entity record in a formatted view with metadata-driven field formatting'
SET
  @Type_cdb57ddc = N'Form'
SET
  @Status_cdb57ddc = N'Published'
SET
  @Specification_cdb57ddc = N'{"name":"SingleRecordView","title":"Single Record View","description":"A component that displays a single entity record in a formatted view with metadata-driven field formatting","type":"form","location":"embedded","functionalRequirements":"Displays single entity record with metadata-driven field formatting. Auto-formats dates, numbers, currencies, booleans based on field types. Supports field selection/ordering, multiple layouts (list/table/card/inline), text truncation, empty value handling. Uses: detail panels, card views, tooltips, summaries, print views.","technicalDesign":"Uses entity metadata to determine field types → applies type-specific formatting (dates: locale string, numbers: commas, currency: $, booleans: Yes/No). Layout options: list (vertical pairs), table (2-column), inline (horizontal), card (styled sections). Supports field selection, custom ordering, text truncation, null handling.","dataRequirements":{"mode":"props","description":"Receives record data through props"},"properties":[{"name":"record","type":"Record<string, any>","description":"The entity record to display","required":true},{"name":"entityName","type":"string","description":"Name of the entity for metadata lookup","required":true},{"name":"fields","type":"Array<string>","description":"Fields to display in order. If not provided, shows all non-system fields","required":false},{"name":"layout","type":"''list'' | ''table'' | ''inline'' | ''card''","description":"Display layout style","required":false,"defaultValue":"list","possibleValues":["list","table","inline","card"]},{"name":"showLabels","type":"boolean","description":"Whether to show field labels","required":false,"defaultValue":true},{"name":"labelWidth","type":"number","description":"Width of label column in pixels (table layout)","required":false,"defaultValue":150},{"name":"dateFormat","type":"''short'' | ''long'' | ''relative''","description":"Date formatting style","required":false,"defaultValue":"short","possibleValues":["short","long","relative"]},{"name":"showEmptyFields","type":"boolean","description":"Whether to show fields with no value","required":false,"defaultValue":false},{"name":"maxTextLength","type":"number","description":"Maximum characters for text fields before truncation","required":false,"defaultValue":200},{"name":"highlightFields","type":"Array<string>","description":"Fields to highlight visually","required":false},{"name":"allowOpenRecord","type":"boolean","description":"Whether to show an Open Record button for the record","required":false,"defaultValue":false}],"events":[{"name":"fieldClicked","description":"Fired when a field value is clicked","parameters":[{"name":"eventData","type":"{ fieldName: string; value: any; fieldType?: string; record: Record<string, any> }","description":"Object containing field name, value, optional field type, and the full record"}]},{"name":"openRecord","description":"Cancelable event fired before opening a record. Set eventData.cancel = true to prevent default behavior","cancelable":true,"parameters":[{"name":"eventData","type":"{ record: Record<string, any>; entityName: string; cancel: boolean; primaryKeys: Array<{ FieldName: string; Value: any }> }","description":"Cancelable event object. Set cancel to true to prevent the record from opening"}]}],"dependencies":[{"name":"OpenRecordButton","namespace":"Generic/Navigation","location":"registry","description":"Button to open entity records"}],"code":"function SingleRecordView({\n  record,\n  entityName,\n  fields,\n  layout = ''list'',\n  showLabels = true,\n  labelWidth = 150,\n  dateFormat = ''short'',\n  showEmptyFields = false,\n  maxTextLength = 200,\n  highlightFields = [],\n  allowOpenRecord = false,\n  onFieldClicked,\n  onOpenRecord,\n  utilities,\n  styles,\n  components,\n  callbacks,\n  savedUserSettings,\n  onSaveUserSettings\n}) {\n  const [entityInfo, setEntityInfo] = React.useState(null);\n  \n  // Get OpenRecordButton component from registry if needed\n  const OpenRecordButton = allowOpenRecord ? components?.[''OpenRecordButton''] : null;\n  \n  // Handle open record button click with cancelable event - moved outside useMemo\n  const handleOpenRecordClick = React.useCallback((recordToOpen, entityNameToOpen) => {\n    console.log(''handleOpenRecordClick called for:'', entityNameToOpen, recordToOpen);\n    \n    // Get primary keys from entity metadata\n    let primaryKeys = [];\n    if (entityInfo) {\n      // Handle different PrimaryKey structures in MJ metadata\n      let primaryKeyFields = [];\n      \n      if (entityInfo.PrimaryKey) {\n        if (entityInfo.PrimaryKey.Columns && Array.isArray(entityInfo.PrimaryKey.Columns)) {\n          // Multi-column primary key\n          primaryKeyFields = entityInfo.PrimaryKey.Columns;\n        } else if (entityInfo.PrimaryKey.Name) {\n          // Single column primary key with Name property\n          primaryKeyFields = [entityInfo.PrimaryKey.Name];\n        } else if (typeof entityInfo.PrimaryKey === ''string'') {\n          // Primary key as string\n          primaryKeyFields = [entityInfo.PrimaryKey];\n        }\n      }\n      \n      // Fallback to ID if no primary key found\n      if (primaryKeyFields.length === 0) {\n        primaryKeyFields = [''ID''];\n      }\n      \n      primaryKeys = primaryKeyFields.map(fieldName => ({\n        FieldName: fieldName,\n        Value: recordToOpen[fieldName]\n      }));\n    }\n    \n    // Create cancelable event object\n    const eventData = {\n      record: recordToOpen,\n      entityName: entityNameToOpen,\n      cancel: false, // Parent can set this to true to cancel\n      primaryKeys // Populated with actual primary key values\n    };\n    \n    // Fire the event if handler exists\n    if (onOpenRecord) {\n      onOpenRecord(eventData);\n    }\n    \n    // Check if the event was canceled\n    if (eventData.cancel) {\n      return false; // Return false to prevent default action\n    }\n    \n    // If not canceled (or no handler), proceed with default behavior\n    // Call the OpenEntityRecord callback directly\n    if (callbacks && callbacks.OpenEntityRecord && primaryKeys.length > 0) {\n      callbacks.OpenEntityRecord(entityNameToOpen, primaryKeys);\n    } else {\n      console.error(''Unable to open record - missing callback or primary keys'', {\n        hasCallbacks: !!callbacks,\n        hasOpenEntityRecord: !!(callbacks && callbacks.OpenEntityRecord),\n        primaryKeysLength: primaryKeys.length\n      });\n    }\n    \n    return true;\n  }, [entityInfo, onOpenRecord, callbacks]);\n  \n  // Create wrapped OpenRecordButton with intercepted click\n  const WrappedOpenRecordButton = React.useMemo(() => {\n    if (!OpenRecordButton) return null;\n    \n    return (props) => {\n      const handleWrapperClick = (e) => {\n        // Stop all propagation first\n        e.preventDefault();\n        e.stopPropagation();\n        \n        // Call the centralized handler\n        handleOpenRecordClick(props.record, props.entityName);\n      };\n      \n      return (\n        <div \n          onClick={handleWrapperClick} \n          style={{ \n            display: ''inline-block'',\n            cursor: ''pointer''\n          }}\n        >\n          {/* Render a button that looks like OpenRecordButton but doesn''t have onClick */}\n          <button\n            style={{\n              padding: props.size === ''small'' ? ''4px 8px'' : props.size === ''large'' ? ''12px 24px'' : ''8px 16px'',\n              backgroundColor: props.variant === ''primary'' ? ''#1890ff'' : props.variant === ''link'' ? ''transparent'' : ''#fff'',\n              color: props.variant === ''primary'' ? ''#fff'' : props.variant === ''link'' ? ''#1890ff'' : ''#333'',\n              border: props.variant === ''link'' ? ''none'' : props.variant === ''primary'' ? ''1px solid #1890ff'' : ''1px solid #d9d9d9'',\n              borderRadius: ''4px'',\n              cursor: ''pointer'',\n              fontSize: props.size === ''small'' ? ''12px'' : props.size === ''large'' ? ''16px'' : ''14px'',\n              textDecoration: props.variant === ''link'' ? ''underline'' : ''none'',\n              display: ''inline-flex'',\n              alignItems: ''center'',\n              gap: ''6px'',\n              transition: ''all 0.3s'',\n              pointerEvents: ''none'' // Prevent button from handling clicks\n            }}\n          >\n            {props.showIcon !== false && props.icon && <span>{props.icon}</span>}\n            {props.text || ''Open Record''}\n          </button>\n        </div>\n      );\n    };\n  }, [OpenRecordButton, handleOpenRecordClick]);\n  \n  // Load entity metadata\n  React.useEffect(() => {\n    if (!entityName || !utilities?.md?.Entities) return;\n    \n    const entity = utilities.md.Entities.find(e => e.Name === entityName);\n    if (entity) {\n      setEntityInfo(entity);\n    }\n  }, [entityName, utilities]);\n  \n  // Format value based on field type\n  const formatValue = (value, fieldInfo) => {\n    if (value == null || value === '''') {\n      return showEmptyFields ? <span style={{ color: ''#999'', fontStyle: ''italic'' }}>Empty</span> : null;\n    }\n    \n    // Handle different field types\n    if (fieldInfo) {\n      // Boolean fields\n      if (fieldInfo.Type === ''bit'') {\n        return value ? ''✓ Yes'' : ''✗ No'';\n      }\n      \n      // Date fields\n      if (fieldInfo.Type === ''datetime'' || fieldInfo.Type === ''date'') {\n        try {\n          const date = new Date(value);\n          if (isNaN(date.getTime())) return value;\n          \n          if (dateFormat === ''long'') {\n            return date.toLocaleDateString(''en-US'', { \n              weekday: ''long'', \n              year: ''numeric'', \n              month: ''long'', \n              day: ''numeric'' \n            });\n          } else if (dateFormat === ''relative'') {\n            const now = new Date();\n            const diff = now - date;\n            const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n            if (days === 0) return ''Today'';\n            if (days === 1) return ''Yesterday'';\n            if (days < 7) return `$' + '{days} days ago`;\n            if (days < 30) return `$' + '{Math.floor(days / 7)} weeks ago`;\n            if (days < 365) return `$' + '{Math.floor(days / 30)} months ago`;\n            return `$' + '{Math.floor(days / 365)} years ago`;\n          } else {\n            return date.toLocaleDateString(''en-US'', { \n              year: ''numeric'', \n              month: ''short'', \n              day: ''numeric'' \n            });\n          }\n        } catch {\n          return value;\n        }\n      }\n      \n      // Number fields\n      if (fieldInfo.Type === ''int'' || fieldInfo.Type === ''bigint'') {\n        return parseInt(value).toLocaleString();\n      }\n      \n      // Decimal/currency fields\n      if (fieldInfo.Type === ''decimal'' || fieldInfo.Type === ''float'' || fieldInfo.Type === ''money'') {\n        const num = parseFloat(value);\n        // Check if field name suggests currency\n        if (fieldInfo.Name.toLowerCase().includes(''amount'') || \n            fieldInfo.Name.toLowerCase().includes(''price'') ||\n            fieldInfo.Name.toLowerCase().includes(''cost'') ||\n            fieldInfo.Type === ''money'') {\n          return new Intl.NumberFormat(''en-US'', {\n            style: ''currency'',\n            currency: ''USD'',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          }).format(num);\n        }\n        return num.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n      }\n    }\n    \n    // Text fields - truncate if needed\n    if (typeof value === ''string'' && value.length > maxTextLength) {\n      return (\n        <span title={value}>\n          {value.substring(0, maxTextLength)}...\n        </span>\n      );\n    }\n    \n    return value;\n  };\n  \n  // Get fields to display\n  const getDisplayFields = () => {\n    if (fields && fields.length > 0) {\n      return fields;\n    }\n    \n    // Auto-select fields if not specified\n    if (!record) return [];\n    \n    return Object.keys(record).filter(key => \n      !key.startsWith(''__mj'') && \n      key !== ''ID'' &&\n      typeof record[key] !== ''object''\n    );\n  };\n  \n  // Get field info from entity\n  const getFieldInfo = (fieldName) => {\n    if (!entityInfo || !entityInfo.Fields) return null;\n    return entityInfo.Fields.find(f => f.Name === fieldName);\n  };\n  \n  // Handle field click\n  const handleFieldClick = (fieldName, value) => {\n    if (onFieldClicked) {\n      const fieldInfo = getFieldInfo(fieldName);\n      onFieldClicked({ \n        fieldName, \n        value, \n        fieldType: fieldInfo?.Type,\n        record \n      });\n    }\n  };\n  \n  \n  // Render field based on layout\n  const renderField = (fieldName) => {\n    const fieldInfo = getFieldInfo(fieldName);\n    const value = record[fieldName];\n    const formattedValue = formatValue(value, fieldInfo);\n    \n    if (!showEmptyFields && !formattedValue) return null;\n    \n    const isHighlighted = highlightFields.includes(fieldName);\n    const label = fieldInfo?.DisplayName || fieldName;\n    \n    const fieldStyle = {\n      cursor: onFieldClicked ? ''pointer'' : ''default''\n    };\n    \n    const highlightStyle = isHighlighted ? {\n      backgroundColor: ''#fffbe6'',\n      padding: ''4px 8px'',\n      borderRadius: ''4px'',\n      border: ''1px solid #ffe58f''\n    } : {};\n    \n    if (layout === ''list'') {\n      return (\n        <div \n          key={fieldName}\n          style={{ \n            marginBottom: ''12px'',\n            ...highlightStyle\n          }}\n          onClick={() => handleFieldClick(fieldName, value)}\n        >\n          {showLabels && (\n            <div style={{ \n              fontWeight: 500, \n              color: ''#666'', \n              fontSize: ''12px'',\n              marginBottom: ''4px'',\n              textTransform: ''uppercase''\n            }}>\n              {label}\n            </div>\n          )}\n          <div style={{ \n            fontSize: ''14px'', \n            color: ''#333'',\n            ...fieldStyle\n          }}>\n            {formattedValue || ''-''}\n          </div>\n        </div>\n      );\n    }\n    \n    if (layout === ''table'') {\n      return (\n        <tr \n          key={fieldName}\n          style={highlightStyle}\n          onClick={() => handleFieldClick(fieldName, value)}\n        >\n          {showLabels && (\n            <td style={{ \n              fontWeight: 500, \n              color: ''#666'', \n              fontSize: ''14px'',\n              padding: ''8px'',\n              width: labelWidth,\n              verticalAlign: ''top''\n            }}>\n              {label}\n            </td>\n          )}\n          <td style={{ \n            fontSize: ''14px'', \n            color: ''#333'',\n            padding: ''8px'',\n            ...fieldStyle\n          }}>\n            {formattedValue || ''-''}\n          </td>\n        </tr>\n      );\n    }\n    \n    if (layout === ''inline'') {\n      return (\n        <span \n          key={fieldName}\n          style={{ \n            marginRight: ''20px'',\n            display: ''inline-block'',\n            ...highlightStyle\n          }}\n          onClick={() => handleFieldClick(fieldName, value)}\n        >\n          {showLabels && (\n            <span style={{ \n              fontWeight: 500, \n              color: ''#666'', \n              fontSize: ''12px'',\n              marginRight: ''4px''\n            }}>\n              {label}:\n            </span>\n          )}\n          <span style={{ \n            fontSize: ''14px'', \n            color: ''#333'',\n            ...fieldStyle\n          }}>\n            {formattedValue || ''-''}\n          </span>\n        </span>\n      );\n    }\n    \n    return null;\n  };\n  \n  // No record provided\n  if (!record) {\n    return (\n      <div style={{ \n        padding: ''20px'', \n        textAlign: ''center'', \n        color: ''#999'' \n      }}>\n        No record to display\n      </div>\n    );\n  }\n  \n  const displayFields = getDisplayFields();\n  \n  // Render based on layout\n  if (layout === ''card'') {\n    return (\n      <div style={{\n        border: ''1px solid #d9d9d9'',\n        borderRadius: ''8px'',\n        padding: ''16px'',\n        backgroundColor: ''#fff'',\n        boxShadow: ''0 2px 4px rgba(0,0,0,0.05)''\n      }}>\n        {displayFields.map(renderField)}\n        {allowOpenRecord && WrappedOpenRecordButton && (\n          <div style={{ marginTop: ''16px'', paddingTop: ''16px'', borderTop: ''1px solid #f0f0f0'' }}>\n            <WrappedOpenRecordButton\n              record={record}\n              entityName={entityName}\n              variant=\"primary\"\n              size=\"medium\"\n              utilities={utilities}\n              styles={styles}\n              components={components}\n              callbacks={callbacks}\n              savedUserSettings={savedUserSettings}\n              onSaveUserSettings={onSaveUserSettings}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n  \n  if (layout === ''table'') {\n    return (\n      <div>\n        <table style={{\n          width: ''100%'',\n          borderCollapse: ''collapse''\n        }}>\n          <tbody>\n            {displayFields.map(renderField)}\n          </tbody>\n        </table>\n        {allowOpenRecord && WrappedOpenRecordButton && (\n          <div style={{ marginTop: ''12px'' }}>\n            <WrappedOpenRecordButton\n              record={record}\n              entityName={entityName}\n              variant=\"default\"\n              size=\"medium\"\n              utilities={utilities}\n              styles={styles}\n              components={components}\n              callbacks={callbacks}\n              savedUserSettings={savedUserSettings}\n              onSaveUserSettings={onSaveUserSettings}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n  \n  if (layout === ''inline'') {\n    return (\n      <div style={{\n        padding: ''8px'',\n        lineHeight: ''1.8''\n      }}>\n        {displayFields.map(renderField)}\n        {allowOpenRecord && WrappedOpenRecordButton && (\n          <span style={{ marginLeft: ''20px'', display: ''inline-block'' }}>\n            <WrappedOpenRecordButton\n              record={record}\n              entityName={entityName}\n              variant=\"link\"\n              size=\"small\"\n              utilities={utilities}\n              styles={styles}\n              components={components}\n              callbacks={callbacks}\n              savedUserSettings={savedUserSettings}\n              onSaveUserSettings={onSaveUserSettings}\n            />\n          </span>\n        )}\n      </div>\n    );\n  }\n  \n  // Default list layout\n  return (\n    <div style={{ padding: ''8px'' }}>\n      {displayFields.map(renderField)}\n      {allowOpenRecord && OpenRecordButton && (\n        <div style={{ marginTop: ''12px'' }}>\n          <OpenRecordButton\n            record={record}\n            entityName={entityName}\n            variant=\"default\"\n            size=\"medium\"\n            utilities={utilities}\n            styles={styles}\n            components={components}\n            callbacks={callbacks}\n            savedUserSettings={savedUserSettings}\n            onSaveUserSettings={onSaveUserSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n}","exampleUsage":"<SingleRecordView\n  record={selectedDeal}\n  entityName=\"Deals\"\n  fields={[''DealName'', ''Stage'', ''Amount'', ''CloseDate'', ''OwnerID'']}\n  layout=\"card\"\n  highlightFields={[''Amount'', ''Stage'']}\n  allowOpenRecord={true}\n  onOpenRecord={(eventData) => {\n    // Example: Cancel if deal is in certain stage\n    if (selectedDeal.Stage === ''Lost'') {\n      eventData.cancel = true;\n      alert(''Cannot open lost deals'');\n    }\n  }}\n/>"}'
SET
  @FunctionalRequirements_cdb57ddc = N'Record visualization displays entity record fields in clean format; Metadata-driven formatting uses field types for proper display; Selective field display shows only specified fields in order; Smart formatting dates numbers currencies booleans; Compact or expanded multiple layout options; Displays record fields in specified order; Automatic formatting based on field types; Currency formatting for amount fields; Date formatting with locale support; Boolean display as Yes No or checkmarks; Null empty value handling; Related entity name display; Long text truncation with expand option; Responsive layout options; Record detail panels; Card views in lists; Tooltip previews; Summary displays; Print-friendly views; Email templates'
SET
  @TechnicalDesign_cdb57ddc = N'Metadata awareness uses entity field definitions; Type-based formatting automatic based on data types; Minimal configuration smart defaults; Accessibility semantic HTML and ARIA labels; Uses entity metadata for field information; Applies formatting based on field types; Handles various data types appropriately; Supports custom field ordering; Responsive to container size; Field type formatting Strings trim and display Numbers locale formatting Decimals 2 decimal places Currency symbol and formatting Dates locale date string Booleans Yes No IDs hidden by default Long text truncate with ellipsis; Layout options List label-value pairs Table two-column Inline compact horizontal Card styled with sections'
SET
  @FunctionalRequirementsVector_cdb57ddc = N'[0.006685653701424599,0.017352571710944176,-0.02480325661599636,0.0011278302408754826,-0.002200643066316843,0.04485858976840973,0.06059527397155762,0.04489505663514137,-0.02441265992820263,0.0023106953594833612,0.029797401279211044,0.04662012308835983,0.06142212450504303,0.12762753665447235,0.01960349641740322,-0.10614980012178421,0.02639632485806942,0.010140805505216122,0.048476606607437134,0.02534949593245983,0.018313977867364883,-0.0001826703955885023,0.009279313497245312,0.005482678301632404,-0.01780170388519764,-0.019156867638230324,-0.014246155507862568,0.02445894666016102,-0.015291055664420128,-0.09252452105283737,0.002517596585676074,0.015850773081183434,-0.011449809186160564,-0.046893324702978134,0.00000307166442325979,-0.028825106099247932,-0.04447643458843231,-0.007213081233203411,-0.05002547428011894,0.0439569465816021,-0.029087008908391,-0.025136107578873634,0.009458892978727818,-0.008763412944972515,0.0017039196100085974,-0.09459049999713898,0.028073903173208237,0.10095994919538498,-0.013876684941351414,-0.02099643647670746,-0.008757725358009338,-0.035138510167598724,-0.0584908090531826,-0.046542927622795105,0.01523341704159975,0.03127902001142502,0.0231211856007576,0.008500549010932446,0.03170054778456688,0.0036249624099582434,0.02812223508954048,-0.004773376975208521,-0.02817690186202526,-0.026851829141378403,0.0419977605342865,0.08354435116052628,0.03339331969618797,-0.05327830836176872,0.047496989369392395,-0.009033791720867157,0.06056373938918114,-0.0014325293013826013,0.0038144877180457115,-0.01631831005215645,-0.022280743345618248,-0.05429375171661377,-0.040903881192207336,-0.006577980238944292,-0.00004297083069104701,0.00248091877438128,-0.041839394718408585,0.02912452444434166,-0.004644700791686773,0.0017241324530914426,0.015606013126671314,-0.03140182048082352,-0.008685465902090073,-0.027042293921113014,-0.04473397508263588,0.03265681862831116,0.022508611902594566,-0.05689094215631485,-0.0004013206053059548,0.0049263969995081425,0.033146556466817856,-0.0373232327401638,0.01416335254907608,-0.018819082528352737,0.05284212529659271,-0.017508095130324364,0.03625810518860817,0.023196497932076454,0.013252745382487774,0.03144203871488571,0.0556422621011734,-0.010506315156817436,-0.05688505992293358,-0.04185617342591286,-0.003812114940956235,0.07399765402078629,0.036468494683504105,-0.009951945394277573,-0.05016399919986725,0.07929662615060806,-0.02553420327603817,0.013552824035286903,-0.013600495643913746,-0.005273140966892242,0.025508569553494453,0.032766684889793396,0.03443179279565811,0.03090272843837738,0.00003546827065292746,-0.03326801583170891,-0.008934237994253635,0.015626221895217896,-0.0771343857049942,0.02022751420736313,0.03133789077401161,0.0016060975613072515,0.001049216603860259,-0.031025869771838188,0.02721664495766163,-0.00436722207814455,0.0031490668188780546,-0.0136537104845047,0.04545293375849724,0.03923221677541733,-0.09213308990001678,-0.006110592745244503,0.020953308790922165,0.004649404436349869,-0.04401157423853874,-0.05285211652517319,-0.0070720394141972065,0.036144450306892395,0.0012546693906188011,0.0267751757055521,-0.017091864719986916,-0.0184355266392231,-0.009729604236781597,-0.011357280425727367,-0.07288073748350143,0.02483506128191948,0.07612717896699905,0.03718006610870361,0.029826011508703232,-0.006843080744147301,-0.013022604398429394,-0.01613987796008587,0.028483904898166656,0.004706257954239845,0.019233308732509613,-0.01633034646511078,-0.04314180091023445,-0.00948234274983406,0.027220940217375755,0.02453991025686264,-0.0427224300801754,-0.0471428707242012,-0.03350920230150223,-0.028624920174479485,-0.05476734787225723,0.03831806406378746,0.061034828424453735,0.008820834569633007,0.018675746396183968,-0.011232925578951836,-0.04596925526857376,0.014604584313929081,0.047885019332170486,-0.0720096305012703,-0.007440102752298117,0.03681735321879387,0.048661038279533386,0.03574378788471222,-0.05785144492983818,0.035556476563215256,-0.025187714025378227,-0.022282389923930168,-0.04515330493450165,-0.00016419026360381395,-0.016209542751312256,0.008721244521439075,-0.028257174417376518,0.03408504277467728,0.0026186080649495125,0.05940933898091316,-0.01574641279876232,-0.05523611232638359,-0.029195481911301613,-0.00004599698513629846,0.03169002756476402,0.08613532036542892,0.004418231081217527,0.01719033345580101,-0.011749859899282455,-0.057437725365161896,-0.0314420722424984,0.050178784877061844,0.1098070815205574,0.021386608481407166,-0.013901907950639725,-0.02735278755426407,-0.01778685487806797,0.0027398886159062386,0.028973212465643883,0.03575100377202034,-0.021895986050367355,0.021281670778989792,-0.036690592765808105,-0.015401518903672695,0.0207220371812582,-0.02648845687508583,0.0966038927435875,-0.05209165811538696,-0.00006772391498088837,0.06502442061901093,-0.041639212518930435,0.024519754573702812,-0.009844346903264523,-0.0029616886749863625,0.04883784428238869,0.0002088366891257465,0.022365907207131386,0.04518480971455574,0.017601365223526955,0.09911603480577469,-0.01073425356298685,-0.00269727292470634,0.02626040019094944,-0.0591137520968914,0.0067527154460549355,0.0038323861081153154,-0.000981838209554553,-0.023185722529888153,0.03520910069346428,-0.0000073636674642330036,0.015924949198961258,-0.042998306453228,0.0024727978743612766,-0.005203617736697197,0.0471620075404644,0.000880603794939816,0.012300499714910984,0.08684423565864563,-0.05964629724621773,0.011395684443414211,-0.002645275555551052,0.017433209344744682,0.05963538587093353,-0.030187375843524933,-0.02760927937924862,-0.0005929333274252713,-0.01210071798413992,-0.019683390855789185,0.05506870895624161,-0.05234204977750778,-0.03251264989376068,0.00869464036077261,0.056005142629146576,0.0672127977013588,0.07525882869958878,-0.02627180702984333,0.001904598088003695,0.02436523512005806,-0.0560835562646389,-0.03509574010968208,0.0031437822617590427,0.037866849452257156,0.0255042165517807,0.06052140146493912,-0.026803752407431602,0.008534285239875317,-0.019981352612376213,-0.011352283880114555,0.010791164822876453,-0.04905393347144127,-0.003661650698632002,-0.03259338438510895,0.035046014934778214,-0.04772888123989105,0.04326720908284187,0.009468508884310722,-0.03275448456406593,-0.023342888802289963,-0.007223363034427166,-0.014205355197191238,-0.04080906882882118,0.03197091445326805,-0.03667399659752846,-0.0030035972595214844,-0.03331342339515686,-0.02456928975880146,0.03340581804513931,0.05119606852531433,0.0016842574113979936,-0.004485546611249447,0.009481471963226795,-0.00022270073532126844,0.04019731655716896,0.05685343220829964,0.006303159054368734,-0.019182946532964706,0.013240212574601173,0.03066013753414154,-0.04086507856845856,0.025176584720611572,-0.030188828706741333,0.042670249938964844,-0.01349672395735979,-0.017997045069932938,0.006238143891096115,-0.005033050663769245,-0.008718783967196941,0.018077483400702477,-0.05410008132457733,0.005389043129980564,-0.010984511114656925,-0.054695479571819305,-0.003120158798992634,0.02463057078421116,-0.0419558547437191,0.048019181936979294,0.0050834305584430695,0.04188110679388046,-0.04403822124004364,-0.022745463997125626,0.023653531447052956,-0.03893081843852997,-0.057847633957862854,0.030260032042860985,-0.0214165560901165,-0.022319959476590157,0.020836560055613518,-0.034038446843624115,0.021901655942201614,0.03251808136701584,-0.004545080475509167,0.026212254539132118,0.03509780392050743,0.04967442527413368,-0.012131457217037678,-0.03361893817782402,0.05424519628286362,0.005706116557121277,-0.09520691633224487,-0.04046323895454407,-0.02925778552889824,-0.056509435176849365,0.010200003162026405,-0.014011822640895844,0.007838932797312737,0.003933953121304512,-0.007249149493873119,0.03090066649019718,0.013016901910305023,-0.02334686927497387,-0.0736629068851471,-0.0038398716133087873,-0.029315916821360588,-0.02590092644095421,0.05003439635038376,0.04833883047103882,-0.019043035805225372,-0.03103189542889595,-0.004164312966167927,-0.013804218731820583,0.0024788444861769676,0.04799991846084595,0.020842965692281723,-0.05147205665707588,0.08158373087644577,0.009067025035619736,0.027269460260868073,0.006692688446491957,-0.045163482427597046,0.019075991585850716,-0.04128899425268173,-0.03924393281340599,-0.028123710304498672,-0.019697027280926704,-0.026789473369717598,-0.02720586210489273,-0.003481291700154543,0.0003933721163775772,-0.056507181376218796,0.016319679096341133,-0.04277636855840683,0.00873518455773592,0.019442766904830933,-0.02910509705543518,0.016049949452280998,-0.0542999804019928,0.0008137240074574947,-0.0033094030804932117,0.11685135215520859,0.06012775003910065,-0.026010053232312202,-0.05528051778674126,-0.08605577051639557,0.02278534136712551,0.015164919197559357,-0.061257075518369675,0.07629520446062088,0.013430465012788773,0.005892609246075153,0.043754372745752335,-0.008212374523282051,0.05064033716917038,0.008066940121352673,-0.008518901653587818,-0.017765603959560394,-0.028452524915337563,-0.025715896859765053,-0.00870733056217432,-0.024557577446103096,0.0221303328871727,-0.022100478410720825,0.030971473082900047,0.0013228971511125565,-0.01606380008161068,-0.04857523739337921,0.041392236948013306,-0.010744024999439716,0.01593318209052086,-0.005393932573497295,0.019506052136421204,-0.02323148213326931,-0.015546244569122791,-0.03350447118282318,0.0006464055622927845,0.013009153306484222,0.016810016706585884,-0.013784333132207394,0.0016117253107950091,-0.004434774164110422,-0.044537074863910675,-0.07544243335723877,0.026203088462352753,0.007508773356676102,-0.022335095331072807,0.03360382094979286,-0.005246744025498629,0.0396648570895195,-0.001158690545707941,-0.09602240473031998,0.014287564903497696,0.023421240970492363,-0.019262321293354034,0.033870503306388855,0.02449594996869564,-0.019328951835632324,0.014535748399794102,-0.0036819998640567064,-0.0930197462439537,0.026487961411476135,-0.05093109607696533,-0.026662101969122887,-0.01092588435858488,-0.006375913042575121,-0.0018263396341353655,-0.021680496633052826,-0.014765589497983456,-0.01024919468909502,-0.011244060471653938,-0.02191341295838356,-0.02504376322031021,-0.019145546481013298,-0.016105838119983673,0.03499208018183708,0.004925834946334362,0.017681526020169258,-0.03857521340250969,0.020685944706201553,0.02035038359463215,-0.015154826454818249,-0.013759528286755085,0.03550103306770325,-0.009447981603443623,-0.01250903494656086,0.03515416756272316,0.0018619460752233863,0.07091981172561646,-0.01773362047970295,-0.00923475343734026,-0.04828835651278496,0.030858930200338364,-0.09053508192300797,-0.01213143952190876,-0.013493489474058151,0.02110648900270462,-0.028120091184973717,0.027893545106053352,0.020111413672566414,0.008596418425440788,-0.03948535770177841,0.026891080662608147,-0.0492587648332119,0.013826797716319561,0.0319613516330719,-0.021913079544901848,0.03371049836277962,-0.0767812505364418,0.010053901933133602,0.08587022125720978,-0.023691989481449127,-0.04041796550154686,0.014057551510632038,-0.01654539443552494,0.0017151214415207505,0.012011275626718998,-0.013134997338056564,0.0117802694439888,-0.012655116617679596,-0.014103059656918049,0.021228142082691193,-0.028631802648305893,-0.020313315093517303,0.03539659455418587,-0.06252341717481613,-0.018646152690052986,-0.002195183653384447,0.0062850285321474075,-0.020002348348498344,0.06154007092118263,0.06981182098388672,0.03966932371258736,-0.05969453230500221,0.003894140012562275,-0.043769534677267075,-0.028913289308547974,0.015790844336152077,-0.026338480412960052,-0.017442455515265465,-0.005842633545398712,0.020108245313167572,-0.018478835001587868,0.0247933492064476,0.008487105369567871,0.023486049845814705,0.007317767012864351,-0.03624210134148598,0.00745130842551589,-0.02247920259833336,-7.972677293120898e-33,-0.025996049866080284,-0.015063232742249966,0.005079528782516718,0.019377615302801132,0.03238452970981598,-0.002083530416712165,-0.0027929849456995726,0.026343846693634987,-0.027421055361628532,0.02408740669488907,-0.04391294717788696,-0.01758621633052826,0.022897759452462196,0.009527157060801983,0.015537873841822147,0.011656074784696102,0.04908979311585426,-0.003615248017013073,-0.0053183394484221935,-0.024520080536603928,-0.04484985023736954,0.003771489718928933,0.06251007318496704,-0.07554025202989578,0.022138051688671112,0.022425580769777298,-0.04292374476790428,-0.010270998813211918,0.046806782484054565,0.013100558891892433,0.013952533714473248,-0.04572639986872673,-0.01686217077076435,-0.06442953646183014,0.0017668429063633084,0.03794129937887192,-0.1123695820569992,-0.0052796173840761185,0.035210561007261276,0.038886334747076035,0.04955296218395233,-0.056169141083955765,0.00835675559937954,-0.001067972625605762,-0.010016326792538166,-0.012805715203285217,-0.01751038059592247,-0.0324614979326725,0.010664553381502628,-0.02680928260087967,-0.041649192571640015,-0.003251191694289446,-0.009370611980557442,0.08852285146713257,0.0012118578888475895,0.029097536578774452,-0.008820140734314919,-0.022363819181919098,-0.12155115604400635,0.05242461711168289,0.03482712060213089,-0.01338435709476471,0.012236042879521847,-0.03888225182890892,0.02840644121170044,0.0002668662928044796,-0.04909823089838028,0.024680038914084435,-0.03332529962062836,-0.006445209961384535,0.01636223867535591,0.0620766319334507,-0.009908623062074184,0.021839698776602745,0.013469123281538486,-0.046641990542411804,0.017442908138036728,0.06631705164909363,-0.031596966087818146,0.022527171298861504,-0.007378083653748035,0.02468966878950596,-0.03812691196799278,-0.003880942240357399,0.04596263915300369,-0.009735277853906155,-0.03331137076020241,-0.04836352914571762,0.03791181743144989,-0.0013267042813822627,-0.005451295059174299,0.04565742611885071,-0.06530718505382538,-0.04682101309299469,-0.0653107687830925,0.03721918165683746,0.03565911948680878,-0.010383286513388157,0.011622586287558079,-0.05059836059808731,0.0036059576086699963,-0.01621146872639656,-0.026257408782839775,0.04306994378566742,0.019124319776892662,-0.026268603280186653,-0.014385657384991646,-0.007477537263184786,-0.09529490768909454,0.007546982262283564,0.06547240912914276,-0.01004722435027361,0.017876036465168,-0.0731261819601059,-0.02729705721139908,-0.056083571165800095,0.00986212957650423,-0.002826276235282421,0.02415117621421814,-0.03691619634628296,0.01939380168914795,0.015797005966305733,-0.009212487377226353,0.03354089334607124,0.022459879517555237,-0.03005320392549038,-0.03536869212985039,-0.016814477741718292,0.09872014075517654,0.010291519574820995,-0.01965109258890152,0.010868181474506855,3.6532128433464095e-7,0.02975623309612274,0.055750440806150436,0.02522663213312626,0.03184143081307411,0.0060534426011145115,0.03663187846541405,0.011537599377334118,0.013844725675880909,0.01975548081099987,0.036722175776958466,0.013691173866391182,-0.02762838453054428,0.023054007440805435,0.04050136357545853,-0.020984720438718796,-0.0435323603451252,0.020387183874845505,-0.0335204042494297,-0.009070863015949726,-0.00914166308939457,0.048964668065309525,0.012908604927361012,0.022615237161517143,0.002991208340972662,0.043968066573143005,0.00929419044405222,-0.007995461113750935,-0.06003729999065399,0.03782378137111664,-0.058980099856853485,0.0024080893490463495,0.018329143524169922,-0.005548026412725449,-0.03938733786344528,-0.010711855255067348,-0.049517836421728134,0.020056473091244698,0.06890419870615005,0.002469184109941125,0.1003057137131691,0.021807000041007996,-0.14505919814109802,-0.005222502630203962,-0.0958610251545906,0.0068787457421422005,-0.002779448637738824,0.02113686501979828,0.011572552844882011,-0.050364550203084946,-0.011962199583649635,0.04069502279162407,0.012229454703629017,-0.0013428741367533803,-0.0501551628112793,0.028688855469226837,-0.0008490391774103045,-0.05801982805132866,0.05372501164674759,0.009966794401407242,0.05169231444597244,0.022942738607525826,0.03034844622015953,-0.007893020287156105,0.0033829540479928255,0.007042581681162119,-0.0035549227613955736,-0.021344346925616264,3.6375957376233777e-34,-0.02997274324297905,-0.028215622529387474,0.025784239172935486,0.05453764647245407,0.0028352581430226564,-0.025695690885186195,0.059129368513822556,-0.03437289595603943,0.009211699478328228,-0.0024155215360224247,0.0028720954433083534]'
SET
  @TechnicalDesignVector_cdb57ddc = N'[0.0009152810671366751,-0.015659086406230927,-0.021343667060136795,-0.0035469788126647472,0.042147740721702576,0.0007961674709804356,0.006734965834766626,0.03356608748435974,-0.06392087042331696,-0.042616695165634155,0.012573381885886192,0.06237178295850754,0.023815080523490906,0.09957306832075119,0.0012039365246891975,-0.03513500094413757,-0.0341791994869709,0.026705721393227577,0.023579126223921776,0.05124792084097862,0.08181699365377426,-0.019648300483822823,0.011181430891156197,0.0008530478808097541,-0.0574675053358078,0.0281441118568182,-0.00720754312351346,0.01455188449472189,-0.042404115200042725,-0.12571817636489868,-0.00006859451241325587,0.02645115740597248,-0.04041364789009094,-0.009824063628911972,0.0000029942391392978607,-0.0036564376205205917,-0.06343875825405121,0.007932563312351704,-0.03292473405599594,0.01514015719294548,-0.01877506636083126,0.012368019670248032,0.011336097493767738,0.00043220104998908937,0.0028116251341998577,-0.05687872692942619,-0.0027355002239346504,0.06974314898252487,0.016659991815686226,-0.048783205449581146,-0.00223224563524127,-0.04924365505576134,-0.06905756145715714,0.013188626617193222,0.0767725482583046,-0.00037510949186980724,-0.005062013398855925,-0.004944737534970045,0.035340167582035065,0.02968776598572731,0.03618403524160385,0.0338359996676445,-0.012820775620639324,-0.035250771790742874,0.063869409263134,0.06818176060914993,-0.01797911897301674,-0.03650873154401779,0.056702662259340286,-0.002962828613817692,0.18034867942333221,-0.019376741722226143,0.00048241522745229304,-0.0422758050262928,0.010227922350168228,-0.02897002175450325,-0.015318943187594414,-0.0017012658063322306,-0.004403518512845039,-0.007207679096609354,-0.0070044840686023235,0.03878030925989151,-0.006181079428642988,-0.038271304219961166,0.02081218734383583,0.08755158632993698,-0.007967520505189896,-0.03627689555287361,-0.04833933338522911,-0.018052438274025917,-0.005894999485462904,-0.044832490384578705,0.00015175757289398462,0.019009599462151527,0.05178774520754814,-0.008857631124556065,-0.001695874147117138,-0.1391679048538208,0.032007988542318344,-0.011668501421809196,0.0001620360417291522,0.034857552498579025,0.011218924075365067,0.013568964786827564,0.03180677816271782,-0.03926105424761772,-0.003121735295280814,0.018590956926345825,0.008591210469603539,0.04738004878163338,0.0232202410697937,-0.004911746829748154,-0.03383413702249527,0.042087092995643616,-0.021992934867739677,0.02775132656097412,0.0169560257345438,-0.006132539361715317,-0.012676137499511242,0.03491737321019173,0.05226276442408562,0.010965121909976006,0.0266936793923378,-0.03831334039568901,-0.011100692674517632,-0.02475106716156006,-0.03138003125786781,-0.020199356600642204,0.031486209481954575,-0.03209630399942398,0.010929690673947334,-0.00741704273968935,0.025893623009324074,-0.013769257813692093,-0.0056814090348780155,0.021608170121908188,0.04123859852552414,0.0010351967066526413,-0.08577381819486618,-0.018900832161307335,0.016249658539891243,0.03942500427365303,-0.02109319157898426,0.007112512364983559,-0.030030284076929092,0.01959438994526863,-0.012200668454170227,0.018965626135468483,-0.006468732841312885,0.010988527908921242,0.017003722488880157,0.014697672799229622,-0.09001718461513519,0.029037293046712875,0.09520191699266434,-0.0025796915870159864,0.050108861178159714,-0.0015734112821519375,0.009882841259241104,0.01129812654107809,0.02263558842241764,0.0220330860465765,-0.01819363422691822,-0.021815454587340355,-0.02136055938899517,0.006390000227838755,0.04650069400668144,0.017586514353752136,0.016631510108709335,0.0012612419668585062,-0.02293003536760807,-0.010313548147678375,-0.003511362709105015,0.014910205267369747,0.08288167417049408,-0.0033349948935210705,0.026148352771997452,-0.011370498687028885,-0.013854672200977802,0.038444966077804565,0.023885568603873253,-0.07745290547609329,-0.01395424921065569,0.050488051027059555,0.023298390209674835,-0.0037389718927443027,-0.00783939566463232,-0.023989632725715637,-0.03996797651052475,-0.013615082949399948,-0.05277736485004425,-0.019966397434473038,-0.008346549235284328,-0.002070086542516947,-0.01259327121078968,-0.010606526397168636,-0.003846200415864587,0.038036663085222244,-0.0024432630743831396,-0.00019187155703548342,-0.01856817491352558,-0.023056600242853165,0.018497034907341003,0.09563947468996048,0.024621890857815742,-0.05600946396589279,-0.042282260954380035,-0.05623343586921692,0.02001909539103508,0.023657353594899178,0.057845164090394974,-0.024167820811271667,-0.032843656837940216,-0.03201446309685707,-0.040132682770490646,-0.014231035485863686,0.04259335994720459,0.006628891918808222,-0.06526219844818115,0.02665615640580654,0.0002242555347038433,-0.06240837648510933,0.008411353453993797,0.03258413076400757,0.0873950719833374,-0.04535374417901039,0.006732226815074682,0.05830282345414162,-0.019095618277788162,0.024790016934275627,0.00880399253219366,0.0004936353652738035,0.027344172820448875,0.015392322093248367,0.0400913804769516,0.00849864911288023,0.03300365060567856,0.13652658462524414,0.031807221472263336,0.04322498291730881,0.017604295164346695,-0.02745271846652031,-0.02053925208747387,-0.03332066163420677,-0.01408108975738287,-0.037542134523391724,-0.027431931346654892,-0.004878590349107981,0.012846020981669426,-0.04288795590400696,0.023487456142902374,-0.012269648723304272,0.01268024742603302,0.014509585686028004,-0.012358327396214008,0.014776885509490967,-0.02147824689745903,0.039520904421806335,-0.0014503725105896592,0.02956228516995907,-0.015758857131004333,0.008869841694831848,0.011181763373315334,0.043211523443460464,0.039299167692661285,-0.02996530570089817,0.0477483868598938,-0.04059086740016937,-0.021623805165290833,0.016530686989426613,0.023321693763136864,0.058317217975854874,0.005467279348522425,-0.0068732257932424545,0.009007747285068035,-0.009405325166881084,0.0015055566327646375,-0.040463149547576904,-0.02085884101688862,0.05404810234904289,0.05480052903294563,0.02873237244784832,-0.01228261087089777,0.015497002750635147,0.0014090216718614101,0.005608115810900927,0.004382521379739046,-0.04702100157737732,0.015558445826172829,-0.040482837706804276,0.01221439428627491,-0.03154880180954933,0.03734657168388367,0.054190196096897125,-0.05384419113397598,-0.06176406145095825,-0.015400812961161137,-0.009155148640275002,-0.026752503588795662,0.014885345473885536,0.008426643908023834,0.021142372861504555,-0.01829146407544613,-0.025283409282565117,0.0695396140217781,0.05348401889204979,-0.01495707780122757,-0.004751511383801699,0.013003092259168625,0.012773576192557812,-0.03030727058649063,0.05536554008722305,-0.03763950616121292,-0.04699769243597984,0.013835289515554905,0.01868581771850586,-0.006924492307007313,0.04768536239862442,-0.0020105938892811537,0.08234556019306183,0.011360293254256248,0.023482488468289375,0.013784496113657951,0.011431613005697727,-0.024752583354711533,-0.0005434244521893561,0.0018269609427079558,-0.022068718448281288,-0.026801886036992073,-0.03377623111009598,0.0011480534449219704,0.030664626508951187,-0.01847647875547409,-0.013161970302462578,-0.027241820469498634,0.013022804632782936,-0.017933566123247147,-0.02333754301071167,0.0030654731672257185,-0.01152800489217043,-0.02994721010327339,0.02932005561888218,0.01473253220319748,0.03498334065079689,0.0027895274106413126,0.03985803201794624,0.024863392114639282,0.04908810555934906,-0.0394308939576149,0.023574575781822205,0.027236714959144592,0.0652237981557846,0.008764415979385376,-0.018394241109490395,0.0465758740901947,0.03093433752655983,-0.05508807301521301,-0.07295242697000504,-0.03438291698694229,-0.03918392211198807,-0.020826051011681557,0.007542967796325684,-0.02346394769847393,-0.01715587079524994,-0.019349820911884308,-0.014400282874703407,0.017985275015234947,-0.027625229209661484,-0.0544624887406826,0.03928959742188454,-0.0453190878033638,-0.041361093521118164,0.047991324216127396,0.0751606747508049,0.019063442945480347,-0.0024889411870390177,-0.010837014764547348,-0.020917313173413277,0.0015683731762692332,0.03417503833770752,0.013524295762181282,-0.045235008001327515,0.049275290220975876,0.006884451489895582,0.04053850099444389,-0.015881367027759552,-0.042657651007175446,-0.0003086955694016069,0.0033187158405780792,-0.040995169430971146,-0.05463815852999687,0.00134438241366297,-0.001285980804823339,-0.0020138632971793413,-0.018039043992757797,-0.0018339138478040695,-0.013975609093904495,-0.00451941043138504,0.0073299952782690525,0.043166033923625946,0.04111652076244354,-0.05235334858298302,-0.031343068927526474,-0.037932977080345154,0.03238699957728386,0.07230247557163239,0.07272489368915558,0.06754337251186371,-0.0398542657494545,-0.05352047458291054,-0.03233828395605087,0.03640954568982124,-0.038684993982315063,-0.0505637526512146,0.015635322779417038,-0.03148715943098068,0.021914396435022354,0.012743848375976086,-0.010262420400977135,0.02632240206003189,0.021228857338428497,0.009029675275087357,0.039864152669906616,-0.0408601276576519,-0.008121814578771591,-0.033648278564214706,-0.050637055188417435,-0.04139391705393791,0.0035614483058452606,0.059556350111961365,-0.011839544400572777,0.0015941379824653268,-0.040340356528759,-0.001482716528698802,-0.022552387788891792,0.07045003026723862,0.03879023715853691,0.007369749713689089,-0.08899303525686264,-0.02042042277753353,-0.02391117252409458,0.011150812730193138,-0.008348122239112854,0.02549555152654648,-0.008320849388837814,-0.050968632102012634,0.0176825113594532,-0.055053867399692535,-0.06770021468400955,0.028405336663126945,0.004046253394335508,-0.032066572457551956,-0.005639426410198212,0.06283268332481384,-0.007339959032833576,-0.00938628613948822,-0.012925777584314346,0.062069859355688095,0.024278543889522552,-0.017633944749832153,0.057224780321121216,0.006150143686681986,-0.060791388154029846,-0.004294289741665125,-0.034645263105630875,-0.04582561179995537,0.02152390405535698,-0.07133519649505615,-0.04478681832551956,-0.03477511554956436,0.016542160883545876,-0.0010136126074939966,-0.0016550914151594043,-0.02961207740008831,0.011468593962490559,-0.018168695271015167,-0.013496024534106255,0.0237088892608881,0.03879417106509209,0.026940155774354935,0.0625719428062439,-0.027223436161875725,0.0012317103100940585,-0.04505050927400589,0.014677075669169426,0.018104568123817444,-0.03610667213797569,-0.013111130334436893,0.01616298221051693,0.0071426331996917725,-0.03217485919594765,0.036349184811115265,0.020844953134655952,0.07895709574222565,-0.0005156543338671327,0.021244458854198456,0.02241302840411663,0.0643918439745903,-0.11716263741254807,0.018450723960995674,-0.03292066231369972,0.014434454031288624,-0.02257617749273777,-0.05737907811999321,0.00888025388121605,0.003572403686121106,-0.03570087254047394,0.0017153960652649403,0.006796150468289852,-0.014244024641811848,-0.0047402591444551945,0.03092232719063759,0.033836424350738525,-0.004553026054054499,0.02151697874069214,0.08008141070604324,-0.04776136204600334,0.002222814131528139,-0.0004999456577934325,-0.041622769087553024,-0.008288348093628883,-0.008925761096179485,-0.0031834503170102835,0.03870560601353645,-0.003556708339601755,0.007396838627755642,0.04889364913105965,-0.03005361370742321,-0.046635374426841736,0.021386396139860153,-0.024878857657313347,-0.0418022982776165,-0.016570845618844032,-0.012174301780760288,-0.04169536754488945,0.06472144275903702,0.026094278320670128,0.05744113028049469,-0.07530281692743301,0.01863073743879795,-0.08235932886600494,-0.006554106716066599,-0.0390702560544014,0.007333190180361271,-0.013325684703886509,-0.008861149661242962,0.02179458737373352,0.013475699350237846,0.03662410005927086,-0.026300836354494095,-0.009879963472485542,-0.04614302143454552,-0.036257412284612656,0.013075677677989006,-0.020644057542085648,-7.841351064247032e-33,-0.046756111085414886,0.010924994014203548,0.013866943307220936,0.03055734373629093,0.040391962975263596,-0.04049176722764969,-0.03970942273736,-0.015382346697151661,-0.0010578633518889546,0.042048271745443344,-0.011180785484611988,-0.02221941016614437,-0.0010051974095404148,-0.026739461347460747,0.01990891806781292,0.01038980670273304,0.05591817572712898,-0.024851489812135696,0.003501748200505972,0.0004887190880253911,-0.03554743155837059,0.03631677106022835,0.022060174494981766,-0.051840540021657944,0.017109567299485207,-0.011602438054978848,-0.03277836740016937,-0.0330081544816494,0.058499205857515335,0.03954899311065674,0.024224229156970978,-0.039445649832487106,0.003624568460509181,-0.0581270307302475,0.03213590756058693,0.02993638627231121,-0.11306951195001602,0.03133771941065788,0.014855260960757732,0.038410380482673645,0.08631246536970139,-0.02437439374625683,0.001162869157269597,0.012369883246719837,-0.04027779772877693,0.027405744418501854,0.04353976994752884,-0.03624056652188301,-0.029878975823521614,-0.04289598762989044,0.01482458133250475,0.017737487331032753,-0.022900450974702835,0.07023871690034866,0.05073818564414978,-0.02349596843123436,0.0032178577966988087,0.012329756282269955,-0.061524130403995514,0.010592806152999401,-0.007095370441675186,-0.025637656450271606,0.007391957566142082,0.020484445616602898,0.03660788759589195,0.02133171632885933,-0.05325770750641823,0.07726100087165833,0.029374541714787483,-0.0006803409778513014,-0.0057884808629751205,-0.0021483206655830145,-0.03643280640244484,-0.049291521310806274,-0.008135786280035973,-0.010646751150488853,0.00048664951464161277,0.07126589119434357,-0.07526315748691559,0.04890764132142067,-0.02796163223683834,0.003053391817957163,-0.0418415330350399,0.002533630933612585,0.029308531433343887,0.012922000139951706,-0.020522596314549446,-0.03571055456995964,0.006305277347564697,-0.028296425938606262,-0.017499661073088646,0.020307887345552444,-0.07042502611875534,-0.004751050844788551,-0.032308198511600494,-0.020321089774370193,-0.004377178847789764,-0.002035462763160467,-0.010543684475123882,-0.006831763777881861,0.011904973536729813,-0.016451077535748482,-0.011214397847652435,0.0256698876619339,-0.008720156736671925,-0.003691592486575246,0.025448093190789223,-0.023691905662417412,-0.1050807312130928,0.010297848843038082,0.03522111475467682,-0.03250260278582573,0.0018145764479413629,-0.049480050802230835,-0.05110158026218414,-0.02980024740099907,0.004983504302799702,-0.002846002345904708,0.02027043327689171,-0.026887036859989166,0.04799743741750717,-0.00865998212248087,0.022208964452147484,0.0010929374257102609,0.02063751220703125,-0.022793540731072426,-0.05843592435121536,0.014774286188185215,0.08313435316085815,0.03923173248767853,-0.015149022452533245,-0.011248349212110043,3.676402684504865e-7,0.07530535757541656,0.03156646341085434,0.003922146745026112,-0.036584071815013885,0.02875359356403351,0.04802964627742767,-0.0272146575152874,-0.017628110945224762,-0.08418374508619308,-0.00633662985637784,0.05599987879395485,-0.008616362698376179,-0.005919665563851595,0.008340409956872463,0.03022654913365841,-0.016235873103141785,0.042605213820934296,-0.03640753775835037,-0.015672868117690086,0.022809410467743874,-0.005599077325314283,-0.042948026210069656,-0.0029439132194966078,-0.0054804980754852295,0.019986450672149658,0.020758550614118576,-0.029692698270082474,-0.0491856150329113,0.08501510322093964,-0.01142529584467411,0.004036932718008757,0.016345839947462082,-0.03929656371474266,-0.05125557631254196,-0.005935232155025005,-0.03514925017952919,-0.03344346210360527,0.0627642571926117,-0.0353822223842144,0.06928518414497375,0.026485683396458626,-0.1309669464826584,0.005031741689890623,-0.08446486294269562,-0.0035860412754118443,0.04153061658143997,-0.03622874617576599,0.036402758210897446,-0.07986878603696823,-0.005014368332922459,0.012497232295572758,0.022227909415960312,-0.02176959067583084,-0.062110304832458496,0.004913566168397665,-0.0366341657936573,-0.010485186241567135,-0.015469531528651714,0.040596939623355865,0.016405653208494186,0.026849526911973953,-0.018672708421945572,-0.03403659909963608,0.006498582661151886,0.018950525671243668,0.014215659350156784,0.001794664072804153,3.529432808603457e-34,-0.002371271140873432,-0.0051498101092875,-0.019452331587672234,0.028190763667225838,0.0006692572496831417,-0.04228181764483452,-0.009563405998051167,-0.032693784683942795,0.02416958101093769,-0.03778836131095886,0.024968594312667847]'
SET
  @HasCustomProps_cdb57ddc = 0
SET
  @HasCustomEvents_cdb57ddc = 0
SET
  @RequiresData_cdb57ddc = 0
SET
  @DependencyCount_cdb57ddc = 0
SET
  @TechnicalDesignVectorEmbeddingModelID_cdb57ddc = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @FunctionalRequirementsVectorEmbeddingModelID_cdb57ddc = N'1D45AA65-41EC-4572-9ECD-AB2826C9B059'
SET
  @HasRequiredCustomProps_cdb57ddc = 0
EXEC [${flyway:defaultSchema}].spCreateComponent @ID = @ID_cdb57ddc,
  @Namespace = @Namespace_cdb57ddc,
  @Name = @Name_cdb57ddc,
  @Version = @Version_cdb57ddc,
  @VersionSequence = @VersionSequence_cdb57ddc,
  @Title = @Title_cdb57ddc,
  @Description = @Description_cdb57ddc,
  @Type = @Type_cdb57ddc,
  @Status = @Status_cdb57ddc,
  @DeveloperName = @DeveloperName_cdb57ddc,
  @DeveloperEmail = @DeveloperEmail_cdb57ddc,
  @DeveloperOrganization = @DeveloperOrganization_cdb57ddc,
  @SourceRegistryID = @SourceRegistryID_cdb57ddc,
  @ReplicatedAt = @ReplicatedAt_cdb57ddc,
  @LastSyncedAt = @LastSyncedAt_cdb57ddc,
  @Specification = @Specification_cdb57ddc,
  @FunctionalRequirements = @FunctionalRequirements_cdb57ddc,
  @TechnicalDesign = @TechnicalDesign_cdb57ddc,
  @FunctionalRequirementsVector = @FunctionalRequirementsVector_cdb57ddc,
  @TechnicalDesignVector = @TechnicalDesignVector_cdb57ddc,
  @HasCustomProps = @HasCustomProps_cdb57ddc,
  @HasCustomEvents = @HasCustomEvents_cdb57ddc,
  @RequiresData = @RequiresData_cdb57ddc,
  @DependencyCount = @DependencyCount_cdb57ddc,
  @TechnicalDesignVectorEmbeddingModelID = @TechnicalDesignVectorEmbeddingModelID_cdb57ddc,
  @FunctionalRequirementsVectorEmbeddingModelID = @FunctionalRequirementsVectorEmbeddingModelID_cdb57ddc,
  @HasRequiredCustomProps = @HasRequiredCustomProps_cdb57ddc;


-- End of SQL Logging Session
-- Session ID: 95ed5996-c37b-4f95-8eaf-b676e978e0b6
-- Completed: 2025-09-10T21:57:34.491Z
-- Duration: 8678ms
-- Total Statements: 7
